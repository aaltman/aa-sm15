<DIV class=mYVXT style="BOX-SIZING: border-box; WIDTH: 1271px; VERTICAL-ALIGN: middle; DISPLAY: table-cell">
<DIV tabIndex=-1 class="LS81yb VICjCf j5pSsc db35Fc" style="BOX-SIZING: border-box; MAX-WIDTH: 1280px; WIDTH: 1271px; OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 48px; MARGIN: 0px auto; OUTLINE-COLOR: invert; PADDING-RIGHT: 48px">
<DIV class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd purZT-AhqUyc-II5mzb ZcASvf-AhqUyc-II5mzb pSzOP-AhqUyc-qWD73c Ktthjf-AhqUyc-qWD73c JNdkSc SQVYQc" style="BOX-SIZING: border-box; WIDTH: 1175px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d">
<DIV class="oKdM2c ZZyype Kzv0Me" style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; MAX-WIDTH: 1280px; WIDTH: 1145px; MARGIN-TOP: 0px">
<DIV id=h.3a1d27e4f28c40eb_1376 class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd jXK9ad D2fZ2 zu5uec OjCsFc dmUFtb wHaque g5GTcb JYTMs" style="BOX-SIZING: border-box; WIDTH: 1145px; VERTICAL-ALIGN: top; WHITE-SPACE: pre-wrap; POSITION: relative; PADDING-TOP: 1px; PADDING-LEFT: 1px; DISPLAY: inline-block; PADDING-RIGHT: 1px">
<DIV class=jXK9ad-SmKAyb style="BOX-SIZING: border-box; WIDTH: 1145px">
<DIV class="tyJCtd mGzaTb Depvyb baZpAe lkHyyc" style="BOX-SIZING: border-box; WIDTH: 1145px; POSITION: relative; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; overflow-wrap: break-word">
<H1 id=h.p_ID_13 class="CDt4Ke zfr3Q duRjpb" style='BOX-SIZING: border-box; FONT-SIZE: 40pt; TEXT-DECORATION: ; BORDER-TOP: rgb(240,240,240) 5px; FONT-FAMILY: "Playfair Display"; BORDER-BOTTOM: rgb(240,240,240) 5px; POSITION: relative; FONT-WEIGHT: 700; COLOR: rgb(15,15,15); OUTLINE-WIDTH: medium; PADDING-BOTTOM: 13px; TEXT-ALIGN: center; PADDING-TOP: 13px; OUTLINE-STYLE: none; MARGIN: 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.06; font-variant-ligatures: none' dir=ltr>Wait-free Object Storage with Single-word Atomic Operations</H1></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION><SECTION id=h.3a1d27e4f28c40eb_1377 class=yaqOZd style="BOX-SIZING: border-box; WIDTH: 1271px; TABLE-LAYOUT: fixed; POSITION: relative; DISPLAY: table; background-size: cover">
<DIV class=IFuOkc style="BOX-SIZING: border-box; HEIGHT: 10548px; WIDTH: 1271px; TABLE-LAYOUT: fixed; POSITION: absolute; LEFT: 0px; DISPLAY: table-cell; TOP: 0px; background-size: cover; pointer-events: none"></DIV>
<DIV class=mYVXT style="BOX-SIZING: border-box; WIDTH: 1271px; VERTICAL-ALIGN: middle; DISPLAY: table-cell">
<DIV tabIndex=-1 class="LS81yb VICjCf j5pSsc db35Fc" style="BOX-SIZING: border-box; MAX-WIDTH: 1280px; WIDTH: 1271px; OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 48px; MARGIN: 0px auto; OUTLINE-COLOR: invert; PADDING-RIGHT: 48px">
<DIV class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd purZT-AhqUyc-II5mzb ZcASvf-AhqUyc-II5mzb pSzOP-AhqUyc-qWD73c Ktthjf-AhqUyc-qWD73c JNdkSc SQVYQc" style="BOX-SIZING: border-box; WIDTH: 1175px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d">
<DIV class="oKdM2c ZZyype Kzv0Me" style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; MAX-WIDTH: 1280px; WIDTH: 1145px; MARGIN-TOP: 0px">
<DIV id=h.3a1d27e4f28c40eb_1380 class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd jXK9ad D2fZ2 zu5uec OjCsFc dmUFtb wHaque g5GTcb JYTMs" style="BOX-SIZING: border-box; WIDTH: 1145px; VERTICAL-ALIGN: top; WHITE-SPACE: pre-wrap; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class=jXK9ad-SmKAyb style="BOX-SIZING: border-box; WIDTH: 1145px">
<DIV class="tyJCtd mGzaTb Depvyb baZpAe" style="BOX-SIZING: border-box; WIDTH: 1145px; POSITION: relative; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; overflow-wrap: break-word">
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; PADDING-TOP: 0px; OUTLINE-STYLE: none; MARGIN: 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>By object storage I mean a component that can be used in the following scenario: </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>object_storage g_s; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// a plurality of "reader" threads periodically acquire and release a </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// reference to "a current" version of some global object </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>while (...) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>T* obj = g_s.acquire(); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// do something with obj </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>g_s.release(obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// a "writer" thread periodically (but infrequently) updates the </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>object </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>while (...) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>T* old_obj = g_s.write_lock(); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>T* new_obj = create_new_object(old_obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>g_s.write_unlock(new_obj); // installs new version of the object </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Such a component is useful to manage such objects like global application settings (that still can be episodically updates by an&nbsp;administrator, but constantly used everywhere), or routing table in a&nbsp;network router (which is updated each X seconds/minutes, but read during processing of each packet), etc. </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>And, yes, the component uses MVCC (multi-version concurrency control), that is at each moment in time there can be several alive version of an object (and it's generally a good idea in a concurrent system). Of course you can implement it with a mutex + a reference counted object in the following way: </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::mutex g_mtx; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::mutex g_write_mtx; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::shared_ptr&lt;T&gt; g_ptr; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::shared_ptr&lt;T&gt; read_lock() </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::mutex::scoped_lock l (g_mtx); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>return g_ptr; // shared_ptr copy </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::shared_ptr&lt;T&gt; write_lock() </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>g_write_mtx.lock(); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::mutex::scoped_lock l (g_mtx); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>return g_ptr; // shared_ptr copy </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>void write_unlock(std::shared_ptr&lt;T&gt; const&amp; ptr) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::mutex::scoped_lock l (g_mtx); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>g_ptr = ptr; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>g_write_mtx.unlock(); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Simple. But performance is not all that great. There is at least 1 </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>atomic RMW on a heavy contented memory location for mutex lock/unlock </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>+ 1 atomic RMW on a heavy contended reference counter. Plus some </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>possibility of blocking on the mutex. </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>The wait-free storage algorithm issues only 1 atomic RMW per acquire/ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>release + contention is somewhat distributed since it uses so called </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>"differential reference counting" (DRC), that is all "+1" go to one </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>counter, while all "-1" go to another counter. </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>I posted a <SPAN class=" aw5Odc" style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: "><A class=XqQF9c style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; pointer-events: all" href="http://www.google.com/url?sa=D&amp;q=http://groups.google.com/group/lock-free/browse_frm/thread/f20a631b3b4c3813" target=_blank>similar algorithm</A></SPAN> some time ago. But the problem is that general-purpose DRC requires double-word </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>atomic RMW operations, and they are not available on some </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>architectures as the saying goes. </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>DRC generally combines pointer to the current version of an object and </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>"outer" reference counter into a single memory "word" (that can be </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>manipulated atomically) (while "inner" reference counter resides in </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>the object). The idea is to limit number of alive versions of an </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>object (which is once again generally a good idea, for example, you </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>expect there to be only 1 alive version most of the time, and 2 </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>versions some time after update, now, if number of alive versions </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>starts to grow unboundedly, something weird goes and you can just run </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>out of memory). Now, when we have at most, say, 4 versions of an </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>object, we can store an index (0..3) instead of a pointer, which frees </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>all other bits for the counter. </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>The rest is pie (to the extent possible for lockfree algorithms). </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Here is an implementation for MSVC/Win32: </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>#define OBJECT_COUNT 4 </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>#define OBJECT_MASK (OBJECT_COUNT-1) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>#define COUNT_MASK (~OBJECT_MASK) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>#define COUNT_INC OBJECT_COUNT </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>#define PERSISTENT 1 </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>#define TEMPORAL 2 </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>typedef struct lf_object_t </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t volatile rc; // "inner" counter </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_object_t* volatile* back_ptr; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>void (*dtor)(void* obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} lf_object_t; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>struct lf_store_t </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t volatile state; // "outer" counter + index to </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_t::objects </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_object_t* volatile objects [OBJECT_COUNT]; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>CRITICAL_SECTION write_mtx; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>void lf_store_create (lf_store_t* </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>store, lf_object_t* obj, void(*dtor)(void*)) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>size_t i; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>store-&gt;state = 0; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>InitializeCriticalSection(&amp;store-&gt;write_mtx); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>store-&gt;objects[0] = obj; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>for (i = 1; i != OBJECT_COUNT; i += 1) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>store-&gt;objects[i] = 0; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj-&gt;rc = PERSISTENT; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj-&gt;back_ptr = &amp;store-&gt;objects[0]; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj-&gt;dtor = dtor; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>static void lf_store_release_object (lf_object_t* obj) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(obj-&gt;rc == 0); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(obj-&gt;back_ptr[0] == obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj-&gt;back_ptr[0] = 0; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj-&gt;dtor(obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>void lf_store_destroy (lf_store_t* </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>store) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t idx; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_object_t* obj; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>idx = store-&gt;state &amp; OBJECT_MASK; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj = store-&gt;objects[idx]; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj-&gt;rc -= (store-&gt;state &amp; COUNT_MASK) / OBJECT_COUNT * TEMPORAL + </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>PERSISTENT; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_release_object(obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>DeleteCriticalSection(&amp;store-&gt;write_mtx); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_object_t* lf_store_read_acquire (lf_store_t* </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>store) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t prev; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t idx; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// completely wait-free </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// increment outer counter and simultaneously read index of the </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>current object </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>prev = (uintptr_t)_InterlockedExchangeAdd((long volatile*)&amp;store- </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>&gt;state, COUNT_INC); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>idx = prev &amp; OBJECT_MASK; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>return store-&gt;objects[idx]; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>void lf_store_read_release (lf_object_t* obj) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t prev; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// increment inner counter </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>prev = (uintptr_t)_InterlockedExchangeAdd((long volatile*)&amp;obj- </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>&gt;rc, TEMPORAL) + TEMPORAL; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>if (prev == 0) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_release_object(obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_object_t* lf_store_write_lock (lf_store_t* </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>store) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t idx; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>EnterCriticalSection(&amp;store-&gt;write_mtx); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>idx = store-&gt;state &amp; OBJECT_MASK; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>return store-&gt;objects[idx]; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>void lf_store_write_unlock (lf_store_t* </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>store, lf_object_t* obj, void(*dtor)(void*)) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t prev; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t idx; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t old_cnt; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t old_idx; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t cnt_dif; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>uintptr_t cnt_res; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_object_t* old_obj; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// find free object slot </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>for (;;) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>for (idx = 0; idx != OBJECT_COUNT; idx += 1) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>if (store-&gt;objects[idx] == 0) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>break; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>if (idx != OBJECT_COUNT) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>break; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>SwitchToThread(); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// prepare the object for publication </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>store-&gt;objects[idx] = obj; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj-&gt;rc = PERSISTENT; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj-&gt;back_ptr = &amp;store-&gt;objects[idx]; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>obj-&gt;dtor = dtor; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// publish the object </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// and simultaneously grab previous value of the outer counter </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>prev = (uintptr_t)_InterlockedExchange((long volatile*)&amp;store- </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>&gt;state, idx); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>old_cnt = prev &amp; COUNT_MASK; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>old_idx = prev &amp; OBJECT_MASK; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>old_obj = store-&gt;objects[old_idx]; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(old_idx != idx); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(old_obj-&gt;back_ptr == &amp;store-&gt;objects[old_idx]); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// transfer value of the outer counter to the inner counter </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>// only now object's inner counter can drop to zero </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cnt_dif = (uintptr_t)-(intptr_t)(old_cnt / OBJECT_COUNT * TEMPORAL </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>+ PERSISTENT); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cnt_res = (uintptr_t)_InterlockedExchangeAdd((long </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>volatile*)&amp;old_obj-&gt;rc, cnt_dif) + cnt_dif; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>LeaveCriticalSection(&amp;store-&gt;write_mtx); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>if (cnt_res == 0) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_release_object(old_obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Some additional comments. So when there are already OBJECT_COUNT alive </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>objects, and a writer wants to install a new version, he waits until </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>at least one old version will go away (some form of automatic overload </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>control). However, be careful - that introduces implicit dependency </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>between threads and can lead to unexpected deadlocks (writer waits for </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>readers to release an old version, while readers are blocked on some </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>resource acquired by the writer). </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>The algorithm can be easily modified to incorporate an object pool, so </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>that there are always OBJECT_COUNT objects that are are reused as </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>needed (no need to constantly allocate/deallocate objects). </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_t::objects always holds pointers to objects, while separate </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>parallel array of atomic flags tracks in-use/free indication (or </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>perhaps lsb of lf_store_t::objects is used as in-use/free flag). </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>I did not test it with Relacy Race Detector: </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>http://groups.google.com/group/relacy </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>so potentially there are some minor bugs, but I believe the algorithm </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>is working as a whole. </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Here is small single-threaded test-case + necessary includes: </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>#include &lt;windows.h&gt; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>#include &lt;intrin.h&gt; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>#include &lt;assert.h&gt; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>static long volatile my_object_count; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>struct my_object : lf_object_t </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>int data; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>my_object(int data) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>: data(data) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>_InterlockedIncrement(&amp;my_object_count); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>~my_object() </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>_InterlockedDecrement(&amp;my_object_count); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>static void dtor(void* obj) </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>delete static_cast&lt;my_object*&gt;(obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>int main() </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_t store; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_create(&amp;store, new my_object (1), &amp;my_object::dtor); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>my_object* obj = (my_object*)lf_store_read_acquire(&amp;store); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(obj-&gt;data == 1); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_read_release(obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>my_object* obj = (my_object*)lf_store_write_lock(&amp;store); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(obj-&gt;data == 1); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_write_unlock(&amp;store, new my_object (2), </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>&amp;my_object::dtor); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>my_object* obj = (my_object*)lf_store_read_acquire(&amp;store); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(obj-&gt;data == 2); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>my_object* obj2 = (my_object*)lf_store_write_lock(&amp;store); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(obj2-&gt;data == 2); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_write_unlock(&amp;store, new my_object (3), </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>&amp;my_object::dtor); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_read_release(obj); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{ </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>my_object* obj = (my_object*)lf_store_write_lock(&amp;store); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(obj-&gt;data == 3); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_write_unlock(&amp;store, new my_object (4), </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>&amp;my_object::dtor); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>lf_store_destroy(&amp;store); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert(my_object_count == 0); </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; PADDING-BOTTOM: 0px; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>} </P></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION><SECTION id=h.3a1d27e4f28c40eb_1381 class=yaqOZd style="BOX-SIZING: border-box; WIDTH: 1271px; TABLE-LAYOUT: fixed; POSITION: relative; DISPLAY: table; background-size: cover">
<DIV class=IFuOkc style="BOX-SIZING: border-box; HEIGHT: 439px; WIDTH: 1271px; TABLE-LAYOUT: fixed; POSITION: absolute; LEFT: 0px; DISPLAY: table-cell; TOP: 0px; background-size: cover; pointer-events: none"></DIV>
<DIV class=mYVXT style="BOX-SIZING: border-box; WIDTH: 1271px; VERTICAL-ALIGN: middle; DISPLAY: table-cell">
<DIV tabIndex=-1 class="LS81yb VICjCf j5pSsc db35Fc" style="BOX-SIZING: border-box; MAX-WIDTH: 1280px; WIDTH: 1271px; OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 48px; MARGIN: 0px auto; OUTLINE-COLOR: invert; PADDING-RIGHT: 48px">
<DIV class="hJDwNd-AhqUyc-c5RTEf Ft7HRd-AhqUyc-c5RTEf JNdkSc SQVYQc L6cTce-purZT L6cTce-pSzOP" style="BOX-SIZING: border-box; WIDTH: 293px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d"></DIV></DIV></DIV>
<DIV class="hJDwNd-AhqUyc-wNfPc Ft7HRd-AhqUyc-wNfPc purZT-AhqUyc-II5mzb ZcASvf-AhqUyc-II5mzb pSzOP-AhqUyc-wNfPc Ktthjf-AhqUyc-wNfPc JNdkSc SQVYQc" style="BOX-SIZING: border-box; WIDTH: 489px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d">
<DIV class="oKdM2c ZZyype Kzv0Me" style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; MAX-WIDTH: 1280px; WIDTH: 460px; MARGIN-TOP: 0px">
<DIV id=h.3a1d27e4f28c40eb_1384 class="hJDwNd-AhqUyc-wNfPc Ft7HRd-AhqUyc-wNfPc pSzOP-AhqUyc-wNfPc Ktthjf-AhqUyc-wNfPc jXK9ad D2fZ2 zu5uec OjCsFc dmUFtb wHaque g5GTcb" style="BOX-SIZING: border-box; WIDTH: 460px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class=jXK9ad-SmKAyb style="BOX-SIZING: border-box; WIDTH: 460px">
<DIV class="tyJCtd OWlOyc baZpAe" style="BOX-SIZING: border-box; WIDTH: 460px; POSITION: relative">
<DIV style="BOX-SIZING: border-box" jsaction="rcuQ6b:rcuQ6b;" jscontroller="VYKRW">
<DIV class="WIdY2d M1aSXe" style="BOX-SIZING: border-box; OVERFLOW: hidden; HEIGHT: 391px; WIDTH: 460px; POSITION: relative; LINE-HEIGHT: 0">
<DIV style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; PADDING-TOP: 391px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" jsname="WXxXjd"></DIV><BR class=Apple-interchange-newline></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV>