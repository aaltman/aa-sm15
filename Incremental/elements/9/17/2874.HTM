<H3><B><FONT class=extract>1.2 How to improve latency</FONT></B></H3>
<UL>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Better paths:</B><SPAN style="FONT-WEIGHT: 400"> minimizing the number of nodes a request has to travel through can help improve latencies.&nbsp;</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Caching:</B><SPAN style="FONT-WEIGHT: 400"> caching can dramatically improve latencies when applied correctly, by storing a copy of repeatedly accessed data for faster retrieval.</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Protocol choice</B><SPAN style="FONT-WEIGHT: 400"> - certain protocols, like HTTP/2, intentionally reduce the amount of protocol overhead associated with a request, and can keep latency lower. TCP also has congestion avoidance features that can help mitigate congestion-related causes of high latencies.</SPAN></FONT></LI></UL>
<H2><A name=throughput></A><B><FONT class=extract>2. Throughput</FONT></B></H2>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Throughput is the amount of data that is successfully transmitted through a system in a certain amount of time, measured in bits per second (bps). Throughput is a measurement of how much is actually transmitted, and it is not the theoretical capacity (bandwidth) of the system.&nbsp;</FONT></SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Latency, throughput, and bandwidth can be easy to confuse, but it&#8217;s very similar to a system you&#8217;re probably already familiar with: traffic of cars on the road. Latency is how long it takes you to drive from A to B, bandwidth is how wide the roads are, and throughput is how many cars are on the road right now.</FONT></SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract><IMG alt="Latency, bandwidth, and throughput" src="https://d3no4ktch0fdq4.cloudfront.net/public/CACHE/images/blog-articles/content-images/1_2x_605a241d-9824-4eec-aaf7-ca2eb9191c25_1024x1024/2c1cd310ad2cc3b13c1e8c17d54eb769.webp" width=660 height=636 loading="lazy"></FONT></SPAN></P>
<H3><B><FONT class=extract>2.1 What causes low throughput</FONT></B></H3>
<UL>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Congestion</B><SPAN style="FONT-WEIGHT: 400"> - just like road traffic is caused by many people trying to get to the same destination, low throughput in a software system can be caused by too many requests on the same network. Essentially, the hardware can't handle the number of requests going through it.</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Protocol overhead</B><SPAN style="FONT-WEIGHT: 400"> - if the protocols used in message transmission require handshakes and other back-and-forth communication patterns, the network can be overloaded with overhead from just the protocols and not the message content itself.</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Latency</B><SPAN style="FONT-WEIGHT: 400"> - since throughput is the amount of data transmitted over a set time period, high latencies (i.e. slow data transmission speeds) will reduce the amount of data that is transmitted overall.</SPAN></FONT></LI></UL>
<H3><B><FONT class=extract>2.2 How to improve throughput</FONT></B></H3>
<UL>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Increasing bandwidth</B><SPAN style="FONT-WEIGHT: 400"> - if you improve the capacity of a system to transport data (bandwidth), then the actual amount of data transferred (throughput) will increase too. This generally means adding new hardware or upgrading the hardware at bottlenecks in the system.</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Improving latency</B><SPAN style="FONT-WEIGHT: 400"> - since latency limits throughput, improving latency can improve throughput.</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Protocol choice</B><SPAN style="FONT-WEIGHT: 400"> - TCP has congestion avoidance features that can help mitigate congestion that causes low throughput.</SPAN></FONT></LI></UL>
<H2><A name=availability></A><B><FONT class=extract>3. Availability</FONT></B></H2>
<P><FONT class=extract><SPAN style="FONT-WEIGHT: 400">Availability is the amount of time that a system is able to respond, that is the ratio of</SPAN><SPAN style="FONT-WEIGHT: 400">&nbsp;</SPAN><SPAN style="FONT-WEIGHT: 400">Uptime / (Uptime + Downtime)</SPAN><SPAN style="FONT-WEIGHT: 400">. Availability is a critical metric of performance for a service, because downtime can both harm users who rely on the systems and cause a business to lose large profits in a short amount of time. </SPAN><SPAN style="FONT-WEIGHT: 400">Availability is so important that infrastructure services like <A href="https://aws.amazon.com/compute/sla/">AWS</A> and <A href="https://cloud.google.com/compute/sla">Google Cloud</A> will guarantee certain uptimes in their service-level agreements (SLAs).</SPAN></FONT></P>
<P><FONT class=extract><SPAN style="FONT-WEIGHT: 400">The gold standard for "highly available" systems is the </SPAN><I><SPAN style="FONT-WEIGHT: 400">five nines</SPAN></I><SPAN style="FONT-WEIGHT: 400">: 99.999% uptime. This might seem like an excessively precise number, but 90% uptime is about 17 hours of downtime a week, and 99% is about 1.7 hours of downtime a week, which is a fair amount of time for a service to be </SPAN><I><SPAN style="FONT-WEIGHT: 400">regularly</SPAN></I><SPAN style="FONT-WEIGHT: 400"> unavailable.&nbsp;</SPAN></FONT></P>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Five nines availability can be misleading though if it&#8217;s not balanced by other aspects of performance and user experience. Uptime doesn&#8217;t matter that much if it takes a minute to respond to every user request. It&#8217;s important to make sure good latency and throughput are maintained while designing a highly available system.&nbsp;</FONT></SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>It&#8217;s also important to think about when downtimes happen. A business will be notably affected if all downtimes occur at unfortunate high-use moments, like major shopping holidays. It can be just as advantageous to plan longer downtimes for maintenance at low-activity times and not achieve five nines availability, if it means the system will be able to function properly under peak use.</FONT></SPAN></P>
<H3><B><FONT class=extract>3.1 What causes low availability</FONT></B></H3>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Downtime happens when part of the service breaks, like a hardware component fails, or a deployment goes wrong so the software is inconsistent. Systems can fail in many ways, and here are some of the most common:</FONT></SPAN></P>
<UL>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Hardware failure</B><SPAN style="FONT-WEIGHT: 400"> - computer components eventually fail, and this can take down a key server causing the whole system to stop working. A whole system can also be taken down if there&#8217;s a power outage or natural disaster at the data center.</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Software bugs</B><SPAN style="FONT-WEIGHT: 400"> - when something in the code is wrong, a request can run into a bug and the code can be killed (e.g. a null pointer is dereferenced)&nbsp;&nbsp;</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Complex architectures</B><SPAN style="FONT-WEIGHT: 400"> - the more complex a system design is, the more points of failure there are, and the harder it gets to synchronize more&nbsp;computers and make them fault tolerant to other computers in the system failing.&nbsp;</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Dependent service outages</B><SPAN style="FONT-WEIGHT: 400"> - an outage of a service that the system relies on, like DNS or an authorization server, can cause the system to become unavailable even if nothing is broken internally.&nbsp;</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Request overload</B><SPAN style="FONT-WEIGHT: 400"> - if a system reaches its maximum capacity, it can start failing to respond to some requests. Too many requests can also cause the computer to shut down if it runs out of a key resource and can&#8217;t process any more operations (e.g. the disk space fills up).</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Deployment issues</B><SPAN style="FONT-WEIGHT: 400">&nbsp;-&nbsp;when a deployment is conducted and the changes to software or configurations don&#8217;t go as expected, a number of problems can arise that could make the system unavailable. For example, deployment issues could put the servers in an inconsistent state, prevent them from starting, prevent them from talking to each other, or they might&nbsp;run short on&nbsp;resources.&nbsp;</SPAN></FONT></LI></UL>
<H3><B><FONT class=extract>3.2 How to improve availability</FONT></B></H3>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>The solution to partial system failure is redundancy - making sure that if something goes wrong there's a copy of it so the system can continue functioning. Redundancy has many components, including:</FONT></SPAN></P>
<UL>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Failover systems</B><SPAN style="FONT-WEIGHT: 400"> - duplicates of any part of the system that are switched to in the case of failure. These can be either hot failovers that run in parallel for immediate switch, or cold failovers that only start when needed.</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Clustering</B><SPAN style="FONT-WEIGHT: 400"> - running multiple instances of a part of the system, so if one node goes down the rest can manage without it.</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Backups</B><SPAN style="FONT-WEIGHT: 400"> - data backups and replication ensure that if the data storage fails, for example a power outage at the data center, there's another copy that can be accessed.</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Geographic redundancy</B><SPAN style="FONT-WEIGHT: 400"> - physically locating systems in different parts of the world, so if something happens that affects a region, there are redundant systems that still function.&nbsp;</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><FONT class=extract><B>Automatic testing, deployment, and rollbacks</B><SPAN style="FONT-WEIGHT: 400"> - to mitigate all the issues related to deploying new software or changing the architecture, it&#8217;s helpful to automate processes that catch software bugs, prevent human deployment errors, and automatically rollback to a previous stable deploy if something goes wrong.&nbsp;</SPAN></FONT></LI></UL>
<H2><A name=examples></A><B><FONT class=extract>4. Example latency, throughput, and availability questions</FONT></B></H2>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>The questions asked in system design interviews tend to begin with a broad problem or goal, so it&#8217;s unlikely that you&#8217;ll get an interview question that's entirely about latency, throughput, or availability. </FONT></SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>However, you may be asked to solve a problem where these topics will be&nbsp;important considerations. As a result, what you really need to know is WHEN you should bring them up and how you should approach them.</FONT></SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>To help you with this, we&#8217;ve compiled the below list of sample system design questions, where latency, throughput, or availability considerations are relevant. </FONT></SPAN></P>
<UL>
<LI style="FONT-WEIGHT: 400"><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Design Twitter timeline and search (</FONT></SPAN><A href="https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/twitter/README.md"><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Read the answer</FONT></SPAN></A><FONT class=extract><SPAN style="FONT-WEIGHT: 400">)</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Design Mint.com (</FONT></SPAN><A href="https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/mint/README.md"><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Read the answer</FONT></SPAN></A><FONT class=extract><SPAN style="FONT-WEIGHT: 400">)</SPAN> </FONT>
<LI style="FONT-WEIGHT: 400"><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Design DropBox (</FONT></SPAN><A href="https://www.geeksforgeeks.org/design-dropbox-a-system-design-interview-question/?ref=rp"><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>Read the answer</FONT></SPAN></A><SPAN style="FONT-WEIGHT: 400"><FONT class=extract>)</FONT></SPAN></LI></UL>