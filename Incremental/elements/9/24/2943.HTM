<b> : </b><B>1.2 Messaging-oriented middleware</B></H3>
<P><SPAN style="FONT-WEIGHT: 400">Any complex system will have different components, possibly running entirely different hardware and software, that need to be able to communicate with each other.&nbsp; </SPAN><B>Messaging-oriented middleware (MOM)</B><SPAN style="FONT-WEIGHT: 400"> enables this communication, much like the post office enables people to send each other letters. </SPAN><B>Producers</B><SPAN style="FONT-WEIGHT: 400"> hand off packets of data called </SPAN><B>messages </B><SPAN style="FONT-WEIGHT: 400">to the MOM which makes sure it&#8217;s delivered to the correct </SPAN><B>consumers</B><SPAN style="FONT-WEIGHT: 400">.</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400"><IMG alt=delivery src="https://d3no4ktch0fdq4.cloudfront.net/public/CACHE/images/blog-articles/content-images/Diagram_16_2x_d20f53c0-f6e7-484f-a423-4ec6e0bd0ef3_1024x1024/8407b593861455bc7a6707d3026f5469.webp" width=660 height=370 loading="lazy"></SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Message passing allows components to communicate </SPAN><I><SPAN style="FONT-WEIGHT: 400">asynchronously</SPAN></I><SPAN style="FONT-WEIGHT: 400">. In other words, a producer can send messages independently of the state of the consumer.</SPAN> <SPAN style="FONT-WEIGHT: 400">If the consumer is too busy or offline, a MOM will make sure the messages are delivered once the consumer becomes available again.</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Asynchronicity enables system components to be decoupled from each other. This adds resilience because, when one component fails, the others can continue functioning normally. It also adds data integrity because successful message passing isn&#8217;t dependent on the producer and consumer being responsive at the same time. </SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">The software that implements a MOM can be called a </SPAN><B>message broker</B><SPAN style="FONT-WEIGHT: 400">. Message brokers may implement just one, or several different kinds of message passing including both queues and pub-sub. Let&#8217;s take a look at how queues and pub-sub work.&nbsp;</SPAN>