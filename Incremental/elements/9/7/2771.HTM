<b> : </b>Context and problem</H2></DIV>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>In a distributed environment, calls to remote resources and services can fail due to transient faults, such as slow network connections, timeouts, or the resources being overcommitted or temporarily unavailable. These faults typically correct themselves after a short period of time, and a robust cloud application should be prepared to handle them by using a strategy such as the<SPAN>&nbsp;</SPAN><A style="CURSOR: pointer; TEXT-DECORATION: none; COLOR: ; OUTLINE-WIDTH: 0px; OUTLINE-COLOR: ; overflow-wrap: break-word" href="https://learn.microsoft.com/en-us/azure/architecture/patterns/retry" data-linktype="absolute-path">Retry pattern</A>.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>However, there can also be situations where faults are due to unanticipated events, and that might take much longer to fix. These faults can range in severity from a partial loss of connectivity to the complete failure of a service. In these situations it might be pointless for an application to continually retry an operation that is unlikely to succeed, and instead the application should quickly accept that the operation has failed and handle this failure accordingly.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>Additionally, if a service is very busy, failure in one part of the system might lead to cascading failures. For example, an operation that invokes a service could be configured to implement a timeout, and reply with a failure message if the service fails to respond within this period. However, this strategy could cause many concurrent requests to the same operation to be blocked until the timeout period expires. These blocked requests might hold critical system resources such as memory, threads, database connections, and so on. Consequently, these resources could become exhausted, causing failure of other possibly unrelated parts of the system that need to use the same resources. In these situations, it would be preferable for the operation to fail immediately, and only attempt to invoke the service if it's likely to succeed. Note that setting a shorter timeout might help to resolve this problem, but the timeout shouldn't be so short that the operation fails most of the time, even if the request to the service would eventually succeed.</P>
<DIV class=heading-wrapper style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; POSITION: relative; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' data-heading-level="h2"><A aria-label="Section titled: Solution" class="anchor-link docon docon-link" style="OVERFLOW: hidden; CURSOR: pointer; TEXT-DECORATION: none; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; FONT-FAMILY: docons; BORDER-RIGHT: 0px; FONT-VARIANT: normal; WIDTH: 1px; BORDER-BOTTOM: 0px; POSITION: absolute; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: ; OUTLINE-WIDTH: 0px; PADDING-BOTTOM: 0px; DIRECTION: ltr; FONT-STYLE: normal; TEXT-ALIGN: center; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; DISPLAY: inline-block; OUTLINE-COLOR: ; LINE-HEIGHT: 16px; PADDING-RIGHT: 0px; overflow-wrap: normal; speak: none; -webkit-font-smoothing: antialiased; transition: opacity 0.1s linear; inset-inline-start: -1.875rem; transform: translateY(-50%) scale(1); inset-block-start: 1.38125rem; clip-path: inset(50%); opacity: 0" href="https://learn.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker#solution"></A>