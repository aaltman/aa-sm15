<b> : </b>Example</H2></DIV>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>In a web application, several of the pages are populated with data retrieved from an external service. If the system implements minimal caching, most hits to these pages will cause a round trip to the service. Connections from the web application to the service could be configured with a timeout period (typically 60 seconds), and if the service doesn't respond in this time the logic in each web page will assume that the service is unavailable and throw an exception.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>However, if the service fails and the system is very busy, users could be forced to wait for up to 60 seconds before an exception occurs. Eventually resources such as memory, connections, and threads could be exhausted, preventing other users from connecting to the system, even if they aren't accessing pages that retrieve data from the service.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>Scaling the system by adding further web servers and implementing load balancing might delay when resources become exhausted, but it won't resolve the issue because user requests will still be unresponsive and all web servers could still eventually run out of resources.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>Wrapping the logic that connects to the service and retrieves the data in a circuit breaker could help to solve this problem and handle the service failure more elegantly. User requests will still fail, but they'll fail more quickly and the resources won't be blocked.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>The<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>CircuitBreaker</CODE><SPAN>&nbsp;</SPAN>class maintains state information about a circuit breaker in an object that implements the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>ICircuitBreakerStateStore</CODE><SPAN>&nbsp;</SPAN>interface shown in the following code.</P>
<DIV id=code-try-0 class=codeHeader style='BOX-SIZING: content-box; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-TOP-COLOR: ; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 16px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; BORDER-LEFT-COLOR: ; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); FONT-STYLE: normal; MIN-HEIGHT: 30px; ORPHANS: 2; WIDOWS: 2; DISPLAY: flex; BORDER-RIGHT-COLOR: ; LETTER-SPACING: normal; OUTLINE-COLOR: ; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; border-image-source: ; border-image-slice: ; border-image-width: ; border-image-outset: ; border-image-repeat: ; flex-direction: row' data-bi-name="code-header"><SPAN class=language style="PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 16px; DISPLAY: flex; OUTLINE-COLOR: ; PADDING-RIGHT: 16px; align-items: center; flex-grow: 1">C#</SPAN></DIV><PRE class=has-inner-focus style='OVERFLOW: auto; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace !important; WHITE-SPACE: pre; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); FONT-STYLE: normal; PADDING-TOP: 1px; PADDING-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; OUTLINE-COLOR: ; LINE-HEIGHT: 1.3571; PADDING-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: normal; -webkit-font-smoothing: auto; tab-size: 4; hyphens: none'><CODE class=lang-csharp style='FONT-SIZE: 1em; BORDER-TOP: 0px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; POSITION: relative; PADDING-BOTTOM: 0px; DIRECTION: ltr; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; DISPLAY: block; OUTLINE-COLOR: ; LINE-HEIGHT: 1.3571; PADDING-RIGHT: 0px'><SPAN style="OUTLINE-COLOR: "><SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">interface</SPAN> <SPAN class=hljs-title style="COLOR: rgb(0,104,129); OUTLINE-COLOR: ">ICircuitBreakerStateStore</SPAN>
{
  CircuitBreakerStateEnum State { <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">get</SPAN>; }

  Exception LastException { <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">get</SPAN>; }

  DateTime LastStateChangedDateUtc { <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">get</SPAN>; }

  <SPAN class=hljs-function style="OUTLINE-COLOR: "><SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">void</SPAN> <SPAN class=hljs-title style="COLOR: rgb(0,104,129); OUTLINE-COLOR: ">Trip</SPAN>(<SPAN class=hljs-params style="OUTLINE-COLOR: ">Exception ex</SPAN>)</SPAN>;

  <SPAN class=hljs-function style="OUTLINE-COLOR: "><SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">void</SPAN> <SPAN class=hljs-title style="COLOR: rgb(0,104,129); OUTLINE-COLOR: ">Reset</SPAN>(<SPAN class=hljs-params style="OUTLINE-COLOR: "></SPAN>)</SPAN>;

  <SPAN class=hljs-function style="OUTLINE-COLOR: "><SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">void</SPAN> <SPAN class=hljs-title style="COLOR: rgb(0,104,129); OUTLINE-COLOR: ">HalfOpen</SPAN>(<SPAN class=hljs-params style="OUTLINE-COLOR: "></SPAN>)</SPAN>;

  <SPAN class=hljs-built_in style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">bool</SPAN> IsClosed { <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">get</SPAN>; }
}
</SPAN></CODE></PRE>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>The<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>State</CODE><SPAN>&nbsp;</SPAN>property indicates the current state of the circuit breaker, and will be either<SPAN>&nbsp;</SPAN><STRONG style="FONT-WEIGHT: 600; OUTLINE-COLOR: ">Open</STRONG>,<SPAN>&nbsp;</SPAN><STRONG style="FONT-WEIGHT: 600; OUTLINE-COLOR: ">HalfOpen</STRONG>, or<SPAN>&nbsp;</SPAN><STRONG style="FONT-WEIGHT: 600; OUTLINE-COLOR: ">Closed</STRONG><SPAN>&nbsp;</SPAN>as defined by the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>CircuitBreakerStateEnum</CODE><SPAN>&nbsp;</SPAN>enumeration. The<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>IsClosed</CODE><SPAN>&nbsp;</SPAN>property should be true if the circuit breaker is closed, but false if it's open or half open. The<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>Trip</CODE><SPAN>&nbsp;</SPAN>method switches the state of the circuit breaker to the open state and records the exception that caused the change in state, together with the date and time that the exception occurred. The<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>LastException</CODE><SPAN>&nbsp;</SPAN>and the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>LastStateChangedDateUtc</CODE><SPAN>&nbsp;</SPAN>properties return this information. The<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>Reset</CODE><SPAN>&nbsp;</SPAN>method closes the circuit breaker, and the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>HalfOpen</CODE><SPAN>&nbsp;</SPAN>method sets the circuit breaker to half open.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>The<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>InMemoryCircuitBreakerStateStore</CODE><SPAN>&nbsp;</SPAN>class in the example contains an implementation of the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>ICircuitBreakerStateStore</CODE><SPAN>&nbsp;</SPAN>interface. The<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>CircuitBreaker</CODE><SPAN>&nbsp;</SPAN>class creates an instance of this class to hold the state of the circuit breaker.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>The<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>ExecuteAction</CODE><SPAN>&nbsp;</SPAN>method in the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>CircuitBreaker</CODE><SPAN>&nbsp;</SPAN>class wraps an operation, specified as an<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>Action</CODE><SPAN>&nbsp;</SPAN>delegate. If the circuit breaker is closed,<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>ExecuteAction</CODE><SPAN>&nbsp;</SPAN>invokes the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>Action</CODE><SPAN>&nbsp;</SPAN>delegate. If the operation fails, an exception handler calls<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>TrackException</CODE>, which sets the circuit breaker state to open. The following code example highlights this flow.</P>
<DIV id=code-try-1 class=codeHeader style='BOX-SIZING: content-box; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-TOP-COLOR: ; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 16px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; BORDER-LEFT-COLOR: ; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); FONT-STYLE: normal; MIN-HEIGHT: 30px; ORPHANS: 2; WIDOWS: 2; DISPLAY: flex; BORDER-RIGHT-COLOR: ; LETTER-SPACING: normal; OUTLINE-COLOR: ; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; border-image-source: ; border-image-slice: ; border-image-width: ; border-image-outset: ; border-image-repeat: ; flex-direction: row' data-bi-name="code-header"><SPAN class=language style="PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 16px; DISPLAY: flex; OUTLINE-COLOR: ; PADDING-RIGHT: 16px; align-items: center; flex-grow: 1">C#</SPAN></DIV><PRE role=group tabIndex=0 aria-label="Horizontally scrollable code" class=has-inner-focus style='OVERFLOW: auto; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace !important; WHITE-SPACE: pre; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); FONT-STYLE: normal; PADDING-TOP: 1px; PADDING-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; OUTLINE-COLOR: ; LINE-HEIGHT: 1.3571; PADDING-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: normal; -webkit-font-smoothing: auto; tab-size: 4; hyphens: none'><CODE class=lang-csharp style='FONT-SIZE: 1em; BORDER-TOP: 0px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; POSITION: relative; PADDING-BOTTOM: 0px; DIRECTION: ltr; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; DISPLAY: block; OUTLINE-COLOR: ; LINE-HEIGHT: 1.3571; PADDING-RIGHT: 0px'><SPAN style="OUTLINE-COLOR: "><SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">public</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">class</SPAN> <SPAN class=hljs-title style="COLOR: rgb(0,104,129); OUTLINE-COLOR: ">CircuitBreaker</SPAN>
{
  <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">private</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">readonly</SPAN> ICircuitBreakerStateStore stateStore =
    CircuitBreakerStateStoreFactory.GetCircuitBreakerStateStore();

  <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">private</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">readonly</SPAN> <SPAN class=hljs-built_in style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">object</SPAN> halfOpenSyncObject = <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">new</SPAN> <SPAN class=hljs-built_in style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">object</SPAN> ();
  ...
  <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">public</SPAN> <SPAN class=hljs-built_in style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">bool</SPAN> IsClosed { <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">get</SPAN> { <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">return</SPAN> stateStore.IsClosed; } }

  <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">public</SPAN> <SPAN class=hljs-built_in style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">bool</SPAN> IsOpen { <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">get</SPAN> { <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">return</SPAN> !IsClosed; } }

  <SPAN class=hljs-function style="OUTLINE-COLOR: "><SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">public</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">void</SPAN> <SPAN class=hljs-title style="COLOR: rgb(0,104,129); OUTLINE-COLOR: ">ExecuteAction</SPAN>(<SPAN class=hljs-params style="OUTLINE-COLOR: ">Action action</SPAN>)</SPAN>
  {
    ...
    <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">if</SPAN> (IsOpen)
    {
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// The circuit breaker is Open.</SPAN>
      ... (see code sample below <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">for</SPAN> details)
    }

    <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// The circuit breaker is Closed, execute the action.</SPAN>
    <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">try</SPAN>
    {
      action();
    }
    catch (Exception ex)
    {
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// If an exception still occurs here, simply</SPAN>
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// retrip the breaker immediately.</SPAN>
      <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">this</SPAN>.TrackException(ex);

      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// Throw the exception so that the caller can tell</SPAN>
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// the type of exception that was thrown.</SPAN>
      <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">throw</SPAN>;
    }
  }

  <SPAN class=hljs-function style="OUTLINE-COLOR: "><SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">private</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">void</SPAN> <SPAN class=hljs-title style="COLOR: rgb(0,104,129); OUTLINE-COLOR: ">TrackException</SPAN>(<SPAN class=hljs-params style="OUTLINE-COLOR: ">Exception ex</SPAN>)</SPAN>
  {
    <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// For simplicity in this example, open the circuit breaker on the first exception.</SPAN>
    <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// In reality this would be more complex. A certain type of exception, such as one</SPAN>
    <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// that indicates a service is offline, might trip the circuit breaker immediately.</SPAN>
    <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// Alternatively it might count exceptions locally or across multiple instances and</SPAN>
    <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// use this value over time, or the exception/success ratio based on the exception</SPAN>
    <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// types, to open the circuit breaker.</SPAN>
    <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">this</SPAN>.stateStore.Trip(ex);
  }
}
</SPAN></CODE></PRE>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>The following example shows the code (omitted from the previous example) that is executed if the circuit breaker isn't closed. It first checks if the circuit breaker has been open for a period longer than the time specified by the local<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>OpenToHalfOpenWaitTime</CODE><SPAN>&nbsp;</SPAN>field in the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>CircuitBreaker</CODE><SPAN>&nbsp;</SPAN>class. If this is the case, the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>ExecuteAction</CODE><SPAN>&nbsp;</SPAN>method sets the circuit breaker to half open, then tries to perform the operation specified by the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>Action</CODE><SPAN>&nbsp;</SPAN>delegate.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>If the operation is successful, the circuit breaker is reset to the closed state. If the operation fails, it is tripped back to the open state and the time the exception occurred is updated so that the circuit breaker will wait for a further period before trying to perform the operation again.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>If the circuit breaker has only been open for a short time, less than the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>OpenToHalfOpenWaitTime</CODE><SPAN>&nbsp;</SPAN>value, the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>ExecuteAction</CODE><SPAN>&nbsp;</SPAN>method simply throws a<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>CircuitBreakerOpenException</CODE><SPAN>&nbsp;</SPAN>exception and returns the error that caused the circuit breaker to transition to the open state.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>Additionally, it uses a lock to prevent the circuit breaker from trying to perform concurrent calls to the operation while it's half open. A concurrent attempt to invoke the operation will be handled as if the circuit breaker was open, and it'll fail with an exception as described later.</P>
<DIV id=code-try-2 class=codeHeader style='BOX-SIZING: content-box; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-TOP-COLOR: ; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 16px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; BORDER-LEFT-COLOR: ; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); FONT-STYLE: normal; MIN-HEIGHT: 30px; ORPHANS: 2; WIDOWS: 2; DISPLAY: flex; BORDER-RIGHT-COLOR: ; LETTER-SPACING: normal; OUTLINE-COLOR: ; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; border-image-source: ; border-image-slice: ; border-image-width: ; border-image-outset: ; border-image-repeat: ; flex-direction: row' data-bi-name="code-header"><SPAN class=language style="PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 16px; DISPLAY: flex; OUTLINE-COLOR: ; PADDING-RIGHT: 16px; align-items: center; flex-grow: 1">C#</SPAN></DIV><PRE role=group tabIndex=0 aria-label="Horizontally scrollable code" class=has-inner-focus style='OVERFLOW: auto; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace !important; WHITE-SPACE: pre; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); FONT-STYLE: normal; PADDING-TOP: 1px; PADDING-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; OUTLINE-COLOR: ; LINE-HEIGHT: 1.3571; PADDING-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: normal; -webkit-font-smoothing: auto; tab-size: 4; hyphens: none'><CODE class=lang-csharp style='FONT-SIZE: 1em; BORDER-TOP: 0px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; POSITION: relative; PADDING-BOTTOM: 0px; DIRECTION: ltr; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; DISPLAY: block; OUTLINE-COLOR: ; LINE-HEIGHT: 1.3571; PADDING-RIGHT: 0px'><SPAN style="OUTLINE-COLOR: ">    ...
    <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">if</SPAN> (IsOpen)
    {
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// The circuit breaker is Open. Check if the Open timeout has expired.</SPAN>
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// If it has, set the state to HalfOpen. Another approach might be to</SPAN>
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// check for the HalfOpen state that had be set by some other operation.</SPAN>
      <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">if</SPAN> (stateStore.LastStateChangedDateUtc + OpenToHalfOpenWaitTime &lt; DateTime.UtcNow)
      {
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// The Open timeout has expired. Allow one operation to execute. Note that, in</SPAN>
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// this example, the circuit breaker is set to HalfOpen after being</SPAN>
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// in the Open state for some period of time. An alternative would be to set</SPAN>
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// this using some other approach such as a timer, test method, manually, and</SPAN>
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// so on, and check the state here to determine how to handle execution</SPAN>
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// of the action.</SPAN>
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// Limit the number of threads to be executed when the breaker is HalfOpen.</SPAN>
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// An alternative would be to use a more complex approach to determine which</SPAN>
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// threads or how many are allowed to execute, or to execute a simple test</SPAN>
        <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// method instead.</SPAN>
        <SPAN class=hljs-built_in style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">bool</SPAN> lockTaken = <SPAN class=hljs-literal style="COLOR: rgb(7,112,74); OUTLINE-COLOR: ">false</SPAN>;
        <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">try</SPAN>
        {
          Monitor.TryEnter(halfOpenSyncObject, <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">ref</SPAN> lockTaken);
          <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">if</SPAN> (lockTaken)
          {
            <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// Set the circuit breaker state to HalfOpen.</SPAN>
            stateStore.HalfOpen();

            <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// Attempt the operation.</SPAN>
            action();

            <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// If this action succeeds, reset the state and allow other operations.</SPAN>
            <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// In reality, instead of immediately returning to the Closed state, a counter</SPAN>
            <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// here would record the number of successful operations and return the</SPAN>
            <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// circuit breaker to the Closed state only after a specified number succeed.</SPAN>
            <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">this</SPAN>.stateStore.Reset();
            <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">return</SPAN>;
          }
        }
        catch (Exception ex)
        {
          <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// If there's still an exception, trip the breaker again immediately.</SPAN>
          <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">this</SPAN>.stateStore.Trip(ex);

          <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// Throw the exception so that the caller knows which exception occurred.</SPAN>
          <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">throw</SPAN>;
        }
        <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">finally</SPAN>
        {
          <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">if</SPAN> (lockTaken)
          {
            Monitor.Exit(halfOpenSyncObject);
          }
        }
      }
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// The Open timeout hasn't yet expired. Throw a CircuitBreakerOpen exception to</SPAN>
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// inform the caller that the call was not actually attempted,</SPAN>
      <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// and return the most recent exception received.</SPAN>
      <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">throw</SPAN> <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">new</SPAN> CircuitBreakerOpenException(stateStore.LastException);
    }
    ...
</SPAN></CODE></PRE>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 1px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; OUTLINE-COLOR: ; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word'>To use a<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>CircuitBreaker</CODE><SPAN>&nbsp;</SPAN>object to protect an operation, an application creates an instance of the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>CircuitBreaker</CODE><SPAN>&nbsp;</SPAN>class and invokes the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>ExecuteAction</CODE><SPAN>&nbsp;</SPAN>method, specifying the operation to be performed as the parameter. The application should be prepared to catch the<SPAN>&nbsp;</SPAN><CODE style='FONT-SIZE: 13px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; PADDING-BOTTOM: 0.1em; DIRECTION: ltr; PADDING-TOP: 0.1em; PADDING-LEFT: 0.2em; OUTLINE-COLOR: ; PADDING-RIGHT: 0.2em; overflow-wrap: break-word; border-radius: 3px'>CircuitBreakerOpenException</CODE><SPAN>&nbsp;</SPAN>exception if the operation fails because the circuit breaker is open. The following code shows an example:</P>
<DIV id=code-try-3 class=codeHeader style='BOX-SIZING: content-box; FONT-FAMILY: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-TOP-COLOR: ; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 16px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; BORDER-LEFT-COLOR: ; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); FONT-STYLE: normal; MIN-HEIGHT: 30px; ORPHANS: 2; WIDOWS: 2; DISPLAY: flex; BORDER-RIGHT-COLOR: ; LETTER-SPACING: normal; OUTLINE-COLOR: ; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; border-image-source: ; border-image-slice: ; border-image-width: ; border-image-outset: ; border-image-repeat: ; flex-direction: row' data-bi-name="code-header"><SPAN class=language style="PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 16px; DISPLAY: flex; OUTLINE-COLOR: ; PADDING-RIGHT: 16px; align-items: center; flex-grow: 1">C#</SPAN></DIV><PRE class=has-inner-focus style='OVERFLOW: auto; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace !important; WHITE-SPACE: pre; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; FONT-WEIGHT: 400; COLOR: rgb(22,22,22); FONT-STYLE: normal; PADDING-TOP: 1px; PADDING-LEFT: 1px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; OUTLINE-COLOR: ; LINE-HEIGHT: 1.3571; PADDING-RIGHT: 1px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: normal; -webkit-font-smoothing: auto; tab-size: 4; hyphens: none'><CODE class=lang-csharp style='FONT-SIZE: 1em; BORDER-TOP: 0px; FONT-FAMILY: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; POSITION: relative; PADDING-BOTTOM: 0px; DIRECTION: ltr; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; DISPLAY: block; OUTLINE-COLOR: ; LINE-HEIGHT: 1.3571; PADDING-RIGHT: 0px'><SPAN style="OUTLINE-COLOR: "><SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">var</SPAN> breaker = <SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">new</SPAN> CircuitBreaker();

<SPAN class=hljs-keyword style="COLOR: rgb(1,1,253); OUTLINE-COLOR: ">try</SPAN>
{
  breaker.ExecuteAction(() =&gt;
  {
    <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// Operation protected by the circuit breaker.</SPAN>
    ...
  });
}
catch (CircuitBreakerOpenException ex)
{
  <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// Perform some different action when the breaker is open.</SPAN>
  <SPAN class=hljs-comment style="COLOR: green; OUTLINE-COLOR: ">// Last exception details are in the inner exception.</SPAN>
  ...
}
catch (Exception ex)
{
  ...
}</SPAN></CODE></PRE>