<b> : </b><B>2.1 Bully Algorithm</B></H3>
<P><SPAN style="FONT-WEIGHT: 400">The </SPAN><B>Bully Algorithm</B><SPAN style="FONT-WEIGHT: 400"> is a simple </SPAN><I><SPAN style="FONT-WEIGHT: 400">synchronous</SPAN></I><SPAN style="FONT-WEIGHT: 400"> leader election algorithm. This algorithm requires that each nodes has a unique numeric id, and that nodes know the ids of all other nodes in the cluster.</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">The election process starts when a node starts up or when the current leader fails the healthcheck. There are two cases:</SPAN></P>
<OL>
<LI style="FONT-WEIGHT: 400"><SPAN style="FONT-WEIGHT: 400">if the node has the highest id, it declares itself the winner and sends this message to the rest of the nodes.</SPAN></LI>
<LI style="FONT-WEIGHT: 400"><SPAN style="FONT-WEIGHT: 400">if the node has a lower id, it messages all nodes with higher ids and if it doesn't get a response, it assumes all of them have failed or are unavailable, and declares itself the winner.</SPAN></LI></OL>
<P><SPAN style="FONT-WEIGHT: 400">The main downside of the bully algorithm is that if the highest-ranked node goes down frequently, it will re-claim leadership every time it comes back online, causing unnecessary reelections. Synchronization of messages can also be difficult to maintain, especially as the cluster gets larger and physically distributed.&nbsp;</SPAN>