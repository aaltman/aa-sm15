<b> : </b><B>1.2 When to use</B></H3>
<P><SPAN style="FONT-WEIGHT: 400">There are three cases to consider when deciding if leader election fits the situation. </SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">The first case is when each node is roughly the same and there isn't a clear candidate for a permanently assigned leader. This means any node can be elected as leader, and there isn&#8217;t a single point of failure required to coordinate the system. </SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">The second case is when the cluster is doing particularly complex work that needs good coordination. Coordination can mean anything from decisions about how the work is to be divided, to assigning work to specific nodes, or to synthesizing the results of work from different nodes.</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Let&#8217;s consider for example a scientific computation that is trying to determine how a protein folds. Because there are so many possible solutions, this computation can take a long time and will be sped up considerably if it&#8217;s distributed. The cluster will need a leader node to assign each node to work on a different part of the computation, and then add the results together to get the complete folded protein configuration. </SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">The third case where leader election adds value is when a system executes many distributed writes to data and requires </SPAN><B>strong consistency</B><SPAN style="FONT-WEIGHT: 400">. You can read more about consistency in </SPAN><A href="https://igotanoffer.com/blogs/tech/databases-system-design-interview"><SPAN style="FONT-WEIGHT: 400">our article on Databases</SPAN></A><SPAN style="FONT-WEIGHT: 400">, but essentially this means it's very important that no matter what node handles a request the user will always have the most up-to-date version of the data. In this situation a leader creates consistency guarantees by being the source of truth on what the most recent state of the system is (and the leader election algorithm must preserve this properly). </SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Not all applications require strong consistency, but you can imagine how it might be important to a bank to ensure that no matter what server answers a user's online banking request their bank account total will be accurate, and that multiple transactions directed to the same bank account won't conflict with each other.</SPAN>