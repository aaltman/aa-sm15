<b> : </b><A name=algorithms></A><B>2. Leader Election Algorithms</B></H2>
<P><SPAN style="FONT-WEIGHT: 400">A </SPAN><B>leader election algorithm</B><SPAN style="FONT-WEIGHT: 400"> guides a cluster to collectively agree on one node to act as leader with as few back and forth communications as possible.</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Generally, the algorithm works by assigning one of three states to each node: Leader, Follower, or Candidate. Additionally the leader will be required to regularly pass a </SPAN><B>"healthcheck"</B><SPAN style="FONT-WEIGHT: 400"> or </SPAN><B>&#8220;heartbeat&#8221;</B><SPAN style="FONT-WEIGHT: 400"> so follower nodes can tell if the leader has become unavailable or failed and a new one needs to be elected.</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">The kind of leader election algorithm you want depends on whether the cluster is synchronous or asynchronous. In a </SPAN><B>synchronous </B><SPAN style="FONT-WEIGHT: 400">cluster nodes are synchronized to the same clock and send messages in predictable amounts of time and ordering. In an </SPAN><B>asynchronous </B><SPAN style="FONT-WEIGHT: 400">cluster </SPAN><SPAN style="FONT-WEIGHT: 400">messages are not reliably delivered within a certain amount of time or in any order.&nbsp;</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">In an asynchronous cluster any number of nodes can lag indefinitely so the leader election process can't guarantee both </SPAN><B>safety</B><SPAN style="FONT-WEIGHT: 400"> - that no more than one leader will be elected - and </SPAN><B>liveness</B><SPAN style="FONT-WEIGHT: 400"> - that every node will finish the election. In practice, implementations choose to guarantee safety because it has more critical implications for the service.&nbsp;</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Synchronous algorithms can guarantee both safety and liveness, and are therefore easier to reason about and theoretically preferable. But in practice the big drawback is synchronizing a cluster requires implementing additional constraints on how the cluster operates that aren&#8217;t always feasible or scalable.</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Now let&#8217;s take a deeper look at the four most popular leader election algorithms.</SPAN>