<H1 tabIndex=-1 class=devsite-page-title><FONT class=extract>About FCM messages</FONT></H1><DEVSITE-FEATURE-TOOLTIP id=devsite-collections-dropdown class="devsite-page-bookmark-tooltip nocontent inline-block" style="--devsite-popout-offset-x: 32px" ack-key="AckCollectionsBookmarkTooltipDismiss" analytics-category="Site-Wide Custom Events" analytics-action-show="Callout Profile displayed" analytics-action-close="Callout Profile dismissed" analytics-label="Create Collection Callout" dismiss-button="true" dismiss-button-text="Dismiss" close-button-text="Got it" ready="" current-step="0"><DEVSITE-BOOKMARK class=show><DEVSITE-DROPDOWN-LIST style="--devsite-popout-offset-x: 0px" ready="" ellipsis="" checkboxes="" fetchingitems="true" writable="" additemtext="New Collection"></DEVSITE-DROPDOWN-LIST></DEVSITE-BOOKMARK></DEVSITE-FEATURE-TOOLTIP><DEVSITE-FEATURE-TOOLTIP id=devsite-collections-dropdown class="devsite-page-bookmark-tooltip nocontent inline-block" style="--devsite-popout-offset-x: 32px" ack-key="AckCollectionsBookmarkTooltipDismiss" analytics-category="Site-Wide Custom Events" analytics-action-show="Callout Profile displayed" analytics-action-close="Callout Profile dismissed" analytics-label="Create Collection Callout" dismiss-button="true" dismiss-button-text="Dismiss" close-button-text="Got it" ready="" current-step="0"><DEVSITE-BOOKMARK class=show><DEVSITE-DROPDOWN-LIST style="--devsite-popout-offset-x: 0px" ready="" ellipsis="" checkboxes="" fetchingitems="true" writable="" additemtext="New Collection"></DEVSITE-DROPDOWN-LIST></DEVSITE-BOOKMARK></DEVSITE-FEATURE-TOOLTIP>
<DIV class=devsite-page-title-meta><FONT class=extract></FONT></DIV>
<DIV class="devsite-article-body clearfix&#13;&#10;  ">
<P><FONT class=extract></FONT></P>
<P><FONT class=extract><SPAN class=notranslate>Firebase Cloud Messaging</SPAN> (<SPAN class=notranslate>FCM</SPAN>) offers a broad range of messaging options and capabilities. The information in this page is intended to help you understand the different types of <SPAN class=notranslate>FCM</SPAN> messages and what you can do with them.</FONT></P>
<H2 role=presentation tabIndex=-1 id=notifications_and_data_messages data-text="Message types"><SPAN role=heading aria-level=2 class=devsite-heading><FONT class=extract>Message types</FONT></SPAN></H2></DIV>
<P><FONT class=extract>With <SPAN class=notranslate>FCM</SPAN>, you can send two types of messages to clients:</FONT></P>
<UL>
<LI><FONT class=extract>Notification messages, sometimes thought of as "display messages." These are handled by the <SPAN class=notranslate>FCM</SPAN> SDK automatically. </FONT>
<LI><FONT class=extract>Data messages, which are handled by the client app.</FONT></LI></UL>
<P><FONT class=extract>Notification messages contain a predefined set of user-visible keys. Data messages, by contrast, contain only your user-defined custom key-value pairs. Notification messages can contain an optional data payload. Maximum payload for both message types is 4096 bytes, except when sending messages from the <SPAN class=notranslate>Firebase</SPAN> console, which enforces a 1000 character limit.</FONT></P>
<P><FONT class=extract></FONT></P>
<DIV class=devsite-table-wrapper>
<TABLE>
<TBODY>
<TR>
<TH><FONT class=extract></FONT></TH>
<TH><FONT class=extract>Use scenario</FONT></TH>
<TH><FONT class=extract>How to send</FONT></TH></TR>
<TR>
<TD><FONT class=extract>Notification message</FONT></TD>
<TD><FONT class=extract><SPAN class=notranslate>FCM</SPAN> SDK displays the message to end-user devices on behalf of the client app when it's running in the background. Otherwise, if the app is running in the foreground when the notification is received, the app's code determines the behavior. Notification messages have a predefined set of user-visible keys and an optional data payload of custom key-value pairs. </FONT></TD>
<TD>
<OL>
<LI>
<P><FONT class=extract>In a trusted environment such as </FONT><A href="https://firebase.google.com/docs/functions"><SPAN class=notranslate><FONT class=extract>Cloud Functions</FONT></SPAN></A><FONT class=extract> or your app server, use the </FONT><A href="https://firebase.google.com/docs/cloud-messaging/server#choose"><FONT class=extract>Admin SDK or the HTTP v1 API</FONT></A><FONT class=extract>. Set the <CODE dir=ltr translate="no">notification</CODE> key. May have optional data payload. Always collapsible.</FONT></P>
<P><FONT class=extract>See some </FONT><A href="https://firebase.google.com/docs/cloud-messaging/send-message#example-notification-message-with-platform-specific-delivery-options"><FONT class=extract>examples of display notifications</FONT></A><FONT class=extract> and send request payloads. </FONT></P>
<LI><FONT class=extract>Use the </FONT><A href="https://console.firebase.google.com/project/_/notification"><FONT class=extract>Notifications composer</FONT></A><FONT class=extract>: Enter the Message Text, Title, etc., and send. Add optional data payload by providing Custom data. </FONT></LI></OL></TD></TR>
<TR>
<TD><FONT class=extract>Data message</FONT></TD>
<TD><FONT class=extract>Client app is responsible for processing data messages. Data messages have only custom key-value pairs with no reserved key names (see below). </FONT></TD>
<TD><FONT class=extract>In a trusted environment such as </FONT><A href="https://firebase.google.com/docs/functions"><SPAN class=notranslate><FONT class=extract>Cloud Functions</FONT></SPAN></A><FONT class=extract> or your app server, use the </FONT><A href="https://firebase.google.com/docs/cloud-messaging/server#choose"><FONT class=extract>Admin SDK or the FCM Server Protocols</FONT></A><FONT class=extract>. In the send request, Set the <CODE dir=ltr translate="no">data</CODE> key. </FONT></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>Use notification messages when you want the <SPAN class=notranslate>FCM</SPAN> SDK to handle displaying a notification automatically when your app is running in the background. Use data messages when you want to process the messages with your own client app code.</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract><SPAN class=notranslate>FCM</SPAN> can send a notification message including an optional data payload. In such cases, <SPAN class=notranslate>FCM</SPAN> handles displaying the notification payload, and the client app handles the data payload. </FONT></P>
<H3 role=presentation tabIndex=-1 id=notifications data-text="Notification messages"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Notification messages</FONT></SPAN></H3>
<P><FONT class=extract>For testing or for marketing and user re-engagement, you can </FONT><A href="https://firebase.google.com/docs/cloud-messaging/android/send-with-console"><FONT class=extract>send notification messages using the <SPAN class=notranslate>Firebase</SPAN> console</FONT></A><FONT class=extract>. The <SPAN class=notranslate>Firebase</SPAN> console provides analytics-based </FONT><A href="https://firebase.google.com/docs/ab-testing/abtest-with-console"><FONT class=extract>A/B testing</FONT></A><FONT class=extract> to help you refine and improve marketing messages.</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>To programmatically send notification messages using the Admin SDK or the <SPAN class=notranslate>FCM</SPAN> protocols, set the <CODE dir=ltr translate="no">notification</CODE> key with the necessary predefined set of key-value options for the user-visible part of the notification message. For example, here is a JSON-formatted notification message in an IM app. The user can expect to see a message with the title "Portugal vs. Denmark" and the text "great match!" on the device:</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P><DEVSITE-CODE data-copy-event-label="">
<DIV role=group aria-label="Action buttons" class=devsite-code-buttons-container><FONT class=extract></FONT></DIV></DEVSITE-CODE><DEVSITE-CODE data-copy-event-label=""><PRE class=pretty-json dir=ltr translate="no" is-upgraded=""><SPAN class=pun><FONT class=extract>{</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"message"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"token"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1..."</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"notification"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"title"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"Portugal vs. Denmark"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"body"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"great match!"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN></PRE></DEVSITE-CODE>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>Notification messages are delivered to the notification tray when the app is in the background. For apps in the foreground, messages are handled by a callback function. </FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>See the </FONT><A href="https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#Notification"><FONT class=extract>HTTP v1 Protocol notification object</FONT></A><FONT class=extract> reference documentation for the full list of predefined keys available for building notification messages.</FONT></P>
<H3 role=presentation tabIndex=-1 id=data_messages data-text="Data messages"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Data messages</FONT></SPAN></H3>
<P><FONT class=extract>Set the appropriate key with your custom key-value pairs to send a data payload to the client app.</FONT></P><ASIDE class=caution><FONT class=extract>Make sure that you do not use any reserved words in your custom key-value pairs. Reserved words include "from", "notification," "message_type", or any word starting with "google" or "gcm."</ASIDE> </FONT>
<P><FONT class=extract>For example, here is a JSON-formatted message in the same IM app as above, where the information is encapsulated in the common <CODE dir=ltr translate="no">data</CODE> key and the client app is expected to interpret the content:</FONT></P><DEVSITE-CODE data-copy-event-label="">
<DIV role=group aria-label="Action buttons" class=devsite-code-buttons-container><FONT class=extract></FONT></DIV></DEVSITE-CODE><DEVSITE-CODE data-copy-event-label=""><PRE class=notranslate dir=ltr translate="no" is-upgraded=""><SPAN class=pun><FONT class=extract>{</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"message"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"token"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1..."</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"data"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"Nick"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"Mario"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"body"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"great match!"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"Room"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"PortugalVSDenmark"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN></PRE></DEVSITE-CODE>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>The above example shows usage of the top-level, or common <CODE dir=ltr translate="no">data</CODE> field, which is interpreted by clients on all platforms that receive the message. On each platform, the client app receives the data payload in a callback function. </FONT></P>
<P><FONT class=extract></FONT></P>
<H4 role=presentation tabIndex=-1 id=encryption_for_data_messages data-text="Encryption for data messages"><SPAN role=heading aria-level=4 class=devsite-heading><FONT class=extract>Encryption for data messages</FONT></SPAN></H4>
<P><FONT class=extract>The Android Transport Layer (see </FONT><A href="https://firebase.google.com/docs/cloud-messaging/fcm-architecture"><FONT class=extract><SPAN class=notranslate>FCM</SPAN> architecture</FONT></A><FONT class=extract>) uses point-to-point encryption. Depending on your needs, you may decide to add end-to-end encryption to data messages. <SPAN class=notranslate>FCM</SPAN> does not provide an end-to-end solution. However, there are external solutions available such as </FONT><A href="https://android-developers.googleblog.com/2018/06/project-capillary-end-to-end-encryption.html"><FONT class=extract>Capillary</FONT></A><FONT class=extract> or </FONT><A href="https://en.wikipedia.org/wiki/Datagram_Transport_Layer_Security"><FONT class=extract>DTLS</FONT></A><FONT class=extract>.</FONT></P>
<H3 role=presentation tabIndex=-1 id=notification-messages-with-optional-data-payload data-text="Notification messages with optional data payload"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Notification messages with optional data payload</FONT></SPAN></H3>
<P><FONT class=extract>Both programmatically or via the <SPAN class=notranslate>Firebase</SPAN> console, you can send notification messages that contain an optional payload of custom key-value pairs. In the </FONT><A href="https://console.firebase.google.com/project/_/notification"><FONT class=extract>Notifications composer</FONT></A><FONT class=extract>, use the <STRONG>Custom data</STRONG> fields in <STRONG>Advanced options</STRONG>.</FONT></P>
<P><FONT class=extract>App behavior when receiving messages that include both notification and data payloads depends on whether the app is in the background or the foreground&#8212;essentially, whether or not it is active at the time of receipt.</FONT></P>
<UL>
<LI><FONT class=extract><STRONG>When in the background</STRONG>, apps receive the notification payload in the notification tray, and only handle the data payload when the user taps on the notification. </FONT>
<LI><FONT class=extract><STRONG>When in the foreground</STRONG>, your app receives a message object with both payloads available.</FONT></LI></UL>
<P><FONT class=extract>Here is a JSON-formatted message containing both the <CODE dir=ltr translate="no">notification</CODE> key and the <CODE dir=ltr translate="no">data</CODE> key:</FONT></P>
<P><FONT class=extract></FONT></P><DEVSITE-CODE data-copy-event-label="">
<DIV role=group aria-label="Action buttons" class=devsite-code-buttons-container><FONT class=extract></FONT></DIV></DEVSITE-CODE><DEVSITE-CODE data-copy-event-label=""><PRE class=pretty-json dir=ltr translate="no" is-upgraded=""><SPAN class=pun><FONT class=extract>{</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"message"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"token"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1..."</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"notification"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"title"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"Portugal vs. Denmark"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"body"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"great match!"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"data"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"Nick"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"Mario"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"Room"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"PortugalVSDenmark"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN></PRE></DEVSITE-CODE>
<P><FONT class=extract></FONT></P>
<H2 role=presentation tabIndex=-1 id=customizing-a-message-across-platforms data-text="Customizing a message across platforms"><SPAN role=heading aria-level=2 class=devsite-heading><FONT class=extract>Customizing a message across platforms</FONT></SPAN></H2>
<P><FONT class=extract>The <SPAN class=notranslate><SPAN class=notranslate>Firebase</SPAN> Admin SDK</SPAN> and the FCM v1 HTTP protocol both allow your message requests to set all fields available in the </FONT><A href="https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#Message"><CODE dir=ltr translate="no"><FONT class=extract>message</FONT></CODE></A><FONT class=extract> object. This includes:</FONT></P>
<UL>
<LI><FONT class=extract>a common set of fields to be interpreted by <STRONG>all</STRONG> app instances that receive the message. </FONT>
<LI><FONT class=extract>platform-specific sets of fields, such as <CODE dir=ltr translate="no">AndroidConfig</CODE> and <CODE dir=ltr translate="no">WebpushConfig</CODE>, interpreted only by app instances running on the specified platform.</FONT></LI></UL>
<P><FONT class=extract>Platform-specific blocks give you flexibility to customize messages for different platforms to ensure that they are handled correctly when received. The FCM backend will take all specified parameters into account and customize the message for each platform.</FONT></P>
<H3 role=presentation tabIndex=-1 id=when-to-use-common-fields data-text="When to use common fields"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>When to use common fields</FONT></SPAN></H3>
<P><FONT class=extract>Use common fields when you're:</FONT></P>
<UL>
<LI><FONT class=extract>Targeting app instances on <STRONG>all</STRONG> platforms &#8212; Apple, Android, and web </FONT>
<LI><FONT class=extract>Sending messages to topics</FONT></LI></UL>
<P><FONT class=extract>All app instances, regardless of platform, can interpret the following common fields:</FONT></P>
<UL>
<LI><A href="https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#Notification.FIELDS.title"><CODE dir=ltr translate="no"><FONT class=extract>message.notification.title</FONT></CODE></A><FONT class=extract> </FONT>
<LI><A href="https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#Notification.FIELDS.body"><CODE dir=ltr translate="no"><FONT class=extract>message.notification.body</FONT></CODE></A><FONT class=extract> </FONT>
<LI><A href="https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#Message.FIELDS.data"><CODE dir=ltr translate="no"><FONT class=extract>message.data</FONT></CODE></A></LI></UL>
<H3 role=presentation tabIndex=-1 id=when-to-use-platform-specific-fields data-text="When to use platform-specific fields"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>When to use platform-specific fields</FONT></SPAN></H3>
<P><FONT class=extract>Use platform-specific fields when you want to:</FONT></P>
<UL>
<LI><FONT class=extract>Send fields only to particular platforms </FONT>
<LI><FONT class=extract>Send platform-specific fields <EM>in addition to</EM> the common fields</FONT></LI></UL>
<P><FONT class=extract>Whenever you want to send values only to particular platforms, <STRONG>don't</STRONG> use common fields; use platform-specific fields. For example, to send a notification only to Apple platforms and web but not to Android, you must use two separate sets of fields, one for Apple and one for web.</FONT></P>
<P><FONT class=extract>When you are sending messages with specific </FONT><A href="https://firebase.google.com/docs/cloud-messaging/concept-options#delivery_options"><FONT class=extract>delivery options</FONT></A><FONT class=extract>, use platform-specific fields to set them. You can specify different values per platform if you want. However, even when you want to set essentially the same value across platforms, you must use platform-specific fields. This is because each platform may interpret the value slightly differently&#8212;for example, time-to-live is set on Android as an expiration time in seconds, while on Apple it is set as an expiration <EM>date</EM>.</FONT></P>
<H3 role=presentation tabIndex=-1 id=example-notification-message-with-platform-specific-delivery-options data-text="Example: notification message with platform-specific delivery options"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Example: notification message with platform-specific delivery options</FONT></SPAN></H3>
<P><FONT class=extract>The following v1 send request sends a common notification title and content to all platforms, but also sends some platform-specific overrides. Specifically, the request:</FONT></P>
<UL>
<LI><FONT class=extract>sets a long time-to-live for Android and Web platforms, while setting the APNs (Apple platforms) message priority to a low setting </FONT>
<LI><FONT class=extract>sets the appropriate keys to define the result of a user tap on the notification on Android and Apple &#8212; <CODE dir=ltr translate="no">click_action</CODE>, and <CODE dir=ltr translate="no">category</CODE>, respectively.</FONT></LI></UL><DEVSITE-CODE data-copy-event-label="">
<DIV role=group aria-label="Action buttons" class=devsite-code-buttons-container><FONT class=extract></FONT></DIV></DEVSITE-CODE><DEVSITE-CODE data-copy-event-label=""><PRE class=notranslate dir=ltr translate="no" is-upgraded=""><SPAN class=pun><FONT class=extract>{</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"message"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"token"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1..."</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"notification"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"title"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"Match update"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"body"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"Arsenal goal in added time, score is now 3-0"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"android"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"ttl"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"86400s"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"notification"</SPAN><SPAN class=pun>{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"click_action"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"OPEN_ACTIVITY_1"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"apns"</SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"headers"</SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"apns-priority"</SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"5"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"payload"</SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"aps"</SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"category"</SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"NEW_MESSAGE_CATEGORY"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"webpush"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"headers"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><FONT class=extract><SPAN class=str>"TTL"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"86400"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp;</FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN></PRE></DEVSITE-CODE>
<P><FONT class=extract>See the </FONT><A href="https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages"><FONT class=extract>HTTP v1 reference documentation</FONT></A><FONT class=extract> for complete detail on the keys available in platform-specific blocks in the message body. For more information about building send requests that contain the message body, see </FONT><A href="https://firebase.google.com/docs/cloud-messaging/send-message"><FONT class=extract>Build Send Requests</FONT></A><FONT class=extract>.</FONT></P>
<H2 role=presentation tabIndex=-1 id=delivery-options data-text="Delivery options"><SPAN role=heading aria-level=2 class=devsite-heading><FONT class=extract>Delivery options</FONT></SPAN></H2>
<P><FONT class=extract><SPAN class=notranslate>FCM</SPAN> provides a specific set of delivery options for messages sent to Android devices, and allows for similar options on Apple platforms and web. For example, "collapsible" message behavior is supported on Android via <SPAN class=notranslate>FCM</SPAN>'s <CODE dir=ltr translate="no">collapse_key</CODE>, on Apple via <CODE dir=ltr translate="no">apns-collapse-id</CODE>, and on JavaScript/Web via <CODE dir=ltr translate="no">Topic</CODE>. For details, see descriptions in this section and related reference documentation.</FONT></P>
<P><FONT class=extract></FONT></P>
<H3 role=presentation tabIndex=-1 id=collapsible_and_non-collapsible_messages data-text="Non-collapsible and collapsible messages"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Non-collapsible and collapsible messages</FONT></SPAN></H3>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>A <I>non-collapsible</I> message denotes that each individual message is delivered to the device. A non-collapsible message delivers some useful content, as opposed to a collapsible message like a content-free "ping" to the mobile app to contact the server to fetch data.</FONT></P>
<P><FONT class=extract></FONT></P><ASIDE class=caution><FONT class=extract><SPAN class=notranslate>FCM</SPAN> does not guarantee the order of delivery.</ASIDE> </FONT>
<P></P>
<P><FONT class=extract>Some typical use cases of non-collapsible messages are chat messages or critical messages. For example, in an IM app, you would want to deliver every message, because every message has different content. </FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>For Android there is a limit of 100 messages that can be stored without collapsing. If the limit is reached, all stored messages are discarded. When the device is back online, it receives a special message indicating that the limit was reached. The app can then handle the situation properly, typically by requesting a full sync from the app server.</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>A <I>collapsible message</I> is a message that may be replaced by a new message if it has yet to be delivered to the device.</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>A common use cases of collapsible messages are messages used to tell a mobile app to sync data from the server. An example would be a sports app that updates users with the latest score. Only the most recent message is relevant.</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>To mark a message as collapsible on Android, include the <CODE dir=ltr translate="no">collapse_key</CODE> parameter in the message payload. By default, the collapse key is the app package name registered in the <SPAN class=notranslate>Firebase</SPAN> console. The <SPAN class=notranslate>FCM</SPAN> server can simultaneously store four different collapsible messages per device, each with a different collapse key. If you exceed this number, <SPAN class=notranslate>FCM</SPAN> only keeps four collapse keys, with no guarantees about which ones are kept.</FONT></P>
<P><FONT class=extract>Topic messages with no payload are collapsible by default. Notification messages are always collapsible and will ignore the <CODE dir=ltr translate="no">collapse_key</CODE> parameter.</FONT></P>
<P><FONT class=extract></FONT></P>
<H4 role=presentation tabIndex=-1 id=which_should_i_use data-text="Which should I use?"><SPAN role=heading aria-level=4 class=devsite-heading><FONT class=extract>Which should I use?</FONT></SPAN></H4>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>Collapsible messages are a better choice from a performance standpoint, provided your app doesn't need to use non-collapsible messages. However, if you use collapsible messages, remember that <SPAN class=notranslate>FCM</SPAN> only allows a maximum of four different collapse keys to be used by <SPAN class=notranslate>FCM</SPAN> per registration token at any given time. You must not exceed this number, or it could cause unpredictable consequences.</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<DIV class=devsite-table-wrapper>
<TABLE>
<TBODY>
<TR>
<TH><FONT class=extract></FONT></TH>
<TH><FONT class=extract>Use scenario</FONT></TH>
<TH><FONT class=extract>How to send</FONT></TH></TR>
<TR>
<TD><FONT class=extract>Non-collapsible</FONT></TD>
<TD><FONT class=extract>Every message is important to the client app and needs to be delivered.</FONT></TD>
<TD><FONT class=extract>Except for notification messages, all messages are non-collapsible by default. </FONT></TD></TR>
<TR>
<TD><FONT class=extract>Collapsible</FONT></TD>
<TD><FONT class=extract>When there is a newer message that renders an older, related message irrelevant to the client app, <SPAN class=notranslate>FCM</SPAN> replaces the older message. For example: messages used to initiate a data sync from the server, or outdated notification messages.</FONT></TD>
<TD><FONT class=extract>Set the appropriate parameter in your message request: </FONT>
<UL>
<LI><FONT class=extract><CODE dir=ltr translate="no">collapseKey</CODE> on Android </FONT>
<LI><FONT class=extract><CODE dir=ltr translate="no">apns-collapse-id</CODE> on Apple </FONT>
<LI><FONT class=extract><CODE dir=ltr translate="no">Topic</CODE> on Web </FONT>
<LI><FONT class=extract><CODE dir=ltr translate="no">collapse_key</CODE> in legacy protocols (all platforms)</FONT></LI></UL></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<H3 role=presentation tabIndex=-1 id=setting-the-priority-of-a-message data-text="Setting the priority of a message"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Setting the priority of a message</FONT></SPAN></H3>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>You have two options for assigning delivery priority to downstream messages: normal and high priority. Though the behavior differs slightly across platforms, delivery of normal and high priority messages works like this:</FONT></P>
<UL>
<LI>
<P><FONT class=extract><STRONG>Normal priority.</STRONG> Normal priority messages are delivered immediately when the app is in the foreground. For backgrounded apps, delivery may be delayed. For less time-sensitive messages, such as notifications of new email, keeping your UI in sync, or syncing app data in the background, choose normal delivery priority. </FONT></P>
<LI>
<P><FONT class=extract><STRONG>High priority. </STRONG>FCM attempts to deliver high priority messages immediately even if the device is in Doze mode. High priority messages are for time-sensitive, user visible content.</FONT></P></LI></UL>
<P><FONT class=extract></FONT></P><ASIDE class=warning><FONT class=extract>When sending data messages to Apple devices, the priority <B>must</B> be set to 5, or normal priority. Messages sent with high priority are rejected by the <SPAN class=notranslate>FCM</SPAN> backend with the error <CODE dir=ltr translate="no">INVALID_ARGUMENT</CODE>.</ASIDE> </FONT>
<P><FONT class=extract>Here is an example of a normal priority message sent via the <SPAN class=notranslate>FCM</SPAN> HTTP v1 protocol to notify a magazine subscriber that new content is available to download:</FONT></P><DEVSITE-CODE data-copy-event-label="">
<DIV role=group aria-label="Action buttons" class=devsite-code-buttons-container><FONT class=extract></FONT></DIV></DEVSITE-CODE><DEVSITE-CODE data-copy-event-label=""><PRE class=notranslate dir=ltr translate="no" is-upgraded=""><SPAN class=pun><FONT class=extract>{</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"message"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"topic"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"subscriber-updates"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"notification"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"body"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"This week's edition is now available."</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"title"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"NewsMagazine.com"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"data"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"volume"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"3.21.15"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"contents"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"http://www.news-magazine.com/world-week/21659772"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"android"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"priority"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"normal"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"apns"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"headers"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"apns-priority"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"5"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"webpush"</SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"headers"</SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"Urgency"</SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"high"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR></SPAN></PRE></DEVSITE-CODE>
<P><FONT class=extract>For more platform-specific detail on setting message priority: </FONT></P>
<UL>
<LI><A href="https://developer.apple.com/library/prerelease/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html#//apple_ref/doc/uid/TP40008194-CH11-SW1"><FONT class=extract>APNs documentation</FONT></A><FONT class=extract> </FONT>
<LI><A href="https://firebase.google.com/docs/cloud-messaging/android/message-priority"><FONT class=extract>Set and manage message priority</FONT></A><FONT class=extract> (Android) </FONT>
<LI><A href="https://tools.ietf.org/html/rfc8030#section-5.3"><FONT class=extract>Web push message urgency</FONT></A></LI></UL>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<H3 role=presentation tabIndex=-1 id=ttl data-text="Setting the lifespan of a message"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Setting the lifespan of a message</FONT></SPAN></H3>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract><SPAN class=notranslate>FCM</SPAN> usually delivers messages immediately after they are sent. However, this might not always be possible. For example, if the platform is Android, the device could be turned off, offline, or otherwise unavailable. Or <SPAN class=notranslate>FCM</SPAN> might intentionally delay messages to prevent an app from consuming excessive resources and negatively affecting battery life.</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>When this happens, <SPAN class=notranslate>FCM</SPAN> stores the message and delivers it as soon as it's feasible. While this is fine in most cases, there are some apps for which a late message might as well never be delivered. For example, if the message is an incoming call or video chat notification, it is meaningful only for a short period of time before the call is terminated. Or if the message is an invitation to an event, it is useless if received after the event has ended. </FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>On Android and Web/JavaScript, you can specify the maximum lifespan of a message. The value must be a duration from 0 to 2,419,200 seconds (28 days), and it corresponds to the maximum period of time for which <SPAN class=notranslate>FCM</SPAN> stores and attempts to deliver the message. Requests that don't contain this field default to the maximum period of four weeks.</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>Here are some possible uses for this feature:</FONT></P>
<UL>
<LI><FONT class=extract>Video chat incoming calls </FONT>
<LI><FONT class=extract>Expiring invitation events </FONT>
<LI><FONT class=extract>Calendar events</FONT></LI></UL>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>Another advantage of specifying the lifespan of a message is that <SPAN class=notranslate>FCM</SPAN> doesn't apply collapsible message throttling to messages with a time-to-live value of 0 seconds. <SPAN class=notranslate>FCM</SPAN> provides best effort handling of messages that must be delivered "now or never." Keep in mind that a <CODE dir=ltr translate="no">time_to_live</CODE> value of 0 means messages that can't be delivered immediately are discarded. However, because such messages are never stored, this provides the best latency for sending notification messages.</FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>Here is an example of a request that includes TTL:</FONT></P><DEVSITE-CODE data-copy-event-label="">
<DIV role=group aria-label="Action buttons" class=devsite-code-buttons-container><FONT class=extract></FONT></DIV></DEVSITE-CODE><DEVSITE-CODE data-copy-event-label=""><PRE class=pretty-json dir=ltr translate="no" is-upgraded=""><SPAN class=pun><FONT class=extract>{</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"message"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"token"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1..."</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"data"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"Nick"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"Mario"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"body"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"great match!"</SPAN><SPAN class=pun>,</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"Room"</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>:</SPAN><SPAN class=pln> </SPAN><SPAN class=str>"PortugalVSDenmark"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"apns"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"headers"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"apns-expiration"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"1604750400"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"android"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"ttl"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"4500s"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>},</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"webpush"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"headers"</SPAN><SPAN class=pun>:{</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; &nbsp; </FONT></SPAN><FONT class=extract><SPAN class=str>"TTL"</SPAN><SPAN class=pun>:</SPAN><SPAN class=str>"4500"</SPAN></FONT><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; &nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR><FONT class=extract>&nbsp; </FONT></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN><SPAN class=pln><BR></SPAN><SPAN class=pun><FONT class=extract>}</FONT></SPAN></PRE></DEVSITE-CODE>
<P><FONT class=extract></FONT></P>
<H2 role=presentation tabIndex=-1 id=lifetime data-text="Lifetime of a message"><SPAN role=heading aria-level=2 class=devsite-heading><FONT class=extract>Lifetime of a message</FONT></SPAN></H2>
<P><FONT class=extract>When an app server posts a message to <SPAN class=notranslate>FCM</SPAN> and receives a message ID back, it does not mean that the message was already delivered to the device. Rather, it means that it was accepted for delivery. What happens to the message after it is accepted depends on many factors.</FONT></P>
<P><FONT class=extract>In the best-case scenario, if the device is connected to <SPAN class=notranslate>FCM</SPAN>, the screen is on and there are no throttling restrictions, the message is delivered right away.</FONT></P>
<P><FONT class=extract>If the device is connected but in Doze, a low priority message is stored by <SPAN class=notranslate>FCM</SPAN> until the device is out of Doze. And that's where the <CODE dir=ltr translate="no">collapse_key</CODE> flag plays a role: if there is already a message with the same collapse key (and registration token) stored and waiting for delivery, the old message is discarded and the new message takes its place (that is, the old message is collapsed by the new one). However, if the collapse key is not set, both the new and old messages are stored for future delivery. </FONT></P>
<P><FONT class=extract>If the device is not connected to <SPAN class=notranslate>FCM</SPAN>, the message is stored until a connection is established (again respecting the collapse key rules). When a connection is established, <SPAN class=notranslate>FCM</SPAN> delivers all pending messages to the device. If the device never gets connected again (for instance, if it was factory reset), the message eventually times out and is discarded from <SPAN class=notranslate>FCM</SPAN> storage. The default timeout is four weeks, unless the <CODE dir=ltr translate="no">time_to_live</CODE> flag is set.</FONT></P>
<P><FONT class=extract>To get more insight into the delivery of a message: </FONT></P>
<UL>
<P><FONT class=extract>To get more insight into the delivery of messages on Android or Apple platforms, see the </FONT><A href="https://console.firebase.google.com/project/_/notification/reporting"><FONT class=extract><SPAN class=notranslate>FCM</SPAN> reporting dashboard</FONT></A><FONT class=extract>, which records the number of messages sent and opened on Apple and Android devices, along with data for "impressions" (notifications seen by users) for Android apps. </FONT></P></UL>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>For Android devices with direct channel messaging enabled, if the device has not connected to <SPAN class=notranslate>FCM</SPAN> for more than one month, <SPAN class=notranslate>FCM</SPAN> still accepts the message but immediately discards it. If the device connects within four weeks of the last data message you sent to it, your client receives the </FONT><A href="https://firebase.google.com/docs/reference/android/com/google/firebase/messaging/FirebaseMessagingService#onDeletedMessages()"><FONT class=extract>onDeletedMessages()</FONT></A><FONT class=extract> callback. The app can then handle the situation properly, typically by requesting a full sync from the app server.</FONT></P>
<P><FONT class=extract>Finally, when <SPAN class=notranslate>FCM</SPAN> attempts to deliver a message to the device and the app was uninstalled, <SPAN class=notranslate>FCM</SPAN> discards that message right away and invalidates the registration token. Future attempts to send a message to that device results in a <CODE dir=ltr translate="no">NotRegistered</CODE> error.</FONT></P>
<H2 role=presentation tabIndex=-1 id=throttling-and-scaling data-text="Throttling and quotas"><SPAN role=heading aria-level=2 class=devsite-heading><FONT class=extract>Throttling and quotas</FONT></SPAN></H2>
<P><FONT class=extract>Our goal is to always deliver every message sent via FCM. However, delivering every message sometimes results in a poor overall user experience. In other cases, we need to provide boundaries to ensure that FCM provides a scalable service for all senders. The types of limits and quotas described in this section help us balance these important factors.</FONT></P><ASIDE class=note><FONT class=extract><STRONG>Note:</STRONG><SPAN> The limits discussed in this section are subject to change.</SPAN></ASIDE> </FONT>
<H3 role=presentation tabIndex=-1 id=downstream-message-throttling data-text="Downstream message throttling"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Downstream message throttling</FONT></SPAN></H3>
<P><FONT class=extract>The HTTP v1 API introduced per-project, per-minute quotas for downstream messaging. The default quota of 600k messages per minute covers over 99% of <SPAN class=notranslate>FCM</SPAN> developers while protecting the stability of the system and minimizing the impact of spiky projects.</FONT></P>
<P><A href="https://firebase.google.com/docs/cloud-messaging/scale-fcm#problem:-traffic"><FONT class=extract>Spiky traffic patterns</FONT></A><FONT class=extract> can result in quota exceeded errors. In an over quota scenario, the system serves HTTP status code 429 (QUOTA_EXCEEDED) until the quota is refilled in the following minute. 429 responses may also be returned in overload situations, so you are strongly encouraged to handle 429s according to </FONT><A href="https://firebase.google.com/docs/reference/fcm/rest/v1/ErrorCode"><FONT class=extract>published recommendations</FONT></A><FONT class=extract>.</FONT></P>
<P><FONT class=extract>Note that:</FONT></P>
<UL>
<LI><FONT class=extract>The downstream quota measures messages, not requests. </FONT>
<LI><FONT class=extract>Client errors (HTTP status code 400-499) are counted (excluding 429s). </FONT>
<LI><FONT class=extract>Quotas are per-minute, but these minutes are not aligned to the clock.</FONT></LI></UL>
<H4 role=presentation tabIndex=-1 id=monitoring-quota data-text="Monitoring quota"><SPAN role=heading aria-level=4 class=devsite-heading><FONT class=extract>Monitoring quota</FONT></SPAN></H4>
<P><FONT class=extract>You can view quota, usage, and errors on the Google Cloud Console:</FONT></P>
<OL>
<LI><FONT class=extract>Go to the </FONT><A href="https://console.cloud.google.com/"><FONT class=extract><SPAN class=notranslate>Google Cloud</SPAN> console</FONT></A><FONT class=extract> </FONT>
<LI><FONT class=extract>Select <STRONG>APIs &amp; services</STRONG> </FONT>
<LI><FONT class=extract>From the table list, select <STRONG>Firebase Cloud Messaging API</STRONG> </FONT>
<LI><FONT class=extract>Select <STRONG>QUOTA &amp; SYSTEM LIMITS</STRONG>.</FONT></LI></OL>
<P><FONT class=extract>NOTE: These graphs are not precisely time aligned with quota minutes, meaning 429s may be served when traffic appears to be below quota. </FONT></P>
<H4 role=presentation tabIndex=-1 id=request-quota-increase data-text="Requesting a quota increase"><SPAN role=heading aria-level=4 class=devsite-heading><FONT class=extract>Requesting a quota increase</FONT></SPAN></H4>
<P><FONT class=extract>Before requesting a quota increase, ensure that:</FONT></P>
<UL>
<LI><FONT class=extract>Your usage is regularly &#8805; 80% of quota for at least 5 consecutive minutes per day. </FONT>
<LI><FONT class=extract>You have &lt; 5% client error ratio, especially during peak traffic. </FONT>
<LI><FONT class=extract>You adhere to the best practices for sending </FONT><A href="https://firebase.google.com/docs/cloud-messaging/scale-fcm"><FONT class=extract>messages at scale</FONT></A><FONT class=extract>.</FONT></LI></UL>
<P><FONT class=extract>If you meet these criteria, you can </FONT><A href="https://firebase.google.com/support/troubleshooter/contact"><FONT class=extract>submit a quota increase request</FONT></A><FONT class=extract> for up to +25% and <SPAN class=notranslate>FCM</SPAN> will make every practical effort to fulfill the request (no increase can be guaranteed).</FONT></P>
<P><FONT class=extract>If you need more downstream messaging quota due to an impending launch or temporary event, request your quota at least 15 days in advance to allow sufficient time to handle the request. For large requests (&gt;18M messages per minute), at least 30 days of notice is required. Launches and special event requests are still subject to the client error ratio and best practices requirements.</FONT></P>
<P><FONT class=extract>See also the FAQ about </FONT><A href="https://firebase.google.com/support/faq#fcm-quotas"><FONT class=extract><SPAN class=notranslate>FCM</SPAN> quotas</FONT></A><FONT class=extract>.</FONT></P>
<H3 role=presentation tabIndex=-1 id=topics_throttling data-text="Topic message limit"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Topic message limit</FONT></SPAN></H3>
<P><FONT class=extract>The topic subscription add/remove rate is limited to 3,000 QPS per project.</FONT></P>
<P><FONT class=extract>For message sending rates, see </FONT><A href="https://firebase.google.com/docs/cloud-messaging/concept-options#fanout_throttling"><FONT class=extract>Fanout Throttling</FONT></A><FONT class=extract>.</FONT></P>
<H3 role=presentation tabIndex=-1 id=fanout_throttling data-text="Fanout throttling"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Fanout throttling</FONT></SPAN></H3>
<P><FONT class=extract>Message fanout is the process of sending a message to multiple devices, such as when you target topics and groups, or when you use the </FONT><A href="https://console.firebase.google.com/project/_/notification"><FONT class=extract>Notifications composer</FONT></A><FONT class=extract> to target audiences or user segments.</FONT></P>
<P><FONT class=extract>Message fanout is not instantaneous and so occasionally you have multiple fanouts in progress concurrently. We limit the number of concurrent message fanouts per project to 1,000. After that, we may reject additional fanout requests or defer the fanout of the requests until some of the already in progress fanouts complete.</FONT></P>
<P><FONT class=extract>The actual achievable fanout rate is influenced by the number of projects requesting fanouts at the same time. A fanout rate of 10,000 QPS for an individual project is not uncommon, but that number is not a guarantee and is a result of the total load on the system. It is important to note that the available fanout capacity is divided among projects and not across fanout requests. So, if your project has two fanouts in progress, then each fanout will only see half of the available fanout rate. The recommended way to maximize your fanout speed is to only have one active fanout in progress at a time.</FONT></P>
<H3 role=presentation tabIndex=-1 id=collapsible_throttling data-text="Collapsible message throttling"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Collapsible message throttling</FONT></SPAN></H3>
<P><FONT class=extract>As described above, collapsible messages are content-free notifications designed to collapse on top of each other. In the event that a developer is repeating the same message to an app too frequently, we delay (throttle) messages to reduce the impact on a user&#8217;s battery.</FONT></P>
<P><FONT class=extract>For example, if you send large numbers of new email sync requests to a single device, we might delay the next email sync request a few minutes so that the device can sync at a lower average rate. This throttling is done strictly to limit the battery impact experienced by the user.</FONT></P>
<P><FONT class=extract>If your use case requires high burst send patterns, then non-collapsible messages may be the right choice. For such messages, make sure to include the content in such messages in order to reduce the battery cost.</FONT></P>
<P><FONT class=extract>We limit collapsible messages to a burst of 20 messages per app per device, with a refill of 1 message every 3 minutes.</FONT></P>
<H3 role=presentation tabIndex=-1 id=xmpp_throttling data-text="XMPP server  throttling"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>XMPP server throttling</FONT></SPAN></H3><ASIDE class=caution><FONT class=extract><STRONG>Caution:</STRONG><SPAN> Sending messages (including upstream messages) with the <SPAN class=notranslate>FCM</SPAN> XMPP and HTTP legacy APIs was deprecated on June 20, 2023, and <A href="https://firebase.google.com/support/faq#deprecated-api-shutdown"><STRONG>will be removed starting June 2024</STRONG></A>. If you are using the legacy <SPAN class=notranslate>FCM</SPAN> send APIs, we strongly recommend that you <A href="https://firebase.google.com/docs/cloud-messaging/migrate-v1">migrate to the HTTP v1 API</A> or consider using the <A href="https://firebase.google.com/docs/cloud-messaging/server#choosing-a-server-option">Admin SDK</A> to build send requests.</SPAN></ASIDE> </FONT>
<P><FONT class=extract>We limit the rate that you can connect to FCM XMPP servers to 400 connections per minute per project. This shouldn't be an issue for message delivery, but it is important for ensuring the stability of the system. For each project, FCM allows 2500 connections in parallel.</FONT></P>
<P><FONT class=extract>For upstream messaging with XMPP, FCM limits </FONT><A href="https://firebase.google.com/docs/cloud-messaging/android/upstream"><FONT class=extract>upstream messages</FONT></A><FONT class=extract> at 1,500,000/minute per project to avoid overloading upstream destination servers.</FONT></P>
<P><FONT class=extract>We limit upstream messages per device at 1,000/minute to protect against battery drain from bad app behavior.</FONT></P>
<H3 role=presentation tabIndex=-1 id=device_throttling data-text="Maximum message rate to a single device"><SPAN role=heading aria-level=3 class=devsite-heading><FONT class=extract>Maximum message rate to a single device</FONT></SPAN></H3>
<P><FONT class=extract>For Android, you can send up to 240 messages/minute and 5,000 messages/hour to a single device. This high threshold is meant to allow for short term bursts of traffic, such as when users are interacting rapidly over chat. This limit prevents errors in sending logic from inadvertently draining the battery on a device.</FONT></P>
<P><FONT class=extract>For iOS, we return an error when the rate exceeds APNs limits.</FONT></P><ASIDE class=caution><FONT class=extract><STRONG>Caution:</STRONG><SPAN> Do not routinely send messages near this maximum rate. This could waste end users&#8217; resources, and your app may be marked as abusive.</SPAN></ASIDE> </FONT>
<H2 role=presentation tabIndex=-1 id=messaging-ports-and-your-firewall data-text="FCM ports and your firewall"><SPAN role=heading aria-level=2 class=devsite-heading><FONT class=extract><SPAN class=notranslate>FCM</SPAN> ports and your firewall</FONT></SPAN></H2>
<P><FONT class=extract>If your organization has a firewall to restrict traffic to or from the Internet, you need to configure it to allow mobile devices to connect with <SPAN class=notranslate>FCM</SPAN> in order for devices on your network to receive messages. <SPAN class=notranslate>FCM</SPAN> typically uses port 5228, but it sometimes uses 443, 5229, and 5230.</FONT></P>
<P><FONT class=extract>For devices connecting on your network, <SPAN class=notranslate>FCM</SPAN> doesn't provide specific IPs because our IP range changes too frequently and your firewall rules could get out of date, impacting your users' experience. Ideally, allowlist ports 5228-5230 &amp; 443 with no IP restrictions. However, if you must have an IP restriction, you should allowlist all of the IP addresses listed in </FONT><A href="https://cloud.google.com/vpc/docs/configure-private-google-access#ip-addr-defaults"><FONT class=extract>goog.json</FONT></A><FONT class=extract>. This large list is updated regularly, and you are recommended to update your rules on a monthly basis. Problems caused by firewall IP restrictions are often intermittent and difficult to diagnose.</FONT></P>
<P><FONT class=extract>We do offer a set of domain names that can be allowlisted instead of IP addresses. Those hostnames are listed below. If we start using additional hostnames, we will update the list here. Using domain names for your firewall rule may or may not be functional in your firewall device.</FONT></P>
<P><STRONG><FONT class=extract>TCP ports to open:</FONT></STRONG></P>
<UL>
<LI><FONT class=extract>5228 </FONT>
<LI><FONT class=extract>5229 </FONT>
<LI><FONT class=extract>5230 </FONT>
<LI><FONT class=extract>443</FONT></LI></UL>
<P><STRONG><FONT class=extract>Hostnames to open:</FONT></STRONG></P>
<UL>
<LI><FONT class=extract>mtalk.google.com </FONT>
<LI><FONT class=extract>mtalk4.google.com </FONT>
<LI><FONT class=extract>mtalk-staging.google.com </FONT>
<LI><FONT class=extract>mtalk-dev.google.com </FONT>
<LI><FONT class=extract>alt1-mtalk.google.com </FONT>
<LI><FONT class=extract>alt2-mtalk.google.com </FONT>
<LI><FONT class=extract>alt3-mtalk.google.com </FONT>
<LI><FONT class=extract>alt4-mtalk.google.com </FONT>
<LI><FONT class=extract>alt5-mtalk.google.com </FONT>
<LI><FONT class=extract>alt6-mtalk.google.com </FONT>
<LI><FONT class=extract>alt7-mtalk.google.com </FONT>
<LI><FONT class=extract>alt8-mtalk.google.com </FONT>
<LI><FONT class=extract>android.apis.google.com </FONT>
<LI><FONT class=extract>device-provisioning.googleapis.com </FONT>
<LI><FONT class=extract>firebaseinstallations.googleapis.com</FONT></LI></UL>
<P><STRONG><FONT class=extract>Network Address Translation and/or Stateful Packet Inspection firewalls:</FONT></STRONG></P>
<P><FONT class=extract>If your network implements Network Address Translation (NAT) or Stateful Packet Inspection (SPI), implement a 30 minute or larger timeout for our connections over ports 5228-5230. This enables us to provide reliable connectivity while reducing the battery consumption of your users' mobile devices.</FONT></P><ASIDE class=note><FONT class=extract><STRONG>Note:</STRONG><SPAN> If you are receiving notifications over APNs, make sure you have also opened the <A href="https://support.apple.com/en-ph/HT203609">ports specified by Apple</A>.</SPAN></ASIDE> </FONT>
<H2 role=presentation tabIndex=-1 id=vpns data-text="VPN interactions and bypassability"><SPAN role=heading aria-level=2 class=devsite-heading><FONT class=extract>VPN interactions and bypassability</FONT></SPAN></H2>
<P><FONT class=extract><SPAN class=notranslate>Firebase Cloud Messaging</SPAN> takes various steps to ensure that the push messaging connection from the phone to the server is reliable and available as often as possible. The use of a VPN complicates this effort.</FONT></P>
<P><FONT class=extract>VPNs mask the underlying information that <SPAN class=notranslate>FCM</SPAN> needs to tune its connection to maximize reliability &amp; battery life. In some cases VPNs actively break long lived connections resulting in a bad user experience due to missed or delayed messages or a high battery cost. When the VPN is configured to allow us to do so, we bypass the VPN using an encrypted connection (over the base network wifi or LTE) so as to ensure a reliable, battery friendly experience. <SPAN class=notranslate>FCM</SPAN>'s usage of bypassable VPNs is specific to the <SPAN class=notranslate>FCM</SPAN> Push Notification channel. Other <SPAN class=notranslate>FCM</SPAN> traffic, such as registration traffic, uses the VPN if it is active. When the <SPAN class=notranslate>FCM</SPAN> connection bypasses the VPN it loses additional benefits the VPN may provide, such as IP masking.</FONT></P>
<P><FONT class=extract>Different VPNs will have different methods for controlling whether or not it can be bypassed. Consult the documentation for your specific VPN for instructions.</FONT></P>
<P><FONT class=extract>If the VPN is not configured to be bypassable then <SPAN class=notranslate>Firebase Cloud Messaging</SPAN> will use the VPN network in order to connect to the server. This may result in periods of time where messages are delayed and may result in more battery usage as <SPAN class=notranslate>Cloud Messaging</SPAN> works to maintain the connection over the VPN connection.</FONT></P>
<H2 role=presentation tabIndex=-1 id=credentials data-text="Credentials"><SPAN role=heading aria-level=2 class=devsite-heading><FONT class=extract>Credentials</FONT></SPAN></H2>
<P><FONT class=extract>Depending on which <SPAN class=notranslate>FCM</SPAN> features you implement, you may need the following credentials from your Firebase project:</FONT></P>
<DIV class=devsite-table-wrapper>
<TABLE>
<TBODY>
<TR id=projectid>
<TD><FONT class=extract>Project ID</FONT></TD>
<TD><FONT class=extract>A unique identifier for your Firebase project, used in requests to the <SPAN class=notranslate>FCM</SPAN> v1 HTTP endpoint. This value is available in the </FONT><A href="https://console.firebase.google.com/project/_/settings/general"><FONT class=extract><SPAN class=notranslate>Firebase</SPAN> console <STRONG>Settings</STRONG></FONT></A><FONT class=extract> pane.</FONT></TD></TR>
<TR id=regtoken>
<TD><FONT class=extract>Registration token</FONT></TD>
<TD>
<P><FONT class=extract>A unique token string that identifies each client app instance. The registration token is required for single device and device group messaging. Note that registration tokens must be kept secret.</FONT></P></TD></TR>
<TR id=senderid>
<TD><FONT class=extract>Sender ID</FONT></TD>
<TD><FONT class=extract>A unique numerical value created when you create your Firebase project, available in the </FONT><A href="https://console.firebase.google.com/project/_/settings/cloudmessaging/"><SPAN class=notranslate><FONT class=extract>Cloud Messaging</FONT></SPAN></A><FONT class=extract> tab of the <SPAN class=notranslate>Firebase</SPAN> console <STRONG>Settings</STRONG> pane. The sender ID is used to identify each sender that can send messages to the client app.</FONT></TD></TR>
<TR id=accesstoken>
<TD><FONT class=extract>Access token</FONT></TD>
<TD><FONT class=extract>A short-lived OAuth 2.0 token that authorizes requests to the HTTP v1 API. This token is associated with a service account that belongs to your Firebase project. To create and rotate access tokens, follow the steps described in </FONT><A href="https://firebase.google.com/docs/cloud-messaging/auth-server"><FONT class=extract>Authorize Send Requests</FONT></A><FONT class=extract>. </FONT></TD></TR>
<TR id=apikey>
<TD><FONT class=extract>Server key (for **deprecated** legacy protocols)</FONT></TD>
<TD>
<P><FONT class=extract>A server key that authorizes your app server for access to Google services, including sending messages via the deprecated <SPAN class=notranslate>Firebase Cloud Messaging</SPAN> legacy protocols.</FONT></P>
<P><FONT class=extract><STRONG>Important:</STRONG> Do not include the server key anywhere in your client code. Also, make sure to use only server keys to authorize your app server. Android, Apple platform, and browser keys are rejected by <SPAN class=notranslate>FCM</SPAN>. </FONT></P></TD></TR></TBODY></TABLE></DIV>