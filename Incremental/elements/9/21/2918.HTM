<b> : </b><STRONG>3.3 Balancing LRU and LFU</STRONG></H3>
<P><SPAN style="FONT-WEIGHT: 400">Both LRU and LFU have advantages for particular data access patterns, so it&#8217;s common to see them combined in various ways to optimize performance. An LFRU (Least Frequently Recently Used) replacement policy is one such example. It takes into account both recency and frequency by starting with LFU, and then moving to LRU if the data is used frequently enough.&nbsp;</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">To respond to </SPAN><EM><SPAN style="FONT-WEIGHT: 400">changing</SPAN></EM><SPAN style="FONT-WEIGHT: 400"> data access patterns, an ARC (Adaptive Replacement Cache) takes the LFRU approach and then dynamically adjusts the amount of LFU and LRU cache space based on recent replacement events. In practice, ARC will outperform LFU and LRU, but requires the system to tolerate much higher complexity which isn&#8217;t always feasible. </SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">ARC&#8217;s are valuable when access patterns vary, for example a search engine where sometimes requests are a stable set of popular websites, and sometimes requests cluster around particular news events.&nbsp;</SPAN>