<b> : </b><A name=approaches></A><B>2. Approaches to Sharding</B></H2>
<P><SPAN style="FONT-WEIGHT: 400">The different approaches to sharded architectures are based on how the shard key is assigned. Regardless of what they're derived from, shard keys need to be unique </SPAN><I><SPAN style="FONT-WEIGHT: 400">across</SPAN></I><SPAN style="FONT-WEIGHT: 400"> shards, so their values need to be coordinated. This leads to a tradeoff between a centralized "name server" that can dynamically optimize logical shards for performance, and a predetermined distributed algorithm that is faster to compute.</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Shard keys are derived from some invariant feature of the data that utilizes business logic to optimize for the most common queries. Common choices are tenant ids, location, and timestamps. Custom configuration can also tune the performance of a sharded architecture based on usage patterns, actual shard sizes, etc.</SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Here are the three most common approaches to sharding you should know about when designing systems.&nbsp;</SPAN>