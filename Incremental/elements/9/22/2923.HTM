<b> : </b><STRONG>1.1 How sharding works</STRONG><BR>&nbsp;</H3>
<P><SPAN style="FONT-WEIGHT: 400">Each row is assigned a </SPAN><B>shard key</B><SPAN style="FONT-WEIGHT: 400"> that maps it to the </SPAN><B>logical shard</B><SPAN style="FONT-WEIGHT: 400"> it can be found on. More than one logical shard can be located on the same </SPAN><B>physical shard</B><SPAN style="FONT-WEIGHT: 400">, but a logical shard can&#8217;t be split between physical shards. </SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">When creating a sharded architecture, the goal is to have many small shards to create an even distribution of data across the nodes. This prevents </SPAN><B>hotspots</B><SPAN style="FONT-WEIGHT: 400"> from overwhelming any one of the nodes and produces fast response times for all nodes. </SPAN></P>
<P><SPAN style="FONT-WEIGHT: 400">Sharding can be implemented either at the application level or the database level. At this point, most databases support sharded architectures, with the notable exception of PostgresQL, one of the top relational databases.</SPAN>