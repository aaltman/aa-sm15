ABSTRACT<BR>Many distributed databases employ consensus protocols to ensure that data is replicated in a strongly-consistent man- ner on multiple machines despite failures and concurrency. Unfortunately, these protocols show widely varying per- formance under different network, workload, and deploy- ment conditions, and no previous study offers a comprehen- sive dissection and comparison of their performance. To fill this gap, we study single-leader, multi-leader, hierarchical multi-leader, and leaderless (opportunistic leader) consen- sus protocols, and present a comprehensive evaluation of their performance in local area networks (LANs) and wide area networks (WANs). We take a two-pronged systematic approach. We present an analytic modeling of the protocols using queuing theory and show simulations under varying controlled parameters. To cross-validate the analytic model, we also present empirical results from our prototyping and evaluation framework, Paxi. We distill our findings to simple throughput and latency formulas over the most significant parameters. These formulas enable the developers to decide which category of protocols would be most suitable under given deployment conditions.<BR>ACM Reference Format:<BR>Ailidani Ailijiang, Aleksey Charapko, and Murat Demirbas. 2019. Dissecting the Performance of Strongly-Consistent Replication Pro- tocols. In 2019 International Conference on Management of Data (SIG- MOD &#8217;19), June 30-July 5, 2019, Amsterdam, Netherlands. ACM, New York, NY, USA, 15 pages. <A href="https://doi.org/10.1145/3299869.3319893">https://doi.org/10.1145/3299869.3319893</A></P>
<P>&#8727;Work completed at University at Buffalo, SUNY.<BR>&#8224;Also with Microsoft, Redmond, WA.</P>
<P>Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from <A href="mailto:permissions@acm.org">permissions@acm.org</A>.<BR>SIGMOD &#8217;19, June 30-July 5, 2019, Amsterdam, Netherlands<BR>&#169; 2019 Association for Computing Machinery. ACM ISBN 978-1-4503-5643-5/19/06. . . $15.00<BR><A href="https://doi.org/10.1145/3299869.3319893">https://doi.org/10.1145/3299869.3319893</A><BR>&nbsp;&nbsp;&nbsp; 1 INTRODUCTION<BR>Coordination services and protocols play a key role in mod- ern distributed systems and databases. Many distributed databases and datastores [4, 7&#8211;10, 12, 13, 16, 18, 23, 24, 31, 40] use consensus to ensure that data is replicated in a strongly- consistent manner on multiple machines despite failures and concurrency.<BR>Fault-tolerant distributed consensus problem is addressed by the Paxos [25] protocol and its numerous variations and extensions [1, 19&#8211;21, 26, 30, 33&#8211;35]. The performance of these protocols become important for the overall perfor- mance of the distributed databases. These protocols show widely varying performance under different conditions: net- work (latency and bandwidth), workload (command interfer- ence and locality), deployment size and topology (LAN/WAN, quorum sizes), and failures (leader and replica crash and re- covery). Unfortunately, there has been no study that offers a comprehensive comparison across consensus protocols, and that dissects and explains their performance.</P>
<P><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.1 Contributions<BR>We present a comprehensive evaluation of consensus proto- cols in local area networks (LANs) and wide area networks (WANs) and investigate many single-leader, multi-leader, hi- erarchical multi-leader and leaderless (opportunistic leader) consensus protocols. We take a two-pronged systematic ap- proach and study the performance of these protocols both analytically and empirically.<BR>For the analytic part, we devise a queuing theory based model to study the protocols controlling for workload and deployment characteristics and present high-fidelity sim- ulations of the protocols. Our model captures parameters impacting throughput, such as inter-node latencies, node processing speed, network bandwidth, and workload char- acteristics. We made the Python implementations of our analytical models available as opensource.<BR>For our empirical study, we developed Paxi, a prototyp- ing and evaluation framework for consensus and replication protocols. Paxi provides a leveled playground for protocol evaluation and comparison. The protocols are implemented