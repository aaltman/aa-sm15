<b> : </b><A name="Fine-grained Memory Management"></A><FONT face="Palatino Linotype, serif">Fine-grained</FONT><FONT face="Palatino Linotype, serif"><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT face="Palatino Linotype, serif">Memory</FONT><FONT face="Palatino Linotype, serif"><SPAN style="LETTER-SPACING: -0.1pt"> Management</SPAN></FONT></H2></LI></OL></LI></OL>
<P class=western><BR></P>
<P class=western style="MARGIN-TOP: 0.11in"><BR></P>
<DIV id=Section16 style="column-count: 4" dir=ltr gutter="4">
<P class=western><BR></P>
<P class=western><BR></P>
<P class=western><BR></P>
<P class=western><BR></P>
<P class=western style="MARGIN-TOP: 0.02in"><BR></P>
<P class=western align=right><SPAN class=sd-abs-pos style="WIDTH: 242px; POSITION: absolute; LEFT: 1.29in; TOP: -0.49in"></SPAN><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">feedback</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0.16in; LINE-HEIGHT: 98%; TEXT-INDENT: 0.01in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">Memory</SPAN></FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">Allocator</SPAN></FONT></FONT></P>
<P class=western style="LINE-HEIGHT: 100%"><BR></P>
<P class=western style="MARGIN-TOP: 0.09in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.21in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 5pt" size=1>try</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>to</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>pop</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1> </FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>a</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">chunk</SPAN></FONT></FONT></P>
<P class=western style="LINE-HEIGHT: 100%"><BR></P>
<P class=western><BR></P>
<P class=western><BR></P>
<P class=western style="MARGIN-TOP: 0.01in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.06in" align=left><SPAN class=sd-abs-pos style="WIDTH: 304px; POSITION: absolute; LEFT: 0.72in; TOP: -0.47in"></SPAN><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">...</SPAN></FONT></FONT></P></DIV>
<DIV id=Section17 style="column-count: 4" dir=ltr gutter="4">
<P class=western style="MARGIN-TOP: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.94in; LINE-HEIGHT: 0.14in; MARGIN-RIGHT: -0.01in"></P>
<P class=western style="MARGIN-TOP: 0.03in" align=right><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">require/</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 0.07in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">Controller</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.09in; MARGIN-LEFT: 0.13in; TEXT-INDENT: -0.05in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 5pt" size=1>try</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>to</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>push</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>a</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>chunk</FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0.23in; LINE-HEIGHT: 98%; MARGIN-RIGHT: 3.05in; TEXT-INDENT: -0.13in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">Reuse</SPAN></FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">chunk</SPAN></FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">queue</SPAN></FONT></FONT></P></DIV>
<DIV id=Section18 style="column-count: 2" dir=ltr gutter="4">
<P class=western style="MARGIN-LEFT: 0.88in; LINE-HEIGHT: 0.08in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 5pt" size=1>recycle</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>a</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">chunk</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.03in; LINE-HEIGHT: 100%"><BR></P>
<P class=western style="MARGIN-LEFT: 0.21in; MARGIN-RIGHT: 3.44in; TEXT-INDENT: 0.08in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 5pt" size=1>utilization</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1> </FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>of</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1> </FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>the</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1> </FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>queue</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>(empty,full</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>or</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>pop</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>the</FONT><FONT face="Times New Roman, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 5pt" size=1>front)</FONT></FONT></P></DIV>
<DIV id=Section19 dir=ltr>
<P class=western style="MARGIN-TOP: 0.03in"><BR></P>
<P class=western style="MARGIN-LEFT: 1.16in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 7pt" size=1>(a)</FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: 0.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 7pt" size=1>Leaf</FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: 0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 7pt" size=1>node</FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: 0.2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 7pt" size=1>block</FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: 0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">allocator.</SPAN></FONT><FONT style="FONT-SIZE: 7pt" size=1> </FONT><FONT style="FONT-SIZE: 7pt" size=1>(b)</FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: 0.2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 7pt" size=1>Non-leaf</FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 7pt" size=1>node</FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 7pt" size=1>block</FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">allocator.</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.09in; MARGIN-LEFT: 0.56in; LINE-HEIGHT: 96%; MARGIN-RIGHT: 0.22in" align=left><A name=_bookmark11></A><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Georgia, serif"><FONT style="FONT-SIZE: 8pt" size=1>Fig.</FONT></FONT><FONT face="Georgia, serif"><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 1.2pt"> </SPAN></FONT></FONT><FONT face="Georgia, serif"><FONT style="FONT-SIZE: 8pt" size=1>10</FONT></FONT><FONT face="Georgia, serif"><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 4pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 8pt" size=1>Fine-grained</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>memory</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>management.</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>Two</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>data</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>block</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>allocators</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>for</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>fixed-sized</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>leaf</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>node</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.9pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>and</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>variable-sized non-leaf node.</FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.09in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.56in; LINE-HEIGHT: 98%; MARGIN-RIGHT: 0.22in; TEXT-INDENT: 0.21in" align=justify>To<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>reduce<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>memory<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>fragmentation<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>contention<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>in<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>memory<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>allocation for multiple threads, we design and implement a fine-grained allocation/deallocation mechanism for leaf and non-leaf node blocks.</P>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0.56in; LINE-HEIGHT: 98%; MARGIN-RIGHT: 0.22in; TEXT-INDENT: 0.21in" align=justify>As shown in Figure <FONT color=#0000ff><A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark11"><FONT color=#000080>10</FONT></A> </FONT>(a), this allocator is a global memory manager that manages the entire leaf node memory space at the granularity of chunks. The chunk size is adjustable<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>and<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>default<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>to<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>16<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>KB.<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>The<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>manager<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>maintains<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>a<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>global<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN><I>reuse</I><SPAN style="LETTER-SPACING: 1pt"><I> </I></SPAN><I>chunk</I><SPAN style="LETTER-SPACING: 1pt"><I> </I></SPAN><I>queue</I>. It contains the released chunks and several fields indicating the usage of the reuse chunk<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>queue.<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>When<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>thread<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>requests<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>new<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>chunk<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>from<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>manager,<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>it<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>first<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>searches the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>reuse<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>chunk<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>queue<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>controlled<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>by<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN><I>controller</I>.<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>If<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>reuse<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>chunk<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>queue<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>empty, it<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>will<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>obtain<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>a<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>new<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>fixed-size<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>space<SPAN style="LETTER-SPACING: 1pt"> </SPAN>from<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN><I>memory</I><SPAN style="LETTER-SPACING: 1.1pt"><I> </I></SPAN><I>allocator</I><SPAN style="LETTER-SPACING: 1.9pt"><I> </I></SPAN>and<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>feedback.<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>If<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN><SPAN style="LETTER-SPACING: -0.3pt">the</SPAN></P>
<P class=western style="MARGIN-TOP: 0.1in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.34in" align=center><SPAN style="LETTER-SPACING: -0.3pt">12</SPAN></P></DIV>
<P class=western style="MARGIN-TOP: 0.03in; PAGE-BREAK-BEFORE: always; MARGIN-LEFT: 0.22in; LINE-HEIGHT: 98%; MARGIN-RIGHT: 0.56in" align=justify>reuse<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>chunk<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>queue<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>not<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>empty,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>it<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>pops<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>front<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>queue<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>returns<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>user. When a discarded chunk requested, if the reuse chunk queue is full, it will deallocate the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>chunk<SPAN style="LETTER-SPACING: 2pt"> </SPAN>through<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>allocator,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>while<SPAN style="LETTER-SPACING: 2pt"> </SPAN>if<SPAN style="LETTER-SPACING: 2pt"> </SPAN>it<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>not<SPAN style="LETTER-SPACING: 2pt"> </SPAN>full,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>it<SPAN style="LETTER-SPACING: 2pt"> </SPAN>will<SPAN style="LETTER-SPACING: 2pt"> </SPAN>push<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>chunk<SPAN style="LETTER-SPACING: 2pt"> </SPAN>into the queue and use an atomic fetch-and-add struction to increase the size of the reuse chunk queue. We use a spin latch to guarantee thread safety for each operation, i.e., pop and push.</P>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0.22in; LINE-HEIGHT: 98%; MARGIN-RIGHT: 0.56in; TEXT-INDENT: 0.21in" align=justify>As shown in Figure <FONT color=#0000ff><A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark11"><FONT color=#000080>10</FONT></A> </FONT>(b), non-leaf nodes are immutable once created and store elements<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>sorted<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>order<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>by<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>key.<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>Since<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>non-leaf<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>nodes<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>are<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>read-mostly<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>change<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>less frequently,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>they<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>are<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>replaced<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>wholesale<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>by<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>new<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>created<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>non-leaf<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>nodes<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>when<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>node splitting. While this benefits searches on the node, it produces small memory space allocation<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>overhead.<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>To<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>overcome<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>this<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>problem,<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>we<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>design<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>implement<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN><I>valenblock allocator</I><SPAN style="LETTER-SPACING: 1.7pt"><I> </I></SPAN>performing non-leaf nodes&#8217; storage space allocation. It includes two layers.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>In the first layer, we use a <I>free chunk list</I><SPAN style="LETTER-SPACING: 1.7pt"><I> </I></SPAN>to maintain a list of fixed size free chunks.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>The<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>valenblock<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>allocator<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>requests<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>a<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>new<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>free<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>chunk<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>from<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>linked<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>list,<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>initializing its reference counter to 0, and adds it to the active chunk array. In the second layer, when an non-leaf node created, a thread acquires a small space from a random active chunk and increment its referenced count by one. When the non-leaf node released, the active chunk&#8217; referenced count decrements by one. There is a background thread periodically<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>check<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>recycle<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>active<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>chunks<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>once<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>they<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>are<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>no<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>longer<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>referenced<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>by any non-leaf node.</P>
<OL>
<OL start=2>
<LI>