<b> : </b>Obtaining the embeddings<svg aria-hidden=true class=anchor-heading-icon xmlns="http://www.w3.org/2000/svg" width="15px" height="15px" viewBox="0 0 20 20" stroke-width="0" fill="currentColor" stroke="currentColor"><path clip-rule="evenodd" d="M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" fill-rule="evenodd"></path></svg></H3></A></DIV>
<P style="BOX-SIZING: border-box; FONT-SIZE: 16px; MARGIN-BOTTOM: 15px; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(53,55,64); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 1.5; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; scrollbar-width: thin; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">The dataset contains a total of 568,454 food reviews Amazon users left up to October 2012. We will use a subset of 1,000 most recent reviews for illustration purposes. The reviews are in English and tend to be positive or negative. Each review has a ProductId, UserId, Score, review title (Summary) and review body (Text). For example:</P>
<DIV class=docs-embeddings-sample-data-table style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; OVERFLOW-X: auto; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(53,55,64); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; scrollbar-width: thin; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<TABLE style="BOX-SIZING: border-box; BORDER-COLLAPSE: collapse; MARGIN: 20px 0px 15px; scrollbar-width: thin">
<THEAD style="BOX-SIZING: border-box; scrollbar-width: thin">
<TR style="BOX-SIZING: border-box; scrollbar-width: thin">
<TH style="BOX-SIZING: border-box; FONT-SIZE: 12px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; VERTICAL-ALIGN: bottom; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: uppercase; FONT-WEIGHT: 700; COLOR: ; PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; LETTER-SPACING: 0.1em; LINE-HEIGHT: 16px; PADDING-RIGHT: 8px; scrollbar-width: thin">Product Id</TH>
<TH style="BOX-SIZING: border-box; FONT-SIZE: 12px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; VERTICAL-ALIGN: bottom; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: uppercase; FONT-WEIGHT: 700; COLOR: ; PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; LETTER-SPACING: 0.1em; LINE-HEIGHT: 16px; PADDING-RIGHT: 8px; scrollbar-width: thin">User Id</TH>
<TH style="BOX-SIZING: border-box; FONT-SIZE: 12px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; VERTICAL-ALIGN: bottom; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: uppercase; FONT-WEIGHT: 700; COLOR: ; PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; LETTER-SPACING: 0.1em; LINE-HEIGHT: 16px; PADDING-RIGHT: 8px; scrollbar-width: thin">Score</TH>
<TH style="BOX-SIZING: border-box; FONT-SIZE: 12px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; VERTICAL-ALIGN: bottom; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: uppercase; FONT-WEIGHT: 700; COLOR: ; PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; LETTER-SPACING: 0.1em; LINE-HEIGHT: 16px; PADDING-RIGHT: 8px; scrollbar-width: thin">Summary</TH>
<TH style="BOX-SIZING: border-box; FONT-SIZE: 12px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; VERTICAL-ALIGN: bottom; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: uppercase; FONT-WEIGHT: 700; COLOR: ; PADDING-BOTTOM: 3px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; LETTER-SPACING: 0.1em; LINE-HEIGHT: 16px; PADDING-RIGHT: 0px; scrollbar-width: thin">Text</TH></TR></THEAD>
<TBODY style="BOX-SIZING: border-box; scrollbar-width: thin">
<TR style="BOX-SIZING: border-box; scrollbar-width: thin">
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 8px; scrollbar-width: thin; border-image: initial">B001E4KFG0</TD>
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; PADDING-RIGHT: 8px; scrollbar-width: thin; border-image: initial">A3SGXH7AUHU8GW</TD>
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; PADDING-RIGHT: 8px; scrollbar-width: thin; border-image: initial">5</TD>
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; MIN-WIDTH: 150px; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; PADDING-RIGHT: 8px; scrollbar-width: thin; border-image: initial">Good Quality Dog Food</TD>
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; MIN-WIDTH: 150px; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; scrollbar-width: thin; border-image: initial">I have bought several of the Vitality canned...</TD></TR>
<TR style="BOX-SIZING: border-box; scrollbar-width: thin">
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 8px; scrollbar-width: thin; border-image: initial">B00813GRG4</TD>
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; PADDING-RIGHT: 8px; scrollbar-width: thin; border-image: initial">A1D87F6ZCVE5NK</TD>
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; PADDING-RIGHT: 8px; scrollbar-width: thin; border-image: initial">1</TD>
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; MIN-WIDTH: 150px; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; PADDING-RIGHT: 8px; scrollbar-width: thin; border-image: initial">Not as Advertised</TD>
<TD style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 1px solid; BORDER-RIGHT: medium none; VERTICAL-ALIGN: top; MIN-WIDTH: 150px; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; scrollbar-width: thin; border-image: initial">Product arrived labeled as Jumbo Salted Peanut...</TD></TR></TBODY></TABLE></DIV>
<P style="BOX-SIZING: border-box; FONT-SIZE: 16px; MARGIN-BOTTOM: 15px; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(53,55,64); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 1.5; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; scrollbar-width: thin; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">We will combine the review summary and review text into a single combined text. The model will encode this combined text and output a single vector embedding.</P><A class=tag-link style="BOX-SIZING: border-box; FONT-SIZE: 16px; CURSOR: pointer; TEXT-DECORATION: none; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 700; COLOR: ; PADDING-BOTTOM: 6px; FONT-STYLE: normal; PADDING-TOP: 6px; PADDING-LEFT: 12px; ORPHANS: 2; WIDOWS: 2; DISPLAY: inline-flex; LETTER-SPACING: normal; PADDING-RIGHT: 12px; TEXT-INDENT: 0px; scrollbar-width: thin; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; border-radius: 100px; align-items: center" href="https://cookbook.openai.com/examples/get_embeddings_from_dataset" rel=noreferrer target=_blank>
<P style="BOX-SIZING: border-box; MARGIN-BOTTOM: 15px; MARGIN-TOP: 0px; LINE-HEIGHT: 1.5; scrollbar-width: thin">Get_embeddings_from_dataset.ipynb</P><svg class=tag-link-icon xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24" fill="currentColor"><path clip-rule="evenodd" d="M15 5a1 1 0 1 1 0-2h5a1 1 0 0 1 1 1v5a1 1 0 1 1-2 0V6.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L17.586 5H15ZM4 7a3 3 0 0 1 3-3h3a1 1 0 1 1 0 2H7a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-3a1 1 0 1 1 2 0v3a3 3 0 0 1-3 3H7a3 3 0 0 1-3-3V7Z" fill-rule="evenodd"></path></svg></A><SPAN style="FONT-SIZE: 16px; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; FONT-WEIGHT: 400; COLOR: rgb(53,55,64); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"></SPAN>
<DIV class=code-sample style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(53,55,64); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 24px 0px; DISPLAY: flex; LETTER-SPACING: normal; TEXT-INDENT: 0px; scrollbar-width: thin; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; border-radius: 8px; flex-direction: column">
<DIV class="code-sample-body code-sample-body-large" style="BOX-SIZING: border-box; POSITION: relative; scrollbar-width: thin; flex-shrink: 0; flex-grow: 1"><PRE class="hljs syntax-highlighter dark-mode code-sample-pre" style="BOX-SIZING: border-box; FONT-SIZE: 15px; HEIGHT: 251px; FONT-FAMILY: var(--monospace); BACKGROUND: none transparent scroll repeat 0% 0%; OVERFLOW-X: auto; COLOR: ; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 16px; MIN-HEIGHT: 44px; MARGIN: 0px; LINE-HEIGHT: 24px; PADDING-RIGHT: 16px; scrollbar-width: thin; border-radius: 8px; --sh-fg: 25, 25, 39; --sh-bg: var(--code-snippet-bg)"><CODE class=language-python style="BOX-SIZING: border-box; FONT-FAMILY: var(--monospace); WHITE-SPACE: pre; scrollbar-width: thin"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--monospace); FLOAT: left; PADDING-RIGHT: 10px; scrollbar-width: thin"><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">1
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">2
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">3
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">4
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">5
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">6
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">7
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">8
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">9
</SPAN></CODE><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">from</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> openai </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">import</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> OpenAI
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">client = OpenAI()
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"></SPAN><SPAN class="hljs-function hljs-keyword" style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">def</SPAN><SPAN class=hljs-function style="BOX-SIZING: border-box; scrollbar-width: thin"> </SPAN><SPAN class="hljs-function hljs-title" style="BOX-SIZING: border-box; COLOR: rgb(242,44,61); scrollbar-width: thin">get_embedding</SPAN><SPAN class=hljs-function style="BOX-SIZING: border-box; scrollbar-width: thin">(</SPAN><SPAN class="hljs-function hljs-params" style="BOX-SIZING: border-box; scrollbar-width: thin">text, model=</SPAN><SPAN class="hljs-function hljs-params hljs-string" style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">"text-embedding-3-small"</SPAN><SPAN class=hljs-function style="BOX-SIZING: border-box; scrollbar-width: thin">):</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">   text = text.replace(</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">"\n"</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">, </SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">" "</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">)
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">   </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">return</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> client.embeddings.create(</SPAN><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(233,149,12); scrollbar-width: thin">input</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> = [text], model=model).data[</SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">0</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">].embedding
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">df[</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'ada_embedding'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">] = df.combined.apply(</SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">lambda</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> x: get_embedding(x, model=</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'text-embedding-3-small'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">))
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">df.to_csv(</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'output/embedded_1k_reviews.csv'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">, index=</SPAN><SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">False</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">)</SPAN></SPAN></CODE></PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; FONT-SIZE: 16px; MARGIN-BOTTOM: 15px; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(53,55,64); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 1.5; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; scrollbar-width: thin; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">To load the data from a saved file, you can run the following:</P>
<DIV class=code-sample style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(53,55,64); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 24px 0px; DISPLAY: flex; LETTER-SPACING: normal; TEXT-INDENT: 0px; scrollbar-width: thin; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; border-radius: 8px; flex-direction: column">
<DIV class="code-sample-body code-sample-body-large" style="BOX-SIZING: border-box; POSITION: relative; scrollbar-width: thin; flex-shrink: 0; flex-grow: 1"><PRE class="hljs syntax-highlighter dark-mode code-sample-pre" style="BOX-SIZING: border-box; FONT-SIZE: 15px; HEIGHT: 120px; FONT-FAMILY: var(--monospace); BACKGROUND: none transparent scroll repeat 0% 0%; OVERFLOW-X: auto; COLOR: ; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 16px; MIN-HEIGHT: 44px; MARGIN: 0px; LINE-HEIGHT: 24px; PADDING-RIGHT: 16px; scrollbar-width: thin; border-radius: 8px; --sh-fg: 25, 25, 39; --sh-bg: var(--code-snippet-bg)"><CODE class=language-python style="BOX-SIZING: border-box; FONT-FAMILY: var(--monospace); WHITE-SPACE: pre; scrollbar-width: thin"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--monospace); FLOAT: left; PADDING-RIGHT: 10px; scrollbar-width: thin"><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">1
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">2
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">3
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">4
</SPAN></CODE><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">import</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> pandas </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">as</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> pd
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">df = pd.read_csv(</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'output/embedded_1k_reviews.csv'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">)
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">df[</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'ada_embedding'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">] = df.ada_embedding.apply(</SPAN><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(233,149,12); scrollbar-width: thin">eval</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">).apply(np.array)</SPAN></SPAN></CODE></PRE></DIV></DIV>
<DIV class="expn expanded" style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(53,55,64); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; scrollbar-width: thin; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<DIV aria-expanded=true role=button aria-controls=expander-0 class=expn-title style="BOX-SIZING: border-box; FONT-SIZE: 20px; CURSOR: pointer; FONT-WEIGHT: 700; PADDING-BOTTOM: 26px; PADDING-TOP: 26px; PADDING-LEFT: 0px; DISPLAY: flex; LINE-HEIGHT: 1.4; PADDING-RIGHT: 14px; scrollbar-width: thin; align-items: center; flex-direction: row; justify-content: flex-start; transition: color 0.3s; font-variant-numeric: tabular-nums">
<DIV class=expn-icon style="BOX-SIZING: border-box; FONT-SIZE: 22px; DISPLAY: flex; PADDING-RIGHT: 6px; scrollbar-width: thin; flex: 0 0 auto; align-items: center; justify-content: center"><svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24" fill="currentColor"><path clip-rule="evenodd" d="M12 8a1 1 0 0 1 .707.293l7 7a1 1 0 0 1-1.414 1.414L12 10.414l-6.293 6.293a1 1 0 0 1-1.414-1.414l7-7A1 1 0 0 1 12 8Z" fill-rule="evenodd"></path></svg></DIV>
<DIV class=expn-label style="BOX-SIZING: border-box; scrollbar-width: thin; flex: 1 1 auto">Reducing embedding dimensions</DIV></DIV>
<DIV id=expander-0 class=expn-content style="BOX-SIZING: border-box; PADDING-BOTTOM: 20px; PADDING-TOP: 0px; PADDING-LEFT: 24px; PADDING-RIGHT: 24px; scrollbar-width: thin">
<P style="BOX-SIZING: border-box; MARGIN-BOTTOM: 15px; MARGIN-TOP: 0px; LINE-HEIGHT: 1.5; scrollbar-width: thin">Using larger embeddings, for example storing them in a vector store for retrieval, generally costs more and consumes more compute, memory and storage than using smaller embeddings.</P>
<P style="BOX-SIZING: border-box; MARGIN-BOTTOM: 15px; MARGIN-TOP: 0px; LINE-HEIGHT: 1.5; scrollbar-width: thin">Both of our new embedding models were trained<SPAN>&nbsp;</SPAN><A style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: ; scrollbar-width: thin" href="https://arxiv.org/abs/2205.13147" rel="noopener noreferrer" target=_blank>with a technique</A><SPAN>&nbsp;</SPAN>that allows developers to trade-off performance and cost of using embeddings. Specifically, developers can shorten embeddings (i.e. remove some numbers from the end of the sequence) without the embedding losing its concept-representing properties by passing in the<SPAN>&nbsp;</SPAN><A style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: ; scrollbar-width: thin" href="https://platform.openai.com/docs/api-reference/embeddings/create#embeddings-create-dimensions"><CODE style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-FAMILY: var(--monospace); BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 500; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: 0px; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 0.3em; scrollbar-width: thin; border-radius: 4px; background-size: ; background-origin: ; background-clip: ; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px">dimensions</CODE><SPAN>&nbsp;</SPAN>API parameter</A>. For example, on the MTEB benchmark, a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-FAMILY: var(--monospace); BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 500; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: 0px; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 0.3em; scrollbar-width: thin; border-radius: 4px; background-size: ; background-origin: ; background-clip: ; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px">text-embedding-3-large</CODE><SPAN>&nbsp;</SPAN>embedding can be shortened to a size of 256 while still outperforming an unshortened<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-FAMILY: var(--monospace); BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 500; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: 0px; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 0.3em; scrollbar-width: thin; border-radius: 4px; background-size: ; background-origin: ; background-clip: ; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px">text-embedding-ada-002</CODE><SPAN>&nbsp;</SPAN>embedding with a size of 1536. You can read more about how changing the dimensions impacts performance in our<SPAN>&nbsp;</SPAN><A style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: ; scrollbar-width: thin" href="https://openai.com/blog/new-embedding-models-and-api-updates#:~:text=Native%20support%20for%20shortening%20embeddings" rel="noopener noreferrer" target=_blank>embeddings v3 launch blog post</A>.</P>
<P style="BOX-SIZING: border-box; MARGIN-BOTTOM: 15px; MARGIN-TOP: 0px; LINE-HEIGHT: 1.5; scrollbar-width: thin">In general, using the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-FAMILY: var(--monospace); BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 500; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: 0px; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 0.3em; scrollbar-width: thin; border-radius: 4px; background-size: ; background-origin: ; background-clip: ; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px">dimensions</CODE><SPAN>&nbsp;</SPAN>parameter when creating the embedding is the suggested approach. In certain cases, you may need to change the embedding dimension after you generate it. When you change the dimension manually, you need to be sure to normalize the dimensions of the embedding as is shown below.</P>
<DIV class=code-sample style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; MARGIN: 24px 0px; DISPLAY: flex; scrollbar-width: thin; border-radius: 8px; flex-direction: column">
<DIV class="code-sample-body code-sample-body-large" style="BOX-SIZING: border-box; POSITION: relative; scrollbar-width: thin; flex-shrink: 0; flex-grow: 1"><PRE class="hljs syntax-highlighter dark-mode code-sample-pre" style="BOX-SIZING: border-box; FONT-SIZE: 15px; HEIGHT: 624px; FONT-FAMILY: var(--monospace); BACKGROUND: none transparent scroll repeat 0% 0%; OVERFLOW-X: auto; COLOR: ; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 16px; MIN-HEIGHT: 44px; MARGIN: 0px; LINE-HEIGHT: 24px; PADDING-RIGHT: 16px; scrollbar-width: thin; border-radius: 8px; --sh-fg: 25, 25, 39; --sh-bg: var(--code-snippet-bg)"><CODE class=language-python style="BOX-SIZING: border-box; FONT-FAMILY: var(--monospace); WHITE-SPACE: pre; scrollbar-width: thin"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--monospace); FLOAT: left; PADDING-RIGHT: 10px; scrollbar-width: thin"><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">1
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">2
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">3
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">4
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">5
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">6
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">7
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">8
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">9
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">10
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">11
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">12
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">13
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">14
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">15
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">16
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">17
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">18
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">19
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">20
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">21
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">22
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">23
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">24
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">25
</SPAN></CODE><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">from</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> openai </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">import</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> OpenAI
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"></SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">import</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> numpy </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">as</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> np
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">client = OpenAI()
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"></SPAN><SPAN class="hljs-function hljs-keyword" style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">def</SPAN><SPAN class=hljs-function style="BOX-SIZING: border-box; scrollbar-width: thin"> </SPAN><SPAN class="hljs-function hljs-title" style="BOX-SIZING: border-box; COLOR: rgb(242,44,61); scrollbar-width: thin">normalize_l2</SPAN><SPAN class=hljs-function style="BOX-SIZING: border-box; scrollbar-width: thin">(</SPAN><SPAN class="hljs-function hljs-params" style="BOX-SIZING: border-box; scrollbar-width: thin">x</SPAN><SPAN class=hljs-function style="BOX-SIZING: border-box; scrollbar-width: thin">):</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">    x = np.array(x)
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">    </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">if</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> x.ndim == </SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">1</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">:
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">        norm = np.linalg.norm(x)
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">        </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">if</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> norm == </SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">0</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">:
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">            </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">return</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> x
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">        </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">return</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> x / norm
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">    </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">else</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">:
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">        norm = np.linalg.norm(x, </SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">2</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">, axis=</SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">1</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">, keepdims=</SPAN><SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">True</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">)
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">        </SPAN><SPAN class=hljs-keyword style="BOX-SIZING: border-box; COLOR: rgb(46,149,211); scrollbar-width: thin">return</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"> np.where(norm == </SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">0</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">, x, x / norm)
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">response = client.embeddings.create(
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">    model=</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">"text-embedding-3-small"</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">, </SPAN><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(233,149,12); scrollbar-width: thin">input</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">=</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">"Testing 123"</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">, encoding_format=</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">"float"</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">)
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">cut_dim = response.data[</SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">0</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">].embedding[:</SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">256</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">]
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">norm_dim = normalize_l2(cut_dim)
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"></SPAN><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(233,149,12); scrollbar-width: thin">print</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">(norm_dim)</SPAN></SPAN></CODE></PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; MARGIN-BOTTOM: 15px; MARGIN-TOP: 0px; LINE-HEIGHT: 1.5; scrollbar-width: thin">Dynamically changing the dimensions enables very flexible usage. For example, when using a vector data store that only supports embeddings up to 1024 dimensions long, developers can now still use our best embedding model<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-FAMILY: var(--monospace); BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 500; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: 0px; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 0.3em; scrollbar-width: thin; border-radius: 4px; background-size: ; background-origin: ; background-clip: ; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px">text-embedding-3-large</CODE><SPAN>&nbsp;</SPAN>and specify a value of 1024 for the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 14px; BORDER-TOP: 0px; FONT-FAMILY: var(--monospace); BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 500; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: 0px; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 0.3em; scrollbar-width: thin; border-radius: 4px; background-size: ; background-origin: ; background-clip: ; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px">dimensions</CODE><SPAN>&nbsp;</SPAN>API parameter, which will shorten the embedding down from 3072 dimensions, trading off some accuracy in exchange for the smaller vector size.</P></DIV></DIV>
<DIV class="expn expanded" style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: S&#246;hne, helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(53,55,64); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; scrollbar-width: thin; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<DIV aria-expanded=true role=button aria-controls=expander-1 class=expn-title style="BOX-SIZING: border-box; FONT-SIZE: 20px; CURSOR: pointer; FONT-WEIGHT: 700; PADDING-BOTTOM: 26px; PADDING-TOP: 26px; PADDING-LEFT: 0px; DISPLAY: flex; LINE-HEIGHT: 1.4; PADDING-RIGHT: 14px; scrollbar-width: thin; align-items: center; flex-direction: row; justify-content: flex-start; transition: color 0.3s; font-variant-numeric: tabular-nums">
<DIV class=expn-icon style="BOX-SIZING: border-box; FONT-SIZE: 22px; DISPLAY: flex; PADDING-RIGHT: 6px; scrollbar-width: thin; flex: 0 0 auto; align-items: center; justify-content: center"><svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24" fill="currentColor"><path clip-rule="evenodd" d="M12 8a1 1 0 0 1 .707.293l7 7a1 1 0 0 1-1.414 1.414L12 10.414l-6.293 6.293a1 1 0 0 1-1.414-1.414l7-7A1 1 0 0 1 12 8Z" fill-rule="evenodd"></path></svg></DIV>
<DIV class=expn-label style="BOX-SIZING: border-box; scrollbar-width: thin; flex: 1 1 auto">Question answering using embeddings-based search</DIV></DIV>
<DIV id=expander-1 class=expn-content style="BOX-SIZING: border-box; PADDING-BOTTOM: 20px; PADDING-TOP: 0px; PADDING-LEFT: 24px; PADDING-RIGHT: 24px; scrollbar-width: thin"><A class=tag-link style="BOX-SIZING: border-box; MARGIN-BOTTOM: 24px; CURSOR: pointer; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; FONT-WEIGHT: 700; COLOR: ; PADDING-BOTTOM: 6px; PADDING-TOP: 6px; PADDING-LEFT: 12px; DISPLAY: inline-flex; PADDING-RIGHT: 12px; scrollbar-width: thin; border-radius: 100px; align-items: center" href="https://cookbook.openai.com/examples/question_answering_using_embeddings" rel=noreferrer target=_blank>Question_answering_using_embeddings.ipynb<svg class=tag-link-icon xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24" fill="currentColor"><path clip-rule="evenodd" d="M15 5a1 1 0 1 1 0-2h5a1 1 0 0 1 1 1v5a1 1 0 1 1-2 0V6.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L17.586 5H15ZM4 7a3 3 0 0 1 3-3h3a1 1 0 1 1 0 2H7a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-3a1 1 0 1 1 2 0v3a3 3 0 0 1-3 3H7a3 3 0 0 1-3-3V7Z" fill-rule="evenodd"></path></svg></A>
<P style="BOX-SIZING: border-box; MARGIN-BOTTOM: 15px; MARGIN-TOP: 0px; LINE-HEIGHT: 1.5; scrollbar-width: thin">There are many common cases where the model is not trained on data which contains key facts and information you want to make accessible when generating responses to a user query. One way of solving this, as shown below, is to put additional information into the context window of the model. This is effective in many use cases but leads to higher token costs. In this notebook, we explore the tradeoff between this approach and embeddings bases search.</P>
<DIV class=code-sample style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; MARGIN: 24px 0px; DISPLAY: flex; scrollbar-width: thin; border-radius: 8px; flex-direction: column">
<DIV class="code-sample-body code-sample-body-large" style="BOX-SIZING: border-box; POSITION: relative; scrollbar-width: thin; flex-shrink: 0; flex-grow: 1"><PRE class="hljs syntax-highlighter dark-mode code-sample-pre" style="BOX-SIZING: border-box; FONT-SIZE: 15px; HEIGHT: 491px; FONT-FAMILY: var(--monospace); BACKGROUND: none transparent scroll repeat 0% 0%; OVERFLOW-X: auto; COLOR: ; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 16px; MIN-HEIGHT: 44px; MARGIN: 0px; LINE-HEIGHT: 24px; PADDING-RIGHT: 16px; scrollbar-width: thin; border-radius: 8px; --sh-fg: 25, 25, 39; --sh-bg: var(--code-snippet-bg)"><CODE class=language-python style="BOX-SIZING: border-box; FONT-FAMILY: var(--monospace); WHITE-SPACE: pre; scrollbar-width: thin"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--monospace); FLOAT: left; PADDING-RIGHT: 10px; scrollbar-width: thin"><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">1
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">2
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">3
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">4
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">5
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">6
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">7
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">8
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">9
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">10
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">11
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">12
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">13
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">14
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">15
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">16
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">17
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">18
</SPAN><SPAN class=react-syntax-highlighter-line-number style="BOX-SIZING: border-box; COLOR: ; scrollbar-width: thin; user-select: none">19
</SPAN></CODE><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">query = </SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">f"""Use the below article on the 2022 Winter Olympics to answer the subsequent question. If the answer cannot be found, write "I don't know."
</SPAN></SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">
</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">Article:
</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">\"\"\"
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin"></SPAN><SPAN class="hljs-string hljs-subst" style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">{wikipedia_article_on_curling}</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">
</SPAN></SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">\"\"\"
</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">Question: Which athletes won the gold medal in curling at the 2022 Winter Olympics?"""</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">response = client.chat.completions.create(
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">    messages=[
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">        {</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'role'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">: </SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'system'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">, </SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'content'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">: </SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'You answer questions about the 2022 Winter Olympics.'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">},
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">        {</SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'role'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">: </SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'user'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">, </SPAN><SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(0,166,125); scrollbar-width: thin">'content'</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">: query},
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">    ],
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">    model=GPT_MODEL,
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">    temperature=</SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">0</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">,
</SPAN></SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">)
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">
</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin"></SPAN><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(233,149,12); scrollbar-width: thin">print</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">(response.choices[</SPAN><SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(223,48,121); scrollbar-width: thin">0</SPAN><SPAN style="BOX-SIZING: border-box; scrollbar-width: thin">].message.content)</SPAN></SPAN></CODE></PRE></DIV></DIV></DIV></DIV>