In<SPAN>&nbsp;</SPAN><A title="Computer science" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Computer_science">computer science</A>,<SPAN>&nbsp;</SPAN><B>locality-sensitive hashing</B><SPAN>&nbsp;</SPAN>(<B>LSH</B>) is a<SPAN>&nbsp;</SPAN><A title="Fuzzy hashing" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Fuzzy_hashing">fuzzy hashing</A><SPAN>&nbsp;</SPAN>technique that hashes similar input items into the same "buckets" with high probability.<SUP id=cite_ref-MOMD_1-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Locality-sensitive_hashing#cite_note-MOMD-1"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[1]</FONT></A></SUP><SPAN>&nbsp;</SPAN>(The number of buckets is much smaller than the universe of possible input items.)<SUP id=cite_ref-MOMD_1-1 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Locality-sensitive_hashing#cite_note-MOMD-1"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[1]</FONT></A></SUP><SPAN>&nbsp;</SPAN>Since similar items end up in the same buckets, this technique can be used for<SPAN>&nbsp;</SPAN><A title="Cluster analysis" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Cluster_analysis">data clustering</A><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><A title="Nearest neighbor search" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Nearest_neighbor_search">nearest neighbor search</A>. It differs from<SPAN>&nbsp;</SPAN><A title="Hash function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Hash_function">conventional hashing techniques</A><SPAN>&nbsp;</SPAN>in that<SPAN>&nbsp;</SPAN><A title="Hash collision" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Hash_collision">hash collisions</A><SPAN>&nbsp;</SPAN>are maximized, not minimized. Alternatively, the technique can be seen as a way to<SPAN>&nbsp;</SPAN><A title="Dimension reduction" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Dimension_reduction">reduce the dimensionality</A><SPAN>&nbsp;</SPAN>of high-dimensional data; high-dimensional input items can be reduced to low-dimensional versions while preserving relative distances between items.