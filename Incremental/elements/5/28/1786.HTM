<b> : </b><SPAN class=section-number style="BOX-SIZING: border-box">3.2.3.2.<SPAN>&nbsp;</SPAN></SPAN>L2 Policy for Persisting Accesses<A title="Permalink to this headline" class=headerlink style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: ; FONT: 14px/1 FontAwesome; MARGIN-LEFT: 0.5em; DISPLAY: inline-block; text-rendering: auto; -webkit-font-smoothing: antialiased; opacity: 0" href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#l2-policy-for-persisting-accesses">&#61633;</A></H4>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">An access policy window specifies a contiguous region of global memory and a persistence property in the L2 cache for accesses within that region.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">The code example below shows how to set an L2 persisting access window using a CUDA Stream.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">CUDA Stream Example</STRONG></P>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell11 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=n style="BOX-SIZING: border-box">cudaStreamAttrValue</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">stream_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">                                         </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Stream level attributes data structure</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">stream_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">base_ptr</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">  </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">reinterpret_cast</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">void</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">*&gt;</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">ptr</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Global Memory data pointer</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">stream_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">num_bytes</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">num_bytes</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">                    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Number of bytes for persistence access.</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">                                                                              </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// (Must be less than cudaDeviceProp::accessPolicyMaxWindowSize)</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">stream_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">hitRatio</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">  </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mf style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">0.6</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">                          </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Hint for cache hit ratio</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">stream_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">hitProp</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">   </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cudaAccessPropertyPersisting</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Type of access property on cache hit</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">stream_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">missProp</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">  </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cudaAccessPropertyStreaming</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">  </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Type of access property on cache miss.</SPAN>

<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">//Set the attributes to a CUDA stream of type cudaStream_t</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">cudaStreamSetAttribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">stream</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cudaStreamAttributeAccessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=n style="BOX-SIZING: border-box">stream_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">When a kernel subsequently executes in CUDA<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">stream</SPAN></CODE>, memory accesses within the global memory extent<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">[ptr..ptr+num_bytes)</SPAN></CODE><SPAN>&nbsp;</SPAN>are more likely to persist in the L2 cache than accesses to other global memory locations.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">L2 persistence can also be set for a CUDA Graph Kernel Node as shown in the example below:</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">CUDA GraphKernelNode Example</STRONG></P>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell12 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=n style="BOX-SIZING: border-box">cudaKernelNodeAttrValue</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">node_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">                                     </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Kernel level attributes data structure</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">node_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">base_ptr</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">  </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">reinterpret_cast</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">void</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">*&gt;</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">ptr</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Global Memory data pointer</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">node_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">num_bytes</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">num_bytes</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">                    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Number of bytes for persistence access.</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">                                                                            </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// (Must be less than cudaDeviceProp::accessPolicyMaxWindowSize)</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">node_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">hitRatio</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">  </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mf style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">0.6</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">                          </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Hint for cache hit ratio</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">node_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">hitProp</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">   </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cudaAccessPropertyPersisting</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Type of access property on cache hit</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">node_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">accessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">missProp</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">  </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cudaAccessPropertyStreaming</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">  </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Type of access property on cache miss.</SPAN>

<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">//Set the attributes to a CUDA Graph Kernel node of type cudaGraphNode_t</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">cudaGraphKernelNodeSetAttribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">node</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cudaKernelNodeAttributeAccessPolicyWindow</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=n style="BOX-SIZING: border-box">node_attribute</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">The<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">hitRatio</SPAN></CODE><SPAN>&nbsp;</SPAN>parameter can be used to specify the fraction of accesses that receive the<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">hitProp</SPAN></CODE><SPAN>&nbsp;</SPAN>property. In both of the examples above, 60% of the memory accesses in the global memory region<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">[ptr..ptr+num_bytes)</SPAN></CODE><SPAN>&nbsp;</SPAN>have the persisting property and 40% of the memory accesses have the streaming property. Which specific memory accesses are classified as persisting (the<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">hitProp</SPAN></CODE>) is random with a probability of approximately<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">hitRatio</SPAN></CODE>; the probability distribution depends upon the hardware architecture and the memory extent.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">For example, if the L2 set-aside cache size is 16KB and the<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">num_bytes</SPAN></CODE><SPAN>&nbsp;</SPAN>in the<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">accessPolicyWindow</SPAN></CODE><SPAN>&nbsp;</SPAN>is 32KB:</P>
<UL class=simple style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 24px; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px">
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px">With a<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">hitRatio</SPAN></CODE><SPAN>&nbsp;</SPAN>of 0.5, the hardware will select, at random, 16KB of the 32KB window to be designated as persisting and cached in the set-aside L2 cache area.</P></LI>
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px">With a<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">hitRatio</SPAN></CODE><SPAN>&nbsp;</SPAN>of 1.0, the hardware will attempt to cache the whole 32KB window in the set-aside L2 cache area. Since the set-aside area is smaller than the window, cache lines will be evicted to keep the most recently used 16KB of the 32KB data in the set-aside portion of the L2 cache.</P></LI></UL>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">The<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">hitRatio</SPAN></CODE><SPAN>&nbsp;</SPAN>can therefore be used to avoid thrashing of cache lines and overall reduce the amount of data moved into and out of the L2 cache.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">A<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">hitRatio</SPAN></CODE><SPAN>&nbsp;</SPAN>value below 1.0 can be used to manually control the amount of data different<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">accessPolicyWindow</SPAN></CODE>s from concurrent CUDA streams can cache in L2. For example, let the L2 set-aside cache size be 16KB; two concurrent kernels in two different CUDA streams, each with a 16KB<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">accessPolicyWindow</SPAN></CODE>, and both with<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">hitRatio</SPAN></CODE><SPAN>&nbsp;</SPAN>value 1.0, might evict each others&#8217; cache lines when competing for the shared L2 resource. However, if both<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">accessPolicyWindows</SPAN></CODE><SPAN>&nbsp;</SPAN>have a hitRatio value of 0.5, they will be less likely to evict their own or each others&#8217; persisting cache lines.</P></SECTION><SECTION id=l2-access-properties style="BOX-SIZING: border-box; DISPLAY: block"><SPAN id=l2-access-prop style="BOX-SIZING: border-box"></SPAN>