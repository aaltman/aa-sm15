<B>: TLA: </B>10,000 starting states 
<H3></H3>
<P style="LINE-HEIGHT: 1.5">So now we&#8217;re testing two inputs. That&#8217;s twice as good as one input. Even better than that would be testing 10,000 inputs. Remember how in the last chapter we talked about generating<SPAN>&nbsp;</SPAN><A class="reference internal" style="TEXT-DECORATION: none; COLOR: " href="https://www.learntla.com/core/operators.html#sets-of-values"><SPAN class="std std-ref"><FONT color=#0066cc size=3>sets of values</FONT></SPAN></A>? This is just one of the many places it&#8217;s really useful.</P>
<DIV id=id15 class="literal-block-wrapper docutils container">
<DIV class="highlight-udiff notranslate" style="OVERFLOW-X: auto">
<DIV class=highlight style="BOX-SIZING: border-box; BACKGROUND: rgb(248,248,248); MARGIN-TOP: 0px; OVERFLOW-X: auto; COLOR: rgb(37,38,48); PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-RIGHT: 0px; border-radius: 0.2rem"><PRE style='FONT-FAMILY: "Roboto Mono", monospace, Monaco, Consolas, "Andale Mono"; LINE-HEIGHT: 18px'><SPAN></SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>---- MODULE duplicates ----<SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>EXTENDS Integers, Sequences, TLC<SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>
<SPAN class=gi style="COLOR: rgb(0,132,0)">+S == 1..10</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=gi style="COLOR: rgb(0,132,0)">+</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>(*--algorithm dup<SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=gd style="COLOR: rgb(160,0,0)">-  variable seq = &lt;&lt;1, 2, 3, 2&gt;&gt;;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=gi style="COLOR: rgb(0,132,0)">+  variable seq \in S \X S \X S \X S;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>  index = 1;<SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>  seen = {};<SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>  is_unique = TRUE;<SPAN class=w style="COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV>
<DIV class=code-block-caption style="FONT-SIZE: 0.8em; TEXT-ALIGN: center"><SPAN class=caption-text><SPAN>70000 states / 60000 distinct</SPAN><SPAN>&nbsp;</SPAN><A class="reference download internal" style="TEXT-DECORATION: none; COLOR: " href="https://www.learntla.com/_downloads/141ebf7bccb611071d2a3d925dbabd13/duplicates.tla" download=""><CODE class="xref download docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: "Roboto Mono", monospace, Monaco, Consolas, "Andale Mono"; PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; border-radius: 0.2rem'><SPAN class=pre><FONT color=#0066cc size=2>spec</FONT></SPAN></CODE></A></SPAN></DIV></DIV>
<P style="LINE-HEIGHT: 1.5">We&#8217;re now significantly more likely to cover all interesting edge cases. This isn&#8217;t<SPAN>&nbsp;</SPAN><EM>guaranteed</EM>: maybe there&#8217;s a bug that<SPAN>&nbsp;</SPAN><EM>only</EM><SPAN>&nbsp;</SPAN>triggers if we have<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: "Roboto Mono", monospace, Monaco, Consolas, "Andale Mono"; PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; border-radius: 0.2rem'><SPAN class=pre>-187</SPAN></CODE><SPAN>&nbsp;</SPAN>in there somewhere. TLA+ can only augment your engineering judgement, not replace it. But my judgement is telling me that it&#8217;s unlikely for<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: "Roboto Mono", monospace, Monaco, Consolas, "Andale Mono"; PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; border-radius: 0.2rem'><SPAN class=pre>-187</SPAN></CODE><SPAN>&nbsp;</SPAN>to be the edge case, so I&#8217;m confident calling this good coverage.</P>
<DIV class="admonition note" style="OVERFLOW: hidden; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; BORDER-LEFT: rgb(88,127,159) 5px solid; MARGIN-RIGHT: 1px; border-radius: 0.2rem; box-shadow: 0px 0px 0px 1px var(--dividerColor)">
<P class=admonition-title style="BOX-SIZING: border-box; FONT-WEIGHT: bolder; COLOR: rgb(88,127,159); PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Note</P>
<P style="BOX-SIZING: border-box; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px">Okay, there&#8217;s one big gap: while we&#8217;re trying a lot of different elements, we&#8217;re only looking at one fixed<SPAN>&nbsp;</SPAN><EM>length</EM>. Maybe there&#8217;s an issue with 1 or 0-length sequences. We&#8217;ll be able to fix this once we learn about<SPAN>&nbsp;</SPAN><A class="reference internal" style="TEXT-DECORATION: none; COLOR: " href="https://www.learntla.com/core/functions.html#function-set"><SPAN class="std std-ref"><FONT color=#0066cc>function sets</FONT></SPAN></A>.</P></DIV>
<P style="LINE-HEIGHT: 1.5">Now that we have broad state-space coverage, it&#8217;s time to write some properties. In<SPAN>&nbsp;</SPAN><A class="reference internal" style="TEXT-DECORATION: none; COLOR: " href="https://www.learntla.com/core/invariants.html"><SPAN class=doc><FONT color=#0066cc size=3>the next chapter</FONT></SPAN></A><SPAN>&nbsp;</SPAN>we&#8217;ll specify that our checker always gets the correct result.</P></SECTION></SECTION><SECTION id=summary style="FONT-SIZE: medium; FONT-FAMILY: Roboto, OpenSans, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 4px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(37,38,48); FONT-STYLE: normal; MARGIN-LEFT: 4px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-RIGHT: 4px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">