<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "Open Sans", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><ACRONYM class=acronym style="BOX-SIZING: border-box">SP-GiST</ACRONYM><SPAN>&nbsp;</SPAN>is an abbreviation for space-partitioned<SPAN>&nbsp;</SPAN><ACRONYM class=acronym style="BOX-SIZING: border-box">GiST</ACRONYM>.<SPAN>&nbsp;</SPAN><ACRONYM class=acronym style="BOX-SIZING: border-box">SP-GiST</ACRONYM><SPAN>&nbsp;</SPAN>supports partitioned search trees, which facilitate development of a wide range of different non-balanced data structures, such as quad-trees, k-d trees, and radix trees (tries). The common feature of these structures is that they repeatedly divide the search space into partitions that need not be of equal size. Searches that are well matched to the partitioning rule can be very fast.</P>
<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "Open Sans", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>These popular data structures were originally developed for in-memory usage. In main memory, they are usually designed as a set of dynamically allocated nodes linked by pointers. This is not suitable for direct storing on disk, since these chains of pointers can be rather long which would require too many disk accesses. In contrast, disk-based data structures should have a high fanout to minimize I/O. The challenge addressed by<SPAN>&nbsp;</SPAN><ACRONYM class=acronym style="BOX-SIZING: border-box">SP-GiST</ACRONYM><SPAN>&nbsp;</SPAN>is to map search tree nodes to disk pages in such a way that a search need access only a few disk pages, even if it traverses many nodes.</P>
<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "Open Sans", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Like<SPAN>&nbsp;</SPAN><ACRONYM class=acronym style="BOX-SIZING: border-box">GiST</ACRONYM>,<SPAN>&nbsp;</SPAN><ACRONYM class=acronym style="BOX-SIZING: border-box">SP-GiST</ACRONYM><SPAN>&nbsp;</SPAN>is meant to allow the development of custom data types with the appropriate access methods, by an expert in the domain of the data type, rather than a database expert.</P>
<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: "Open Sans", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Some of the information here is derived from Purdue University's SP-GiST Indexing Project<SPAN>&nbsp;</SPAN><A class=ulink style="BOX-SIZING: border-box; TEXT-DECORATION: none; FONT-WEIGHT: 600; COLOR: ; BACKGROUND-COLOR: transparent; transition: color 0.2s ease-in-out" href="https://www.cs.purdue.edu/spgist/" target=_top>web site</A>. The<SPAN>&nbsp;</SPAN><ACRONYM class=acronym style="BOX-SIZING: border-box">SP-GiST</ACRONYM><SPAN>&nbsp;</SPAN>implementation in<SPAN>&nbsp;</SPAN><SPAN class=productname style="BOX-SIZING: border-box">PostgreSQL</SPAN><SPAN>&nbsp;</SPAN>is primarily maintained by Teodor Sigaev and Oleg Bartunov, and there is more information on their<SPAN>&nbsp;</SPAN><A class=ulink style="BOX-SIZING: border-box; TEXT-DECORATION: none; FONT-WEIGHT: 600; COLOR: ; BACKGROUND-COLOR: transparent; transition: color 0.2s ease-in-out" href="http://www.sai.msu.su/~megera/wiki/spgist_dev" target=_top>web site</A>.