<b> : </b>Examples</H2><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Examples" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Asynchronous_I/O&amp;action=edit&amp;section=14"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">The following examples show three approaches to reading I/O. The objects and functions are abstract.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">1. Blocking, synchronous:</P>
<DIV class="mw-highlight mw-highlight-lang-python mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><SPAN class=n>device</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>open</SPAN><SPAN class=p>()</SPAN>
<SPAN class=n>data</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>device</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>read</SPAN><SPAN class=p>()</SPAN> <SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic"># thread will be blocked until there is data in the device</SPAN>
<SPAN class=nb style="COLOR: rgb(0,128,0)">print</SPAN><SPAN class=p>(</SPAN><SPAN class=n>data</SPAN><SPAN class=p>)</SPAN>
</PRE></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">2. Blocking and non-blocking, synchronous: (here<SPAN>&nbsp;</SPAN><CODE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 4px; border-radius: 2px">IO.poll()</CODE><SPAN>&nbsp;</SPAN>blocks for up to 5 seconds, but<SPAN>&nbsp;</SPAN><CODE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 4px; border-radius: 2px">device.read()</CODE><SPAN>&nbsp;</SPAN>doesn't)</P>
<DIV class="mw-highlight mw-highlight-lang-python mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><SPAN class=n>device</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>open</SPAN><SPAN class=p>()</SPAN>
<SPAN class=n>ready</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=kc style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">False</SPAN>
<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">while</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">not</SPAN> <SPAN class=n>ready</SPAN><SPAN class=p>:</SPAN>
    <SPAN class=nb style="COLOR: rgb(0,128,0)">print</SPAN><SPAN class=p>(</SPAN><SPAN class=s2 style="COLOR: rgb(186,33,33)">"There is no data to read!"</SPAN><SPAN class=p>)</SPAN>
    <SPAN class=n>ready</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>poll</SPAN><SPAN class=p>(</SPAN><SPAN class=n>device</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>INPUT</SPAN><SPAN class=p>,</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">5</SPAN><SPAN class=p>)</SPAN> <SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic"># returns control if 5 seconds have elapsed or there is data to read (INPUT)</SPAN>
<SPAN class=n>data</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>device</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>read</SPAN><SPAN class=p>()</SPAN>
<SPAN class=nb style="COLOR: rgb(0,128,0)">print</SPAN><SPAN class=p>(</SPAN><SPAN class=n>data</SPAN><SPAN class=p>)</SPAN>
</PRE></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">3. Non-blocking, asynchronous:</P>
<DIV class="mw-highlight mw-highlight-lang-python mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><SPAN class=n>ios</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>IOService</SPAN><SPAN class=p>()</SPAN>
<SPAN class=n>device</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>open</SPAN><SPAN class=p>(</SPAN><SPAN class=n>ios</SPAN><SPAN class=p>)</SPAN>

<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">def</SPAN> <SPAN class=nf style="COLOR: rgb(0,0,255)">inputHandler</SPAN><SPAN class=p>(</SPAN><SPAN class=n>data</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>err</SPAN><SPAN class=p>):</SPAN>
    <SPAN class=s2 style="COLOR: rgb(186,33,33)">"Input data handler"</SPAN>
    <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">if</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">not</SPAN> <SPAN class=n>err</SPAN><SPAN class=p>:</SPAN>
        <SPAN class=nb style="COLOR: rgb(0,128,0)">print</SPAN><SPAN class=p>(</SPAN><SPAN class=n>data</SPAN><SPAN class=p>)</SPAN>

<SPAN class=n>device</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>readSome</SPAN><SPAN class=p>(</SPAN><SPAN class=n>inputHandler</SPAN><SPAN class=p>)</SPAN>
<SPAN class=n>ios</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>loop</SPAN><SPAN class=p>()</SPAN> <SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic"># wait till all operations have been completed and call all appropriate handlers</SPAN>
</PRE></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Here is the same example with<SPAN>&nbsp;</SPAN><A title=Async/await style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Async/await">Async/await</A>:</P>
<DIV class="mw-highlight mw-highlight-lang-python mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><SPAN class=n>ios</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>IOService</SPAN><SPAN class=p>()</SPAN>
<SPAN class=n>device</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>open</SPAN><SPAN class=p>(</SPAN><SPAN class=n>ios</SPAN><SPAN class=p>)</SPAN>

<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">async</SPAN> <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">def</SPAN> <SPAN class=nf style="COLOR: rgb(0,0,255)">task</SPAN><SPAN class=p>():</SPAN>
    <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">try</SPAN><SPAN class=p>:</SPAN> 
        <SPAN class=n>data</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">await</SPAN> <SPAN class=n>device</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>readSome</SPAN><SPAN class=p>()</SPAN>
        <SPAN class=nb style="COLOR: rgb(0,128,0)">print</SPAN><SPAN class=p>(</SPAN><SPAN class=n>data</SPAN><SPAN class=p>)</SPAN>
    <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">except</SPAN> <SPAN class=ne style="FONT-WEIGHT: bold; COLOR: rgb(203,63,56)">Exception</SPAN><SPAN class=p>:</SPAN>
        <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">pass</SPAN>

<SPAN class=n>ios</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>addTask</SPAN><SPAN class=p>(</SPAN><SPAN class=n>task</SPAN><SPAN class=p>)</SPAN>
<SPAN class=n>ios</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>loop</SPAN><SPAN class=p>()</SPAN> <SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic"># wait till all operations have been completed and call all appropriate handlers</SPAN>
</PRE></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Here is the example with<SPAN>&nbsp;</SPAN><A title="Reactor pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Reactor_pattern">Reactor pattern</A>:</P>
<DIV class="mw-highlight mw-highlight-lang-python mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><SPAN class=n>device</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>open</SPAN><SPAN class=p>()</SPAN>
<SPAN class=n>reactor</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>Reactor</SPAN><SPAN class=p>()</SPAN>

<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">def</SPAN> <SPAN class=nf style="COLOR: rgb(0,0,255)">inputHandler</SPAN><SPAN class=p>(</SPAN><SPAN class=n>data</SPAN><SPAN class=p>):</SPAN>
    <SPAN class=s2 style="COLOR: rgb(186,33,33)">"Input data handler"</SPAN>
    <SPAN class=nb style="COLOR: rgb(0,128,0)">print</SPAN><SPAN class=p>(</SPAN><SPAN class=n>data</SPAN><SPAN class=p>)</SPAN>
    <SPAN class=n>reactor</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>stop</SPAN><SPAN class=p>()</SPAN>

<SPAN class=n>reactor</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>addHandler</SPAN><SPAN class=p>(</SPAN><SPAN class=n>inputHandler</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>device</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>IO</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>INPUT</SPAN><SPAN class=p>)</SPAN>
<SPAN class=n>reactor</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">.</SPAN><SPAN class=n>run</SPAN><SPAN class=p>()</SPAN> <SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic"># run reactor, which handles events and calls appropriate handlers</SPAN></PRE></DIV>