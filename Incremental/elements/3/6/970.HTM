<B>: </B>Wait-freedom 
<H2></H2><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Wait-freedom" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Non-blocking_algorithm&amp;action=edit&amp;section=3"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN> 
<DIV></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Wait-freedom is the strongest non-blocking guarantee of progress, combining guaranteed system-wide throughput with<SPAN>&nbsp;</SPAN></FONT><A title="Resource starvation" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Resource_starvation"><FONT class=extract>starvation</FONT></A><FONT class=extract>-freedom.</FONT> <FONT class=extract>An algorithm is wait-free if every operation has a bound on the number of steps the algorithm will take before the operation completes</FONT>.<SUP id=cite_ref-awilliams_15-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Non-blocking_algorithm#cite_note-awilliams-15"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[15]</FONT></A></SUP><SPAN>&nbsp;</SPAN>This property is critical for real-time systems and is always nice to have as long as the performance cost is not too high.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>It was shown in the 1980s<SUP id=cite_ref-imp_16-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Non-blocking_algorithm#cite_note-imp-16"><FONT face=Arial>[16]</FONT></A></SUP><SPAN>&nbsp;</SPAN>that all algorithms can be implemented wait-free, and many transformations from serial code, called<SPAN>&nbsp;</SPAN><I>universal constructions</I>, have been demonstrated. However, the resulting performance does not in general match even na&#239;ve blocking designs. Several papers have since improved the performance of universal constructions, but still, their performance is far below blocking designs.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Several papers have investigated the difficulty of creating wait-free algorithms. For example, it has been shown<SUP id=cite_ref-cond-sync_17-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Non-blocking_algorithm#cite_note-cond-sync-17"><FONT face=Arial>[17]</FONT></A></SUP><SPAN>&nbsp;</SPAN>that the widely available atomic<SPAN>&nbsp;</SPAN><I>conditional</I><SPAN>&nbsp;</SPAN>primitives,<SPAN>&nbsp;</SPAN></FONT><A title=Compare-and-swap style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Compare-and-swap"><FONT class=extract>CAS</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN></FONT><A title=Load-link/store-conditional style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Load-link/store-conditional"><FONT class=extract>LL/SC</FONT></A><FONT class=extract>, cannot provide starvation-free implementations of many common data structures without memory costs growing linearly in the number of threads.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>But in practice these lower bounds do not present a real barrier as spending a cache line or exclusive reservation granule (up to 2&nbsp;KB on ARM) of store per thread in the shared memory is not considered too costly for practical fsystems (typically the amount of store logically required is a word, but physically CAS operations on the same cache line will collide, and LL/SC operations in the same exclusive reservation granule will collide, so the amount of store physically required<SUP class="noprint Inline-Template Template-Fact" style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; LINE-HEIGHT: 1">[<I><A title="Wikipedia:Citation needed" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Wikipedia:Citation_needed"><SPAN title="This claim needs references to reliable sources. (June 2014)">citation needed</SPAN></A></I>]</SUP><SPAN>&nbsp;</SPAN>is greater).</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Wait-free algorithms were rare until 2011, both in research and in practice. However, in 2011 Kogan and<SPAN>&nbsp;</SPAN></FONT><A title="Erez Petrank" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Erez_Petrank"><FONT class=extract>Petrank</FONT></A><SUP id=cite_ref-wf-queue_18-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Non-blocking_algorithm#cite_note-wf-queue-18"><FONT class=extract face=Arial>[18]</FONT></A></SUP><FONT class=extract><SPAN>&nbsp;</SPAN>presented a wait-free queue building on the<SPAN>&nbsp;</SPAN></FONT><A title=Compare-and-swap style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Compare-and-swap"><FONT class=extract>CAS</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>primitive, generally available on common hardware. Their construction expanded the lock-free queue of Michael and Scott,<SUP id=cite_ref-lf-queue_19-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Non-blocking_algorithm#cite_note-lf-queue-19"><FONT face=Arial>[19]</FONT></A></SUP><SPAN>&nbsp;</SPAN>which is an efficient queue often used in practice. A follow-up paper by Kogan and Petrank<SUP id=cite_ref-wf-fpsp_20-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Non-blocking_algorithm#cite_note-wf-fpsp-20"><FONT face=Arial>[20]</FONT></A></SUP><SPAN>&nbsp;</SPAN>provided a method for making wait-free algorithms fast and used this method to make the wait-free queue practically as fast as its lock-free counterpart. A subsequent paper by Timnat and Petrank<SUP id=cite_ref-wf-simulation_21-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Non-blocking_algorithm#cite_note-wf-simulation-21"><FONT face=Arial>[21]</FONT></A></SUP><SPAN>&nbsp;</SPAN>provided an automatic mechanism for generating wait-free data structures from lock-free ones. Thus, wait-free implementations are now available for many data-structures.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Under reasonable assumptions, Alistarh, Censor-Hillel, and Shavit showed that lock-free algorithms are practically wait-free.<SUP id=cite_ref-lf-wf_22-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Non-blocking_algorithm#cite_note-lf-wf-22"><FONT face=Arial>[22]</FONT></A></SUP><SPAN>&nbsp;</SPAN>So the added algorithmic complexity of a wait-free algorithm might not be worth the effort, if there are not hard deadlines to be met.</FONT></P>
<DIV class="mw-heading mw-heading2" style='FONT-SIZE: 1.5em; OVERFLOW: hidden; FONT-FAMILY: "Linux Libertine", Georgia, Times, "Source Serif Pro", serif; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: ; PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.375; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'></DIV>