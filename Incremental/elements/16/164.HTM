<b> : </b>1. Atomic registers</H1><SPAN id=line-6 class=anchor style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"></SPAN><SPAN id=line-7 class=anchor style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"></SPAN>
<P class=line862 style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">An<SPAN>&nbsp;</SPAN><STRONG>atomic register</STRONG><SPAN>&nbsp;</SPAN>supports read and write operations; we think of these as happening instantaneously, and think of operations of different processes as interleaved in some sequence. Each read operation on a particular register returns the value written by the last previous write operation. Write operations return nothing.<SPAN id=line-8 class=anchor></SPAN><SPAN id=line-9 class=anchor></SPAN></P>
<P class=line862 style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">A process is defined by giving, for each state, the operation that it would like to do next, together with a transition function that specifies how the state will be updated in response to the return value of that operation. A configuration of the system consists of a vector of states for the processes and a vector of value for the registers. An execution consists of a sequence of alternating configurations and operations C<SUB>0</SUB>, &#960;<SUB>1</SUB>, C<SUB>1</SUB>, &#960;<SUB>2</SUB>, C<SUB>2</SUB><SPAN>&nbsp;</SPAN>..., where in each triple C<SUB>i</SUB>, &#960;<SUB>i+1</SUB>, C<SUB>i+1</SUB><SPAN>&nbsp;</SPAN>the configuration C<SUB>i+1</SUB><SPAN>&nbsp;</SPAN>is the result of applying &#960;<SUB>i+1</SUB><SPAN>&nbsp;</SPAN>to configuration C<SUB>i</SUB>. For read operations, this means that the state of the reading process is updated according to its transition function. For write operations, the state of the writing process is updated, and the state of the written register is also updated.<SPAN id=line-10 class=anchor></SPAN><SPAN id=line-11 class=anchor></SPAN></P>
<P class=line874 style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Pseudocode for shared-memory protocols is usually written using standard pseudocode conventions, with the register operations appearing either as explicit subroutine calls or implicitly as references to shared variables. Sometimes this can lead to ambiguity; for example, in the code fragment<SPAN id=line-12 class=anchor></SPAN><SPAN id=line-13 class=anchor></SPAN><SPAN id=line-14 class=anchor></SPAN></P><PRE style="FONT-SIZE: 16px; BORDER-TOP: rgb(174,189,204) 1pt solid; FONT-FAMILY: courier, monospace; BORDER-RIGHT: rgb(174,189,204) 1pt solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(174,189,204) 1pt solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5pt; FONT-STYLE: normal; PADDING-TOP: 5pt; PADDING-LEFT: 5pt; BORDER-LEFT: rgb(174,189,204) 1pt solid; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 5pt; BACKGROUND-COLOR: rgb(243,245,247); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word"><SPAN id=line-1 class=anchor></SPAN>    done &#8592; leftDone and rightDone    </PRE><SPAN id=line-15 class=anchor style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"></SPAN><SPAN id=line-16 class=anchor style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"></SPAN>
<P class=line862 style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">When all three variables are shared, it is clear that the operation<SPAN>&nbsp;</SPAN><TT class=backtick>write(done,&nbsp;some-value)</TT><SPAN>&nbsp;</SPAN>happens after<SPAN>&nbsp;</SPAN><TT class=backtick>read(leftDone)</TT><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><TT class=backtick>read(rightDone)</TT>, but it is not clear which of<SPAN>&nbsp;</SPAN><TT class=backtick>read(leftDone)</TT><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><TT class=backtick>read(rightDone)</TT><SPAN>&nbsp;</SPAN>happens first. When the order is important, we'll write the sequence out explicitly:<SPAN id=line-17 class=anchor></SPAN><SPAN id=line-18 class=anchor></SPAN><SPAN id=line-19 class=anchor></SPAN><SPAN id=line-20 class=anchor></SPAN><SPAN id=line-21 class=anchor></SPAN></P><PRE style="FONT-SIZE: 16px; BORDER-TOP: rgb(174,189,204) 1pt solid; FONT-FAMILY: courier, monospace; BORDER-RIGHT: rgb(174,189,204) 1pt solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(174,189,204) 1pt solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 5pt; FONT-STYLE: normal; PADDING-TOP: 5pt; PADDING-LEFT: 5pt; BORDER-LEFT: rgb(174,189,204) 1pt solid; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 5pt; BACKGROUND-COLOR: rgb(243,245,247); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word"><SPAN id=line-1-1 class=anchor></SPAN>    leftIsDone &#8592; read(leftDone)
<SPAN id=line-2 class=anchor></SPAN>    rightIsDone &#8592; read(rightDone)
<SPAN id=line-3 class=anchor></SPAN>    write(done, leftIsDone and rightIsDone)</PRE><SPAN id=line-22 class=anchor style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"></SPAN>
<P class=line862 style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Here<SPAN>&nbsp;</SPAN><TT class=backtick>leftIsDone</TT><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><TT class=backtick>rightIsDone</TT><SPAN>&nbsp;</SPAN>are internal variables of the process, so using them does not require read or write operations to the shared memory.<SPAN id=line-23 class=anchor></SPAN><SPAN id=line-24 class=anchor></SPAN><SPAN id=line-25 class=anchor></SPAN></P>
<P class=line867 style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">