<b> : </b>Forecasting throughput scalability</H2>Here we give approximate back-of-the-envelope formulas for predicting the limiting throughput of different protocols. These formulas are not the whole story, as they don't show how latency changes as throughput increases as does our queueing theory and empirical results show. But they are useful to relatively rank the scalability of Paxos variants with respect to each other.<BR><BR>Through our analytical modeling and Paxi experiments, we find that the throughput of a protocol is inversely proportional to the load on the busiest node, which is by definition the leader or a leader. The throughput scalability of protocols improve as the load decreases.<BR><BR>Let<SPAN>&nbsp;</SPAN><SPAN role=presentation tabIndex=0 id=MathJax-Element-11-Frame class=MathJax style="FONT-SIZE: 17px; MAX-WIDTH: none; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE-SPACE: nowrap; WORD-SPACING: normal; MIN-WIDTH: 0px; BORDER-BOTTOM: 0px; POSITION: relative; TEXT-TRANSFORM: none; FLOAT: none; FONT-WEIGHT: normal; PADDING-BOTTOM: 0px; DIRECTION: ltr; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MIN-HEIGHT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline-table; LETTER-SPACING: normal; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; MAX-HEIGHT: none; TEXT-INDENT: 0px; font-size-adjust: none; overflow-wrap: normal" data-mathml='<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>L</mi></math>'><NOBR aria-hidden=true style="TEXT-DECORATION: none; MAX-WIDTH: none; BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: 0px; WHITE-SPACE: nowrap !important; MIN-WIDTH: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MIN-HEIGHT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; MAX-HEIGHT: none; transition: none"><SPAN id=MathJax-Span-58 class=math style="TEXT-DECORATION: none; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WIDTH: 0.82em; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline-block; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none"><SPAN style="FONT-SIZE: 20px; TEXT-DECORATION: none; BORDER-TOP: 0px; HEIGHT: 0px; BORDER-RIGHT: 0px; WIDTH: 0.67em; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline-block; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none"><SPAN style="TEXT-DECORATION: none; BORDER-TOP: 0px; CLIP: rect(1.4em 1000.63em 2.36em -999.99em); BORDER-RIGHT: 0px; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: absolute; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LEFT: 0em; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline; LINE-HEIGHT: normal; TOP: -2.21em; PADDING-RIGHT: 0px; transition: none"><SPAN id=MathJax-Span-59 class=mrow style="TEXT-DECORATION: none; BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none"><SPAN id=MathJax-Span-60 class=mi style="TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: MathJax_Math-italic; BORDER-RIGHT: 0px; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none">L</SPAN></SPAN><SPAN style="TEXT-DECORATION: none; BORDER-TOP: 0px; HEIGHT: 2.22em; BORDER-RIGHT: 0px; WIDTH: 0px; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline-block; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none"></SPAN></SPAN></SPAN><SPAN style="OVERFLOW: hidden; TEXT-DECORATION: none; HEIGHT: 0.94em; BORDER-RIGHT-WIDTH: 0px; WIDTH: 0px; VERTICAL-ALIGN: -0.05em; BORDER-BOTTOM-WIDTH: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px solid; MARGIN: 0px; DISPLAY: inline-block; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; transition: none; border-image: initial"></SPAN></SPAN></NOBR><SPAN role=presentation class=MJX_Assistive_MathML style="OVERFLOW: hidden !important; TEXT-DECORATION: none; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline; LINE-HEIGHT: normal; TOP: 0px; PADDING-RIGHT: 0px; transition: none; user-select: none"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>L</mi></math></SPAN></SPAN><SPAN>&nbsp;</SPAN>be the number of leaders, and Q be quorum size, and c the conflict probability. Then we can approximate Load as follows:<BR>Load = ( 1 + c ) * ( Q-1 ) *&nbsp; 1/L +&nbsp; ( 1 + c ) *&nbsp; 1-1/L<BR><BR>The first part in the summation denotes that a leader is responsible for only 1/L of the requests, and it needs to process messages by Q-1 nodes. Moreover if there is a conflict, with conflict probability c, those fraction of requests incur another round of load.<BR><BR>The second part says that a leader is also responsible for serving as participant in other leaders protocol, adding one message processing cost for the 1-1/L of the requests. Furthermore we also account for<SPAN>&nbsp;</SPAN><SPAN role=presentation tabIndex=0 id=MathJax-Element-12-Frame class=MathJax style="FONT-SIZE: 17px; MAX-WIDTH: none; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WHITE-SPACE: nowrap; WORD-SPACING: normal; MIN-WIDTH: 0px; BORDER-BOTTOM: 0px; POSITION: relative; TEXT-TRANSFORM: none; FLOAT: none; FONT-WEIGHT: normal; PADDING-BOTTOM: 0px; DIRECTION: ltr; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MIN-HEIGHT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline-table; LETTER-SPACING: normal; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; MAX-HEIGHT: none; TEXT-INDENT: 0px; font-size-adjust: none; overflow-wrap: normal" data-mathml='<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>c</mi></math>'><NOBR aria-hidden=true style="TEXT-DECORATION: none; MAX-WIDTH: none; BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: 0px; WHITE-SPACE: nowrap !important; MIN-WIDTH: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MIN-HEIGHT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; MAX-HEIGHT: none; transition: none"><SPAN id=MathJax-Span-61 class=math style="TEXT-DECORATION: none; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WIDTH: 0.53em; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline-block; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none"><SPAN style="FONT-SIZE: 20px; TEXT-DECORATION: none; BORDER-TOP: 0px; HEIGHT: 0px; BORDER-RIGHT: 0px; WIDTH: 0.43em; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline-block; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none"><SPAN style="TEXT-DECORATION: none; BORDER-TOP: 0px; CLIP: rect(1.64em 1000.44em 2.36em -999.99em); BORDER-RIGHT: 0px; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: absolute; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LEFT: 0em; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline; LINE-HEIGHT: normal; TOP: -2.21em; PADDING-RIGHT: 0px; transition: none"><SPAN id=MathJax-Span-62 class=mrow style="TEXT-DECORATION: none; BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none"><SPAN id=MathJax-Span-63 class=mi style="TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: MathJax_Math-italic; BORDER-RIGHT: 0px; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none">c</SPAN></SPAN><SPAN style="TEXT-DECORATION: none; BORDER-TOP: 0px; HEIGHT: 2.22em; BORDER-RIGHT: 0px; WIDTH: 0px; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline-block; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; transition: none"></SPAN></SPAN></SPAN><SPAN style="OVERFLOW: hidden; TEXT-DECORATION: none; HEIGHT: 0.65em; BORDER-RIGHT-WIDTH: 0px; WIDTH: 0px; VERTICAL-ALIGN: -0.05em; BORDER-BOTTOM-WIDTH: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px solid; MARGIN: 0px; DISPLAY: inline-block; LINE-HEIGHT: normal; PADDING-RIGHT: 0px; BORDER-TOP-WIDTH: 0px; transition: none; border-image: initial"></SPAN></SPAN></NOBR><SPAN role=presentation class=MJX_Assistive_MathML style="OVERFLOW: hidden !important; TEXT-DECORATION: none; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; VERTICAL-ALIGN: 0px; BORDER-BOTTOM: 0px; POSITION: static; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline; LINE-HEIGHT: normal; TOP: 0px; PADDING-RIGHT: 0px; transition: none; user-select: none"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>c</mi></math></SPAN></SPAN><SPAN>&nbsp;</SPAN>fractional load due to conflicts.<BR><BR>The above formula simplifies to Load = ( 1 + c ) * ( Q + L - 2 ) / L<BR><BR>Recall that, the lower the load, the more scalable is the protocol. Therefore to improve scalability, increase the number of leaders, L. This way each leader get to deal with only a fraction of the requests. However, while increasing L, it is important to make sure this does not increase the conflict rate, c, because each conflict means additional work for the leaders.<BR><BR>For Multi-Paxos, L=1,&nbsp; and the leader is responsible for all requests. But the good news is c=0, because there is no conflicts when there is only one leader. Therefore for each request, the load on the leader is Q-1.<BR><BR>If we take N=9, the load for Multi-Paxos comes to 4. For EPaxos, the load comes to 4/3 *(1+c). For c=1 the load becomes 8/3, and for c=0, the load becomes 4/3.<BR><BR>For WPaxos, c=0, and L=3 and Q=3, so the load comes to 4/3. That means, if EPaxos has no conflict workload, it can has as high throughput as WPaxos, otherwise, WPaxos would have higher throughput. For WanKeeper, c=0, L=3, and Q=3, and a group does not do extra/side work for another, so the load comes to 1.<BR><BR>Note that the load for these protocols matches with the relative throughput scalability of the corresponding protocols.