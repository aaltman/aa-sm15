<B>: </B>The principles<BR>
<H1></H1>
<P style="TEXT-ALIGN: left"><B style="FONT-WEIGHT: bold">Principle 1.</B><SPAN>&nbsp;</SPAN>Write-ahead logging: Any change to an object is first recorded in the log, and the log must be written to the stable storage *before changes to the object are written to disk.*<BR><BR>Note that, this doesn't mean that WAL records need to be flushed immediately. This actually gives us a lot of flexibility, and allow us to flush WAL records in batches and asynchronously most of the time. The only exception is when the buffer pool is writing a dirty page back to disk whose WAL is not flushed already. That is the only case where we need to do the WAL flushing before we can write the page back to the disk.<BR><BR>This was the most important principle. I will not go through to the full protocol. I will mention the other two basic principles, and refer you to two good resources on this.<BR><BR><FONT class=extract><B style="FONT-WEIGHT: bold">Principle 2.</B><SPAN>&nbsp;</SPAN>Repeating history during Redo: On restart after a crash, ARIES retraces the actions of a database before the crash and brings the system back to the exact state that it was in before the crash. Then it undoes the transactions that were still active at crash time, because these transactions did not get to commit and need to be rollback.</FONT> &nbsp;<BR><BR><FONT class=extract><B style="FONT-WEIGHT: bold">Principle 3.</B><SPAN>&nbsp;</SPAN>Logging changes during Undo in ARIES: Changes made to the database while undoing transactions are logged to ensure such an action isn't repeated in the event of repeated restarts.<BR></FONT><BR><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243)" href="https://www.youtube.com/watch?v=4VGkRXVM5fk">Andy Pavlo's lecture explains ARIES really well.</A><SPAN>&nbsp;</SPAN>Watching this is time very well spent.&nbsp;<BR><BR><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243)" href="https://en.m.wikipedia.org/wiki/Algorithms_for_Recovery_and_Isolation_Exploiting_Semantics">This wikipedia page</A><SPAN>&nbsp;</SPAN>provides a succinct summary of ARIES.<BR><BR><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243)" href="https://www.shreya-shankar.com/aries/">This blog post from Shreya</A><SPAN>&nbsp;</SPAN>explains things in a very accessible way.<BR><BR><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243)" href="https://twitter.com/PatHelland/status/1642346268138799106">My dear friend Pat Helland mentions that</A><SPAN>&nbsp;</SPAN>at Tandem Franco Putzolu implemented&nbsp; ARIES style WAL-based performant transactional recovery in the 1980s (outlined in the crash recovery section of<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243)" href="https://www.vldb.org/conf/1984/P445.PDF">this VLDB 1984 paper</A>), but they had not published about it. The thread is a good read.<BR><BR>MySQL's implementation of ARIES principles is discussed<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243)" href="https://twitter.com/quangtung2912/status/1643776112034734080">in this thread</A>.