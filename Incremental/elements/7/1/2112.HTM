<b> : </b>Target level of availability</H3>
<P style="MARGIN: 0px 0px 20px">Consider Bigtable<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; COLOR: rgb(67,136,255)" href="https://sre.google/sre-book/bibliography#Cha06" data-type="xref">[Cha06]</A>, a massive-scale distributed storage system for structured data. Some consumer services serve data directly from Bigtable in the path of a user request. Such services need low latency and high reliability. Other teams use Bigtable as a repository for data that they use to perform offline analysis (e.g., MapReduce) on a regular basis. These teams tend to be more concerned about throughput than reliability. Risk tolerance for these two use cases is quite distinct.</P>
<P style="MARGIN: 0px 0px 20px">One approach to meeting the needs of both use cases is to engineer all infrastructure services to be ultra-reliable. Given the fact that these infrastructure services also tend to aggregate huge amounts of resources, such an approach is usually far too expensive in practice. To understand the different needs of the different types of users, you can look at the desired state of the request queue for each type of Bigtable user.</P></SECTION><SECTION id=types-of-failures-YmsMtxhKcW data-type="sect3">