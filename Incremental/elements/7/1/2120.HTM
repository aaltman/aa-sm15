Simple Retry Policies<BR>In its documentation notes, Microsoft [4, 6] describes the general principles of the retry policy algorithms, why it is needed, and 3 types of retry policies.<BR>The cancel retry policy.<BR>The main area of policy usage is for failures that are not transient or predictable to be unchancy to succeed if repeated. The application suggested dropping this query and proceeding to the next one. An example of an operation could be dissatisfaction with the query requirement, such as a lack of data, improper data, or absence of credentials.<BR>The simple retry policy.<BR>In case of facing the unlike error occurring during the request processing or delivery, the application can instantly retry the request since it is mainly impossible to get the error twice, and most probably, the operation will provide success.<BR>The retry after delay policy.<BR>When a high load appears, or temporary server unavailability happens, the application can retry after some period to wait for the load to decrease or for the server to recover. However, such busy failures and connectivity errors require some time, so the policy should adjust the proper amount of time depending on the case.<BR>For requests after delay, Microsoft proposes configuring delays and the limit number of retries. For example, the configuration of adding delay could be incremental (1,2,3,4) or exponential (1,2,4,8).<BR>While discussing the issues, they propose to make the configurations fit business logic. If it fails after a considerable number of requests, as suggested in the documentation, close the system, and report the failure immediately. Moreover, they proposed to check for Circuit Breaker patterns.