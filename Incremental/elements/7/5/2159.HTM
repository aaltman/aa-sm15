<b> : </b>Rethinking OLTP databases</H1>
<P>The architecture is based on<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243)" href="https://muratbuffalo.blogspot.com/2022/01/decoupled-transactions-low-tail-latency.html">a design Pat explored in a previous work</A>. The work is very technical, and I missed the nuance and contributions of it because I didn't read through the appendix about details.</P>
<DIV class=separator style="TEXT-ALIGN: center; CLEAR: both"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243); MARGIN-LEFT: 1em; MARGIN-RIGHT: 1em" href="https://blogger.googleusercontent.com/img/a/AVvXsEgBmeGMqsLQWCyBjr7ikas0mIkFdZ-6nVculH07Da5GPn2-TZ7B2XNXNvM_7Ux11JAAAWOR_nbOV98pZr72ILraXKqnhoIGV9n8Kr_rXX8F4Hge4Qj5Z5-GZowCyH6Fg25yoejZlQNgUTfQcDVGL-ELNaeE4eATUrT-3Go1hAPgzlnFsEBXkQE3ZBiRngo"><IMG style="MAX-WIDTH: 100%; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px" alt="" src="https://blogger.googleusercontent.com/img/a/AVvXsEgBmeGMqsLQWCyBjr7ikas0mIkFdZ-6nVculH07Da5GPn2-TZ7B2XNXNvM_7Ux11JAAAWOR_nbOV98pZr72ILraXKqnhoIGV9n8Kr_rXX8F4Hge4Qj5Z5-GZowCyH6Fg25yoejZlQNgUTfQcDVGL-ELNaeE4eATUrT-3Go1hAPgzlnFsEBXkQE3ZBiRngo=s16000" data-original-width="832" data-original-height="502"></A></DIV>
<P><B style="FONT-WEIGHT: bold">Owner servers</B>&nbsp;verify that concurrent transactions have not created any conflicting updates for each key row-locked or updated by the TX that optimistically hopes to commit. Owner servers partitioned by both key-range and time-range. Repartitioning happens dynamically to accommodate scale.&nbsp;</P>
<P><B style="FONT-WEIGHT: bold">Worker servers</B>&nbsp;are also horizontally scalable, and each have their own transaction log. As TX load increases, workers are added. Each TX happens at a single worker server. The worker servers accept connections from app servers, perform transactions &amp; their queries, commit transactions to their per-worker log, and periodically flush committed new record-versions to the<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243)" href="https://en.wikipedia.org/wiki/Log-structured_merge-tree">LSM (log structured merge tree)</A>.</P>
<P><B style="FONT-WEIGHT: bold">LSM servers</B>&nbsp;accept flushes from workers and incorporate them into the orderly past stored in the LSM. Record-versions are organized first by time, second by key. Each LSM layer contains record-versions for a band of time. With an LSM, the past scales without coordinating across disjoint transactions reading and updating!</P>
<DIV class=separator style="TEXT-ALIGN: center; CLEAR: both"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(33,150,243); MARGIN-LEFT: 1em; MARGIN-RIGHT: 1em" href="https://blogger.googleusercontent.com/img/a/AVvXsEhyhoxQSRPZsc1QWeYCex7Gm209SlW0kQMH53tGgHyt5YwnwXwOdDyPbOgYCk8dtiVP-pSxdK_xCI1tS4JCdDukqtg_-TvgwRCHoRFIcHWBs7mITLcdpkmqsx5fwMuOAU9xdweo7NHRS6V11VNBnLVlU_fH6iD1DBLVCSr6bk6oI9E23xoqwLe_FtNzAos"><IMG style="MAX-WIDTH: 100%; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px" alt="" src="https://blogger.googleusercontent.com/img/a/AVvXsEhyhoxQSRPZsc1QWeYCex7Gm209SlW0kQMH53tGgHyt5YwnwXwOdDyPbOgYCk8dtiVP-pSxdK_xCI1tS4JCdDukqtg_-TvgwRCHoRFIcHWBs7mITLcdpkmqsx5fwMuOAU9xdweo7NHRS6V11VNBnLVlU_fH6iD1DBLVCSr6bk6oI9E23xoqwLe_FtNzAos=w400-h170" width=400 height=170 data-original-width="832" data-original-height="354"></A></DIV>