In leader reads all read operations are forwarded to the network&#8217;s leader for processing. When the leader receives a read request it assigns it to the highest index that it has sent a commit request for. This guarantees that read operations always observe the latest complete write operations so long as a new leader has not been elected in the meantime. To ensure this doesn&#8217;t happen, the leader is granted a leader lease, guaranteeing at most one process be- lieves they are the leader at any given time. Unlike leader reads, in majority quorum reads, all processes can perform read operations. They do so by assigning read operations to the maximum index a simple majority of processes have received a prepare request for. </P>
<P>Flexible quorum reads are similar to majority quorum reads except reads are assigned to the maximum index of an arbitrary read quorum of pro- cesses. To enable this flexibility and guarantee the real-time ordering requirement of linearizability, the leader waits to receive acknowledgments from at least one process in every read quorum before committing a write. Similarly to leader reads, to not reduce fault-tolerance, processes that are mem- bers of a read quorum are granted read leases. Finally, in local reads, all processes assign read operations to an index based on their local perception of the latest assigned write index. Similar to flexible quorum reads, the leader in local reads must receive acknowledgments from all processes that hold a read lease before a write is committed.