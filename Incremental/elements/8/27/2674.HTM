<b> : </b><SPAN style="FONT-WEIGHT: 400"><A style="TEXT-DECORATION: none; COLOR: rgb(5,103,167); BACKGROUND-COLOR: transparent" name=replacement-policies></A><STRONG style="FONT-WEIGHT: bolder">3. Cache replacement policies</STRONG></SPAN></H2>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(74,74,74); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 20px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(251,251,251); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>The<STRONG style="FONT-WEIGHT: bolder"><SPAN>&nbsp;</SPAN>cache replacement policy</STRONG><SPAN>&nbsp;</SPAN>is an essential part of the success of a caching layer. The replacement policy (also called<SPAN>&nbsp;</SPAN><STRONG style="FONT-WEIGHT: bolder">eviction policy</STRONG>) decides what memory to free when the cache is full.</P>
<P style='FONT-SIZE: 16px; FONT-FAMILY: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(74,74,74); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 20px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(251,251,251); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>A good replacement policy will ensure that the cached data is as relevant as possible to the application, that is, it utilizes the principle of locality to optimize for cache hits. Replacement policies are fine-tuned to particular use cases, so there are many different algorithms and implementations to choose from. But they&#8217;re all based on a few fundamental policies: