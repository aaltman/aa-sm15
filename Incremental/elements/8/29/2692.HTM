<b> : </b><SPAN id=Cache_Client class=ez-toc-section style="BOX-SIZING: border-box" ez-toc-data-id="#Cache_Client"></SPAN>Cache Client<SPAN class=ez-toc-section-end style="BOX-SIZING: border-box"></SPAN></H3><FIGURE class="wp-block-image size-large" style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(33,37,41); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><IMG class=wp-image-165 style="BOX-SIZING: border-box; MAX-WIDTH: 100%; HEIGHT: auto; VERTICAL-ALIGN: bottom" alt="" src="https://serhatgiydiren.com/wp-content/uploads/2022/10/image-3-1024x447.png" width=1024 height=447 sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://serhatgiydiren.com/wp-content/uploads/2022/10/image-3-1024x447.png 1024w, https://serhatgiydiren.com/wp-content/uploads/2022/10/image-3-300x131.png 300w, https://serhatgiydiren.com/wp-content/uploads/2022/10/image-3-768x336.png 768w, https://serhatgiydiren.com/wp-content/uploads/2022/10/image-3.png 1206w" decoding="async" loading="lazy"></FIGURE>
<UL class=wp-block-list style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(33,37,41); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>
<LI style="BOX-SIZING: border-box">Consistent hashing is much better than MOD hashing, as significantly smaller fraction of keys is re-hashed when new host is added or host is removed from the cache cluster. Now we know how cache cluster host is selected for both put and get, but who is actually doing this selection? On the service side, who is responsible for running all these hash calculations and routing requests to the selected cache host?</LI>
<LI style="BOX-SIZING: border-box">Cache client is that component. It&#8217;s a small and lightweight library, that is integrated with the service code and is responsible for the cache host selection.</LI>
<LI style="BOX-SIZING: border-box">Cache client knows about all cache servers.</LI>
<LI style="BOX-SIZING: border-box">And all clients should have the same list. Otherwise, different clients will have their own view of the consistent hashing circle and the same key may be routed to different cache hosts.</LI>
<LI style="BOX-SIZING: border-box">Client stores list of cache hosts in sorted order (for a fast host lookup) and binary search can be used to find a cache server that owns the key.</LI>
<LI style="BOX-SIZING: border-box">Cache client talks to cache hosts using TCP or UDP protocol.</LI>
<LI style="BOX-SIZING: border-box">And if cache host is unavailable, client proceeds as though it was a cache miss.</LI></UL>