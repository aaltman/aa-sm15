<b> : </b><SPAN class=section-number style="BOX-SIZING: border-box">4.2.<SPAN>&nbsp;</SPAN></SPAN>Hardware Multithreading<A title="Permalink to this headline" class=headerlink style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: ; FONT: 14px/1 FontAwesome; MARGIN-LEFT: 0.5em; DISPLAY: inline-block; text-rendering: auto; -webkit-font-smoothing: antialiased; opacity: 0" href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#hardware-multithreading">&#61633;</A></H2>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">The execution context (program counters, registers, and so on) for each warp processed by a multiprocessor is maintained on-chip during the entire lifetime of the warp. Therefore, switching from one execution context to another has no cost, and at every instruction issue time, a warp scheduler selects a warp that has threads ready to execute its next instruction (the<SPAN>&nbsp;</SPAN><A class="reference external" style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: " href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#simt-architecture-notes"><FONT color=#0066cc size=3>active threads</FONT></A><SPAN>&nbsp;</SPAN>of the warp) and issues the instruction to those threads.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">In particular, each multiprocessor has a set of 32-bit registers that are partitioned among the warps, and a<SPAN>&nbsp;</SPAN><EM style="BOX-SIZING: border-box">parallel data cache</EM><SPAN>&nbsp;</SPAN>or<SPAN>&nbsp;</SPAN><EM style="BOX-SIZING: border-box">shared memory</EM><SPAN>&nbsp;</SPAN>that is partitioned among the thread blocks.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">The number of blocks and warps that can reside and be processed together on the multiprocessor for a given kernel depends on the amount of registers and shared memory used by the kernel and the amount of registers and shared memory available on the multiprocessor. There are also a maximum number of resident blocks and a maximum number of resident warps per multiprocessor. These limits as well the amount of registers and shared memory available on the multiprocessor are a function of the compute capability of the device and are given in<SPAN>&nbsp;</SPAN><A class="reference external" style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: " href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#compute-capabilities"><FONT color=#0066cc size=3>Compute Capabilities</FONT></A>. If there are not enough registers or shared memory available per multiprocessor to process at least one block, the kernel will fail to launch.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">The total number of warps in a block is as follows:</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><SPAN class="math notranslate nohighlight" style="BOX-SIZING: border-box; TEXT-ALIGN: center"><MJX-CONTAINER tabIndex=0 class="MathJax CtxtMenu_Attached_0" style="BOX-SIZING: border-box; FONT-SIZE: 18px; POSITION: relative; LINE-HEIGHT: 0" ctxtmenu_counter="0" jax="CHTML"><MJX-MATH aria-hidden=true class=MJX-TEX style="BOX-SIZING: border-box; FONT-SIZE: 18px; FONT-FAMILY: MJXZERO, MJXTEX; WHITE-SPACE: nowrap; WORD-SPACING: normal; BORDER-COLLAPSE: collapse; FONT-WEIGHT: normal; PADDING-BOTTOM: 1px; DIRECTION: ltr; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 1px; PADDING-LEFT: 0px; DISPLAY: inline-block; LETTER-SPACING: normal; LINE-HEIGHT: 0; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; font-size-adjust: none; overflow-wrap: normal"><MJX-MTEXT class=mjx-n style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-C class=mjx-c63 style="BOX-SIZING: border-box; DISPLAY: inline-block"></MJX-C><MJX-C class=mjx-c65 style="BOX-SIZING: border-box; DISPLAY: inline-block"></MJX-C><MJX-C class=mjx-c69 style="BOX-SIZING: border-box; DISPLAY: inline-block"></MJX-C><MJX-C class=mjx-c6C style="BOX-SIZING: border-box; DISPLAY: inline-block"></MJX-C></MJX-MTEXT><MJX-MROW style="BOX-SIZING: border-box; TEXT-ALIGN: left; MARGIN-LEFT: 0.16em; DISPLAY: inline-block" space="2"><MJX-MO class=mjx-lop style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-C class="mjx-c28 TEX-S2" style="BOX-SIZING: border-box; FONT-FAMILY: MJXZERO, MJXTEX-S2; DISPLAY: inline-block"></MJX-C></MJX-MO><MJX-MFRAC style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-FRAC style="BOX-SIZING: border-box; VERTICAL-ALIGN: 0.17em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.22em; DISPLAY: inline-block; PADDING-RIGHT: 0.22em"><MJX-NUM style="BOX-SIZING: border-box; TEXT-ALIGN: center; DISPLAY: block"><MJX-NSTRUT style="BOX-SIZING: border-box; HEIGHT: 0.05em; WIDTH: 0px; VERTICAL-ALIGN: -0.05em; DISPLAY: inline-block"></MJX-NSTRUT><MJX-MI class=mjx-i style="BOX-SIZING: border-box; FONT-SIZE: 13px; TEXT-ALIGN: left; DISPLAY: inline-block" size="s"><MJX-C class="mjx-c1D447 TEX-I" style="BOX-SIZING: border-box; FONT-FAMILY: MJXZERO, MJXTEX-I; DISPLAY: inline-block"></MJX-C></MJX-MI></MJX-NUM><MJX-DBOX style="BOX-SIZING: border-box; FONT-SIZE: 0px; DISPLAY: block"><MJX-DTABLE style="BOX-SIZING: border-box; WIDTH: 28px; DISPLAY: inline-table"><MJX-LINE style="BOX-SIZING: border-box; FONT-SIZE: 18px; OVERFLOW: hidden; BORDER-TOP: 0.06em solid; HEIGHT: 0.06em; MIN-HEIGHT: 1px; MARGIN: 0.06em -0.1em; DISPLAY: block"></MJX-LINE><MJX-ROW style="BOX-SIZING: border-box; FONT-SIZE: 18px; DISPLAY: table-row"><MJX-DEN style="BOX-SIZING: border-box; TEXT-ALIGN: center; DISPLAY: block"><MJX-DSTRUT style="BOX-SIZING: border-box; HEIGHT: 0.5em; WIDTH: 0px; DISPLAY: inline-block"></MJX-DSTRUT><MJX-MSUB style="BOX-SIZING: border-box; FONT-SIZE: 13px; TEXT-ALIGN: left; DISPLAY: inline-block" size="s"><MJX-MI class=mjx-i style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-C class="mjx-c1D44A TEX-I" style="BOX-SIZING: border-box; FONT-FAMILY: MJXZERO, MJXTEX-I; DISPLAY: inline-block"></MJX-C></MJX-MI><MJX-SCRIPT style="BOX-SIZING: border-box; VERTICAL-ALIGN: -0.15em; MARGIN-LEFT: -0.1em"><MJX-TEXATOM style="BOX-SIZING: border-box; FONT-SIZE: 9px; TEXT-ALIGN: left; DISPLAY: inline-block" size="s" texclass="ORD"><MJX-MI class=mjx-i style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-C class="mjx-c1D460 TEX-I" style="BOX-SIZING: border-box; FONT-FAMILY: MJXZERO, MJXTEX-I; DISPLAY: inline-block"></MJX-C></MJX-MI><MJX-MI class=mjx-i style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-C class="mjx-c1D456 TEX-I" style="BOX-SIZING: border-box; FONT-FAMILY: MJXZERO, MJXTEX-I; DISPLAY: inline-block"></MJX-C></MJX-MI><MJX-MI class=mjx-i style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-C class="mjx-c1D467 TEX-I" style="BOX-SIZING: border-box; FONT-FAMILY: MJXZERO, MJXTEX-I; DISPLAY: inline-block"></MJX-C></MJX-MI><MJX-MI class=mjx-i style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-C class="mjx-c1D452 TEX-I" style="BOX-SIZING: border-box; FONT-FAMILY: MJXZERO, MJXTEX-I; DISPLAY: inline-block"></MJX-C></MJX-MI></MJX-TEXATOM></MJX-SCRIPT></MJX-MSUB></MJX-DEN></MJX-ROW></MJX-DTABLE></MJX-DBOX></MJX-FRAC></MJX-MFRAC><MJX-MO class=mjx-n style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-C class=mjx-c2C style="BOX-SIZING: border-box; DISPLAY: inline-block"></MJX-C></MJX-MO><MJX-MN class=mjx-n style="BOX-SIZING: border-box; TEXT-ALIGN: left; MARGIN-LEFT: 0.16em; DISPLAY: inline-block" space="2"><MJX-C class=mjx-c31 style="BOX-SIZING: border-box; DISPLAY: inline-block"></MJX-C></MJX-MN><MJX-MO class=mjx-lop style="BOX-SIZING: border-box; TEXT-ALIGN: left; DISPLAY: inline-block"><MJX-C class="mjx-c29 TEX-S2" style="BOX-SIZING: border-box; FONT-FAMILY: MJXZERO, MJXTEX-S2; DISPLAY: inline-block"></MJX-C></MJX-MO></MJX-MROW></MJX-MATH><MJX-ASSISTIVE-MML style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); BORDER-RIGHT: 0px; WIDTH: auto !important; BORDER-BOTTOM: 0px; POSITION: absolute !important; PADDING-BOTTOM: 0px !important; PADDING-TOP: 1px !important; PADDING-LEFT: 0px !important; LEFT: 0px; BORDER-LEFT: 0px; DISPLAY: block !important; TOP: 0px; PADDING-RIGHT: 0px !important; user-select: none" display="inline" unselectable="on"><math xmlns="http://www.w3.org/1998/Math/MathML"><mtext>ceil</mtext><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">(</mo><mfrac><mi>T</mi><msub><mi>W</mi><mrow data-mjx-texclass="ORD"><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow></msub></mfrac><mo>,</mo><mn>1</mn><mo data-mjx-texclass="CLOSE">)</mo></mrow></math></MJX-ASSISTIVE-MML></MJX-CONTAINER></SPAN></P>
<UL class=simple style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 24px; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px">
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px"><EM style="BOX-SIZING: border-box">T</EM><SPAN>&nbsp;</SPAN>is the number of threads per block,</P></LI>
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px"><EM style="BOX-SIZING: border-box">Wsize</EM><SPAN>&nbsp;</SPAN>is the warp size, which is equal to 32,</P></LI>
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px">ceil(x, y) is equal to x rounded up to the nearest multiple of y.</P></LI></UL>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">The total number of registers and total amount of shared memory allocated for a block are documented in the CUDA Occupancy Calculator provided in the CUDA Toolkit.</P>
<DL class="footnote brackets" style="LIST-STYLE-TYPE: none; BOX-SIZING: border-box; COLOR: grey; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: none; MARGIN: 0px 0px 24px; PADDING-RIGHT: 0px; grid-template-columns: max-content auto">
<DT id=fn2 class=label style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; MARGIN-TOP: 0px; WORD-BREAK: break-all; FONT-WEIGHT: 400; MARGIN-RIGHT: 0px"><SPAN class=brackets style="BOX-SIZING: border-box"><A class=fn-backref style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: " href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#id21">2</A></SPAN></DT>
<DD style="BOX-SIZING: border-box; MARGIN: 0px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 12px 0px">The term<SPAN>&nbsp;</SPAN><EM style="BOX-SIZING: border-box">warp-synchronous</EM><SPAN>&nbsp;</SPAN>refers to code that implicitly assumes threads in the same warp are synchronized at every instruction.</P></DD></DL></SECTION>