<b> : </b><SPAN class=section-number style="BOX-SIZING: border-box">8.6.4.1.<SPAN>&nbsp;</SPAN></SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 13px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">invoke_one</SPAN></CODE><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 13px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">invoke_one_broadcast</SPAN></CODE><A title="Permalink to this headline" class=headerlink style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: ; FONT: 14px/1 FontAwesome; MARGIN-LEFT: 0.5em; DISPLAY: inline-block; text-rendering: auto; -webkit-font-smoothing: antialiased; opacity: 0" href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#invoke-one-and-invoke-one-broadcast">&#61633;</A></H4>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell402 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">Group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">Fn</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=p style="BOX-SIZING: border-box">...</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Args</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">void</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">invoke_one</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Group</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Fn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">fn</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Args</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=p style="BOX-SIZING: border-box">...</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">args</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">Group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">Fn</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=p style="BOX-SIZING: border-box">...</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Args</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">invoke_one_broadcast</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Group</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Fn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">fn</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Args</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=p style="BOX-SIZING: border-box">...</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">args</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">-&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">decltype</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">fn</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">args</SPAN><SPAN class=p style="BOX-SIZING: border-box">...));</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">invoke_one</SPAN></CODE><SPAN>&nbsp;</SPAN>selects a single arbitrary thread from the calling<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">group</SPAN></CODE><SPAN>&nbsp;</SPAN>and uses that thread to call the supplied invocable<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">fn</SPAN></CODE><SPAN>&nbsp;</SPAN>with the supplied arguments<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">args</SPAN></CODE>. In case of<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">invoke_one_broadcast</SPAN></CODE><SPAN>&nbsp;</SPAN>the result of the call is also distributed to all threads in the group and returned from this collective.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">Calling group can be synchronized with the selected thread before and/or after it calls the supplied invocable. It means that communication within the calling group is not allowed inside the supplied invocable body, otherwise forward progress is not guaranteed. Communication with threads outside of the calling group is allowed in the body of the supplied invocable. Thread selection mechanism is<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">not</STRONG><SPAN>&nbsp;</SPAN>guranteed to be deterministic.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">On devices with Compute Capability 9.0 or higher hardware acceleration might be used to select the thread when called with<SPAN>&nbsp;</SPAN><A class="reference external" style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: " href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#explicit-groups"><FONT color=#0066cc size=3>explicit group types</FONT></A>.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">group</SPAN></CODE>: All group types are valid for<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">invoke_one</SPAN></CODE>,<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">coalesced_group</SPAN></CODE><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">thread_block_tile</SPAN></CODE><SPAN>&nbsp;</SPAN>are valid for<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">invoke_one_broadcast</SPAN></CODE>.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">fn</SPAN></CODE>: Function or object that can be invoked using<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">operator()</SPAN></CODE>.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">args</SPAN></CODE>: Parameter pack of types matching types of parameters of the supplied invocable<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">fn</SPAN></CODE>.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">In case of<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">invoke_one_broadcast</SPAN></CODE><SPAN>&nbsp;</SPAN>the return type of the supplied invocable<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">fn</SPAN></CODE><SPAN>&nbsp;</SPAN>must satisfy the below requirements:</P>
<UL class=simple style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 24px; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px">
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px">Qualifies as trivially copyable i.e.<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">is_trivially_copyable&lt;T&gt;::value</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">==</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">true</SPAN></CODE></P></LI>
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">sizeof(T)</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">&lt;=</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">32</SPAN></CODE><SPAN>&nbsp;</SPAN>for<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">coalesced_group</SPAN></CODE><SPAN>&nbsp;</SPAN>and tiles of size lower or equal 32,<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">sizeof(T)</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">&lt;=</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">8</SPAN></CODE><SPAN>&nbsp;</SPAN>for larger tiles</P></LI></UL>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">Codegen Requirements:</STRONG><SPAN>&nbsp;</SPAN>Compute Capability 5.0 minimum, Compute Capability 9.0 for hardware acceleration, C++11.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">Aggregated atomic example from</STRONG><SPAN>&nbsp;</SPAN><A class="reference external" style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: " href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#discovery-pattern"><FONT color=#0066cc size=3>Discovery pattern section</FONT></A><SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">re-written to use invoke_one_broadcast:</STRONG></P>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell403 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)">#include</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cpf style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">&lt;cooperative_groups.h&gt;</SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)"></SPAN>
<SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)">#include</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cpf style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">&lt;cuda/atomic&gt;</SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)"></SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">namespace</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nn style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">cg</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nn style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">cooperative_groups</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=n style="BOX-SIZING: border-box">cuda</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_scope</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Scope</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=n style="BOX-SIZING: border-box">__device__</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">unsigned</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">atomicAddOneRelaxed</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">cuda</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">atomic</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">unsigned</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Scope</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">atomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">coalesced_threads</SPAN><SPAN class=p style="BOX-SIZING: border-box">();</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">prev</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">invoke_one_broadcast</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">[</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=p style="BOX-SIZING: border-box">]</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">()</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">        </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">return</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">atomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">fetch_add</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">num_threads</SPAN><SPAN class=p style="BOX-SIZING: border-box">(),</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cuda</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">memory_order_relaxed</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=p style="BOX-SIZING: border-box">});</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">return</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">prev</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_rank</SPAN><SPAN class=p style="BOX-SIZING: border-box">();</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV></SECTION></SECTION></SECTION><SECTION id=grid-synchronization style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: NVIDIA, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(26,26,26); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; DISPLAY: block; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">