<b> : </b><SPAN class=section-number style="BOX-SIZING: border-box">8.6.3.3.<SPAN>&nbsp;</SPAN></SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 13px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">inclusive_scan</SPAN></CODE><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 13px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">exclusive_scan</SPAN></CODE><A title="Permalink to this headline" class=headerlink style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: ; FONT: 14px/1 FontAwesome; MARGIN-LEFT: 0.5em; DISPLAY: inline-block; text-rendering: auto; -webkit-font-smoothing: antialiased; opacity: 0" href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#inclusive-scan-and-exclusive-scan">&#61633;</A></H4>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell396 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyGroup</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyVal</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">inclusive_scan</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyGroup</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">op</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">-&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">decltype</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">op</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">));</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyGroup</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">inclusive_scan</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyGroup</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyGroup</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyVal</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">exclusive_scan</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyGroup</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">op</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">-&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">decltype</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">op</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">));</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyGroup</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">exclusive_scan</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyGroup</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">inclusive_scan</SPAN></CODE><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">exclusive_scan</SPAN></CODE><SPAN>&nbsp;</SPAN>performs a scan operation on the data provided by each thread named in the group passed in. Result for each thread is a reduction of data from threads with lower<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">thread_rank</SPAN></CODE><SPAN>&nbsp;</SPAN>than that thread in case of<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">exclusive_scan</SPAN></CODE>.<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">inclusive_scan</SPAN></CODE><SPAN>&nbsp;</SPAN>result also includes the calling thread data in the reduction.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">group</SPAN></CODE>: Valid group types are<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">coalesced_group</SPAN></CODE><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">thread_block_tile</SPAN></CODE>.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">val</SPAN></CODE>: Any type that satisfies the below requirements:</P>
<UL class=simple style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 24px; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px">
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px">Qualifies as trivially copyable i.e.<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">is_trivially_copyable&lt;TyArg&gt;::value</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">==</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">true</SPAN></CODE></P></LI>
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">sizeof(T)</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">&lt;=</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">32</SPAN></CODE><SPAN>&nbsp;</SPAN>for<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">coalesced_group</SPAN></CODE><SPAN>&nbsp;</SPAN>and tiles of size lower or equal 32,<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">sizeof(T)</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">&lt;=</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">8</SPAN></CODE><SPAN>&nbsp;</SPAN>for larger tiles</P></LI>
<LI style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-LEFT: 24px">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px 5px 0px 0px">Has suitable arithmetic or comparative operators for the given function object.</P></LI></UL>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">Note:</STRONG><SPAN>&nbsp;</SPAN>Different threads in the group can pass different values for this argument.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">op</SPAN></CODE>: Function objects defined for convenience are<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">plus(),</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">less(),</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">greater(),</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">bit_and(),</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">bit_xor(),</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="BOX-SIZING: border-box">bit_or()</SPAN></CODE><SPAN>&nbsp;</SPAN>described in<SPAN>&nbsp;</SPAN><A class="reference external" style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: " href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#reduce-operators"><FONT color=#0066cc size=3>Reduce Operators</FONT></A>. These must be constructed, hence the TyVal template argument is required, i.e.<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">plus&lt;int&gt;()</SPAN></CODE>.<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">inclusive_scan</SPAN></CODE><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">exclusive_scan</SPAN></CODE><SPAN>&nbsp;</SPAN>also supports lambdas and other function objects that can be invoked using<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">operator()</SPAN></CODE>. Overloads without this argument use<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">cg::plus&lt;TyVal&gt;()</SPAN></CODE>.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">Scan update</STRONG></P>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell397 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyGroup</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyAtomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyVal</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">inclusive_scan_update</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyGroup</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyAtomic</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">atomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">op</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">-&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">decltype</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">op</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">));</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyGroup</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyAtomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">inclusive_scan_update</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyGroup</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyAtomic</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">atomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyGroup</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyAtomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyVal</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">exclusive_scan_update</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyGroup</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyAtomic</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">atomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">op</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">-&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">decltype</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">op</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">));</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyGroup</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyAtomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">exclusive_scan_update</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">const</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyGroup</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyAtomic</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">atomic</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyVal</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">*_scan_update</SPAN></CODE><SPAN>&nbsp;</SPAN>collectives take an additional argument<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">atomic</SPAN></CODE><SPAN>&nbsp;</SPAN>that can be either of<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">cuda::atomic</SPAN></CODE><SPAN>&nbsp;</SPAN>or<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">cuda::atomic_ref</SPAN></CODE><SPAN>&nbsp;</SPAN>available in<SPAN>&nbsp;</SPAN><A class="reference external" style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: none; COLOR: " href="https://nvidia.github.io/libcudacxx/extended_api/synchronization_primitives.html"><FONT color=#0066cc size=3>CUDA C++ Standard Library</FONT></A>. These variants of the API are available only on platforms and devices, where these types are supported by the CUDA C++ Standard Library. These variants will perform an update to the<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">atomic</SPAN></CODE><SPAN>&nbsp;</SPAN>according to<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">op</SPAN></CODE><SPAN>&nbsp;</SPAN>with value of the sum of input values of all threads in the group. Previous value of the<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">atomic</SPAN></CODE><SPAN>&nbsp;</SPAN>will be combined with the result of scan by each thread and returned. Type held by the<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">atomic</SPAN></CODE><SPAN>&nbsp;</SPAN>must match the type of<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">TyVal</SPAN></CODE>. Scope of the atomic must include all the threads in the group and if multiple groups are using the same atomic concurrently, scope must include all threads in all groups using it. Atomic update is performed with relaxed memory ordering.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px">Following pseudocode illustrates how the update variant of scan works:</P>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell398 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">/*</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic"> inclusive_scan_update behaves as the following block,</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic"> except both reduce and inclusive_scan is calculated simultaneously.</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">auto total = reduce(group, val, op);</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">TyVal old;</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">if (group.thread_rank() == selected_thread) {</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    atomicaly {</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">        old = atomic.load();</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">        atomic.store(op(old, total));</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    }</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">}</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">old = group.shfl(old, selected_thread);</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">return op(inclusive_scan(group, val, op), old);</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">*/</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">Codegen Requirements:</STRONG><SPAN>&nbsp;</SPAN>Compute Capability 5.0 minimum, C++11.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><CODE class="docutils literal notranslate" style="BOX-SIZING: border-box; FONT-SIZE: 12px; MAX-WIDTH: 100%; BORDER-TOP: rgb(225,228,229) 1px solid; FONT-FAMILY: var(--nv-font-face-mono); BORDER-RIGHT: rgb(225,228,229) 1px solid; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; COLOR: rgb(231,76,60); PADDING-BOTTOM: 2px; PADDING-TOP: 2px; PADDING-LEFT: 5px; BORDER-LEFT: rgb(225,228,229) 1px solid; PADDING-RIGHT: 5px"><SPAN class=pre style="BOX-SIZING: border-box">cooperative_groups/scan.h</SPAN></CODE><SPAN>&nbsp;</SPAN>header needs to be included.</P>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">Example:</STRONG></P>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell399 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)">#include</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cpf style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">&lt;stdio.h&gt;</SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)"></SPAN>
<SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)">#include</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cpf style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">&lt;cooperative_groups.h&gt;</SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)"></SPAN>
<SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)">#include</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cpf style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">&lt;cooperative_groups/scan.h&gt;</SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)"></SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">namespace</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nn style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">cg</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nn style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">cooperative_groups</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=n style="BOX-SIZING: border-box">__global__</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">void</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">kernel</SPAN><SPAN class=p style="BOX-SIZING: border-box">()</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_block</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">this_thread_block</SPAN><SPAN class=p style="BOX-SIZING: border-box">();</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">tile</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">tiled_partition</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">8</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_block</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">unsigned</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">inclusive_scan</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">tile</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">tile</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_rank</SPAN><SPAN class=p style="BOX-SIZING: border-box">());</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n style="BOX-SIZING: border-box">printf</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=s style="BOX-SIZING: border-box; COLOR: rgb(186,33,33)">"%u: %u</SPAN><SPAN class=se style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(170,93,31)">\n</SPAN><SPAN class=s style="BOX-SIZING: border-box; COLOR: rgb(186,33,33)">"</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">tile</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_rank</SPAN><SPAN class=p style="BOX-SIZING: border-box">(),</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">val</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">/*  prints for each group:</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    0: 0</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    1: 1</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    2: 3</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    3: 6</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    4: 10</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    5: 15</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    6: 21</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">    7: 28</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">*/</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">Example of stream compaction using exclusive_scan:</STRONG></P>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell400 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)">#include</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cpf style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">&lt;cooperative_groups.h&gt;</SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)"></SPAN>
<SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)">#include</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cpf style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">&lt;cooperative_groups/scan.h&gt;</SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)"></SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">namespace</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nn style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">cg</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nn style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">cooperative_groups</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// put data from input into output only if it passes test_fn predicate</SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">Group</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">Data</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nc style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=n style="BOX-SIZING: border-box">__device__</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">stream_compaction</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">Group</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;</SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Data</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">*</SPAN><SPAN class=n style="BOX-SIZING: border-box">input</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">count</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">TyFn</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">test_fn</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">Data</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">*</SPAN><SPAN class=n style="BOX-SIZING: border-box">output</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">per_thread</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">count</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">/</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">num_threads</SPAN><SPAN class=p style="BOX-SIZING: border-box">();</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_start</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">min</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_rank</SPAN><SPAN class=p style="BOX-SIZING: border-box">()</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">*</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">per_thread</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">count</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">my_count</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">min</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">per_thread</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">count</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">-</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_start</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// get all passing items from my part of the input</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">//  into a contagious part of the array and count them.</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_start</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">while</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">my_count</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_start</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">        </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">if</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">test_fn</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">input</SPAN><SPAN class=p style="BOX-SIZING: border-box">[</SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">]))</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">            </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">++</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">        </SPAN><SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">        </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">else</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">            </SPAN><SPAN class=n style="BOX-SIZING: border-box">my_count</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">--</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">            </SPAN><SPAN class=n style="BOX-SIZING: border-box">input</SPAN><SPAN class=p style="BOX-SIZING: border-box">[</SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">]</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">input</SPAN><SPAN class=p style="BOX-SIZING: border-box">[</SPAN><SPAN class=n style="BOX-SIZING: border-box">my_count</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_start</SPAN><SPAN class=p style="BOX-SIZING: border-box">];</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">        </SPAN><SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// scan over counts from each thread to calculate my starting</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">//  index in the output</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">my_idx</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">exclusive_scan</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">my_count</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">for</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">my_count</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">++</SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">        </SPAN><SPAN class=n style="BOX-SIZING: border-box">output</SPAN><SPAN class=p style="BOX-SIZING: border-box">[</SPAN><SPAN class=n style="BOX-SIZING: border-box">my_idx</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">]</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">input</SPAN><SPAN class=p style="BOX-SIZING: border-box">[</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_start</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">];</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// return the total number of items in the output</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">return</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">shfl</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">my_idx</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">my_count</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">g</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">num_threads</SPAN><SPAN class=p style="BOX-SIZING: border-box">()</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">-</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">1</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV>
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 15px 5px 15px 0px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: 700">Example of dynamic buffer space allocation using exclusive_scan_update:</STRONG></P>
<DIV class="highlight-c++ notranslate" style="BOX-SIZING: border-box; BORDER-TOP: rgb(225,228,229) 1px solid; BORDER-RIGHT: rgb(225,228,229) 1px solid; OVERFLOW-X: auto; BORDER-BOTTOM: rgb(225,228,229) 1px solid; BORDER-LEFT: rgb(225,228,229) 1px solid; MARGIN: 1px 0px 24px">
<DIV class=highlight style="BOX-SIZING: border-box; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: rgb(248,248,248); OVERFLOW-X: auto; BORDER-BOTTOM: medium none; POSITION: relative; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px"><PRE id=codecell401 style="BOX-SIZING: border-box; FONT-SIZE: 12px; OVERFLOW: auto; FONT-FAMILY: var(--nv-font-face-mono); WHITE-SPACE: pre; PADDING-BOTTOM: 12px; PADDING-TOP: 12px; PADDING-LEFT: 12px; MARGIN: 0px; DISPLAY: block; LINE-HEIGHT: 1.4; PADDING-RIGHT: 12px"><SPAN style="BOX-SIZING: border-box"></SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)">#include</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cpf style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">&lt;cooperative_groups.h&gt;</SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)"></SPAN>
<SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)">#include</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cpf style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">&lt;cooperative_groups/scan.h&gt;</SPAN><SPAN class=cp style="BOX-SIZING: border-box; COLOR: rgb(156,101,0)"></SPAN>
<SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">namespace</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nn style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">cg</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nn style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">cooperative_groups</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// Buffer partitioning is static to make the example easier to follow,</SPAN>
<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// but any arbitrary dynamic allocation scheme can be implemented by replacing this function.</SPAN>
<SPAN class=n style="BOX-SIZING: border-box">__device__</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">calculate_buffer_space_needed</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_block_tile</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">32</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;&amp;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">tile</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">return</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">tile</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_rank</SPAN><SPAN class=p style="BOX-SIZING: border-box">()</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">%</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">2</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">1</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=n style="BOX-SIZING: border-box">__device__</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">my_thread_data</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">return</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=n style="BOX-SIZING: border-box">__global__</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">void</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">kernel</SPAN><SPAN class=p style="BOX-SIZING: border-box">()</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n style="BOX-SIZING: border-box">__shared__</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">extern</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">buffer</SPAN><SPAN class=p style="BOX-SIZING: border-box">[];</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n style="BOX-SIZING: border-box">__shared__</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cuda</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">atomic</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cuda</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">thread_scope_block</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">buffer_used</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">block</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">this_thread_block</SPAN><SPAN class=p style="BOX-SIZING: border-box">();</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">auto</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">tile</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">tiled_partition</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">32</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">block</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n style="BOX-SIZING: border-box">buffer_used</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n style="BOX-SIZING: border-box">block</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">sync</SPAN><SPAN class=p style="BOX-SIZING: border-box">();</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// each thread calculates buffer size it needs</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">buf_needed</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">calculate_buffer_space_needed</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">tile</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// scan over the needs of each thread, result for each thread is an offset</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// of that thread&#8217;s part of the buffer. buffer_used is atomically updated with</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// the sum of all thread's inputs, to correctly offset other tile&#8217;s allocations</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">buf_offset</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">        </SPAN><SPAN class=n style="BOX-SIZING: border-box">cg</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box">exclusive_scan_update</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">tile</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">buffer_used</SPAN><SPAN class=p style="BOX-SIZING: border-box">,</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">buf_needed</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// each thread fills its own part of the buffer with thread specific data</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">for</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">0</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">buf_needed</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">;</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">++</SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">)</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p style="BOX-SIZING: border-box">{</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">        </SPAN><SPAN class=n style="BOX-SIZING: border-box">buffer</SPAN><SPAN class=p style="BOX-SIZING: border-box">[</SPAN><SPAN class=n style="BOX-SIZING: border-box">buf_offset</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">]</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n style="BOX-SIZING: border-box">my_thread_data</SPAN><SPAN class=p style="BOX-SIZING: border-box">(</SPAN><SPAN class=n style="BOX-SIZING: border-box">i</SPAN><SPAN class=p style="BOX-SIZING: border-box">);</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>

<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n style="BOX-SIZING: border-box">block</SPAN><SPAN class=p style="BOX-SIZING: border-box">.</SPAN><SPAN class=n style="BOX-SIZING: border-box">sync</SPAN><SPAN class=p style="BOX-SIZING: border-box">();</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// buffer_used now holds total amount of memory allocated</SPAN>
<SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(61,123,123); FONT-STYLE: italic">// buffer is {0, 0, 1, 0, 0, 1 ...};</SPAN>
<SPAN class=p style="BOX-SIZING: border-box">}</SPAN><SPAN class=w style="BOX-SIZING: border-box; COLOR: rgb(187,187,187)"></SPAN>
</PRE></DIV></DIV></SECTION></SECTION><SECTION id=execution-control style="BOX-SIZING: border-box; DISPLAY: block">