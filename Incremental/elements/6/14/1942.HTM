<b> : </b>Software Engineering Versus Programming</H1>
<P style='FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 300; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 10px 0px 0px; LINE-HEIGHT: 20px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit'>When presented<A id=id-O5hxuxUrH4 contentEditable=false style='FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 300; COLOR: rgb(142,0,18); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; overflow-wrap: break-word' data-type="indexterm" data-primary="software engineering" data-secondary="programming versus">&nbsp;</A><SPAN>&nbsp;</SPAN>with<SPAN>&nbsp;</SPAN><A id=id-6zhKUqUbHm contentEditable=false style='FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 300; COLOR: rgb(142,0,18); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; overflow-wrap: break-word' data-type="indexterm" data-primary="programming" data-secondary="software engineering versus">&nbsp;</A>our distinction between software engineering and programming, you might ask whether there is an inherent value judgement in play. Is programming somehow worse than software engineering? Is a project that is expected to last a decade with a team of hundreds inherently more valuable than one that is useful for only a month and built by two people?</P>
<P style='FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 300; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 10px 0px 0px; LINE-HEIGHT: 20px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit'>Of course not. Our point is not that software engineering is superior, merely that these represent two different problem domains with distinct constraints, values, and best practices. Rather, the value in pointing out this difference comes from recognizing that some tools are great in one domain but not in the other. You probably don&#8217;t need to rely on integration tests (see<SPAN>&nbsp;</SPAN><A style='FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 300; COLOR: rgb(142,0,18); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; overflow-wrap: break-word' href="https://abseil.io/resources/swe-book/html/ch14.html#larger_testing" data-type="xref">Larger Testing</A>) and Continuous Deployment (CD) practices (see<SPAN>&nbsp;</SPAN><A style='FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 300; COLOR: rgb(142,0,18); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; overflow-wrap: break-word' href="https://abseil.io/resources/swe-book/html/ch24.html#continuous_delivery-id00035" data-type="xref">Continuous Delivery</A>) for a project that will last only a few days. Similarly, all of our long-term concerns about semantic versioning (SemVer) and dependency management in software engineering projects (see<SPAN>&nbsp;</SPAN><A style='FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 300; COLOR: rgb(142,0,18); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; overflow-wrap: break-word' href="https://abseil.io/resources/swe-book/html/ch21.html#dependency_management" data-type="xref">Dependency Management</A>) don&#8217;t really apply for short-term programming projects: use whatever is available to solve the task at hand.</P>
<P style='FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: 300; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 10px 0px 0px; LINE-HEIGHT: 20px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit'>We believe it is important to differentiate between the related-but-distinct terms &#8220;programming&#8221; and &#8220;software engineering.&#8221; Much of that difference stems from the management of code over time, the impact of time on scale, and decision making in the face of those ideas. Programming is the immediate act of producing code. Software engineering is the set of policies, practices, and tools that are necessary to make that code useful for as long as it needs to be used and allowing collaboration across a team.</P></SECTION><SECTION id=conclusion style='FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 300; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; DISPLAY: block; LETTER-SPACING: normal; LINE-HEIGHT: 24px; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; font-variant-numeric: inherit; font-variant-east-asian: inherit; font-variant-alternates: inherit; font-variant-position: inherit; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; -webkit-text-stroke-width: 0px' data-type="sect1">