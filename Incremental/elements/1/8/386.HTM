<b> : </b>File System (EXT4)<A title="Permanent link" class=headerlink style="TEXT-DECORATION: none; COLOR: ; DISPLAY: inline-block; -webkit-tap-highlight-color: transparent; transition: transform 0.25s 0.25s, color 0.25s, opacity 0.125s 0.25s, -webkit-transform 0.25s 0.25s; transform: translateY(0.25rem); opacity: 0" href="https://kb.techtaco.org/linux/postgresql/postgresql_file_system_tuning/#file-system-ext4">&#182;</A></H2>
<P style='FONT-SIZE: 16px; FONT-FAMILY: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: ; FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 1em 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>I most commonly use CentOS (Currently 6.x versoins) as my go to operating system, because of this I'm going to focus on EXT4. Though some other choices are XFS used for some very large databases and some considered less stable JFS,ReiserFS, BTRFS. Its important to note for Postgersql some bugs involving FSYNC handling were not fully corrected until kernel 2.6.31.8/2.6.32.1. Kernel 2.6.32 is the first version that includes an ext4 version that should be considered safe for production Postgresql databases. From the Postgresql perspective the main improvement over EXT3 is EXT4's better handling of write barriers and FSYNC operations.