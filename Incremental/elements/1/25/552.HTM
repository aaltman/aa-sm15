<b> : </b>Timestamps<A title="Permalink to this heading" class=headerlink style="TEXT-DECORATION: none; COLOR: rgb(221,221,221); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; VISIBILITY: hidden" href="https://docs.kernel.org/driver-api/ioctl.html#timestamps"></A></H2>
<P style="LINE-HEIGHT: 1.4em; hyphens: auto">Traditionally, timestamps and timeout values are passed as<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: Consolas, Menlo, "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; COLOR: rgb(34,34,34); BACKGROUND-COLOR: rgb(236,240,243)'><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none">struct</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none">timespec</SPAN></CODE><SPAN>&nbsp;</SPAN>or<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: Consolas, Menlo, "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; COLOR: rgb(34,34,34); BACKGROUND-COLOR: rgb(236,240,243)'><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none">struct</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none">timeval</SPAN></CODE>, but these are problematic because of incompatible definitions of these structures in user space after the move to 64-bit time_t.</P>
<P style="LINE-HEIGHT: 1.4em; hyphens: auto">The<SPAN>&nbsp;</SPAN><CODE class="docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: Consolas, Menlo, "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; COLOR: rgb(34,34,34); BACKGROUND-COLOR: rgb(236,240,243)'><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none">struct</SPAN><SPAN>&nbsp;</SPAN><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none">__kernel_timespec</SPAN></CODE><SPAN>&nbsp;</SPAN>type can be used instead to be embedded in other data structures when separate second/nanosecond values are desired, or passed to user space directly. This is still not ideal though, as the structure matches neither the kernel&#8217;s timespec64 nor the user space timespec exactly. The<SPAN>&nbsp;</SPAN><A title=get_timespec64 class="reference internal" style="TEXT-DECORATION: none; BORDER-BOTTOM: rgb(0,75,107) 1px dotted; COLOR: rgb(0,75,107)" href="https://docs.kernel.org/driver-api/basics.html#c.get_timespec64"><CODE class="xref c c-func docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: Consolas, Menlo, "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; BORDER-BOTTOM: rgb(255,255,255) 1px solid; FONT-WEIGHT: bold; COLOR: rgb(34,34,34); BACKGROUND-COLOR: rgb(251,251,251)'><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none"><FONT size=4>get_timespec64()</FONT></SPAN></CODE></A><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><A title=put_timespec64 class="reference internal" style="TEXT-DECORATION: none; BORDER-BOTTOM: rgb(0,75,107) 1px dotted; COLOR: rgb(0,75,107)" href="https://docs.kernel.org/driver-api/basics.html#c.put_timespec64"><CODE class="xref c c-func docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: Consolas, Menlo, "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; BORDER-BOTTOM: rgb(255,255,255) 1px solid; FONT-WEIGHT: bold; COLOR: rgb(34,34,34); BACKGROUND-COLOR: rgb(251,251,251)'><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none"><FONT size=4>put_timespec64()</FONT></SPAN></CODE></A><SPAN>&nbsp;</SPAN>helper functions can be used to ensure that the layout remains compatible with user space and the padding is treated correctly.</P>
<P style="LINE-HEIGHT: 1.4em; hyphens: auto">As it is cheap to convert seconds to nanoseconds, but the opposite requires an expensive 64-bit division, a simple __u64 nanosecond value can be simpler and more efficient.</P>
<P style="LINE-HEIGHT: 1.4em; hyphens: auto">Timeout values and timestamps should ideally use CLOCK_MONOTONIC time, as returned by<SPAN>&nbsp;</SPAN><A title=ktime_get_ns class="reference internal" style="TEXT-DECORATION: none; BORDER-BOTTOM: rgb(0,75,107) 1px dotted; COLOR: rgb(0,75,107)" href="https://docs.kernel.org/core-api/timekeeping.html#c.ktime_get_ns"><CODE class="xref c c-func docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: Consolas, Menlo, "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; BORDER-BOTTOM: rgb(255,255,255) 1px solid; FONT-WEIGHT: bold; COLOR: rgb(34,34,34); BACKGROUND-COLOR: rgb(251,251,251)'><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none"><FONT size=4>ktime_get_ns()</FONT></SPAN></CODE></A><SPAN>&nbsp;</SPAN>or<SPAN>&nbsp;</SPAN><A title=ktime_get_ts64 class="reference internal" style="TEXT-DECORATION: none; BORDER-BOTTOM: rgb(0,75,107) 1px dotted; COLOR: rgb(0,75,107)" href="https://docs.kernel.org/core-api/timekeeping.html#c.ktime_get_ts64"><CODE class="xref c c-func docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: Consolas, Menlo, "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; BORDER-BOTTOM: rgb(255,255,255) 1px solid; FONT-WEIGHT: bold; COLOR: rgb(34,34,34); BACKGROUND-COLOR: rgb(251,251,251)'><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none"><FONT size=4>ktime_get_ts64()</FONT></SPAN></CODE></A>. Unlike CLOCK_REALTIME, this makes the timestamps immune from jumping backwards or forwards due to leap second adjustments and clock_settime() calls.</P>
<P style="LINE-HEIGHT: 1.4em; hyphens: auto"><A title=ktime_get_real_ns class="reference internal" style="TEXT-DECORATION: none; BORDER-BOTTOM: rgb(0,75,107) 1px dotted; COLOR: rgb(0,75,107)" href="https://docs.kernel.org/core-api/timekeeping.html#c.ktime_get_real_ns"><CODE class="xref c c-func docutils literal notranslate" style='FONT-SIZE: 0.9em; FONT-FAMILY: Consolas, Menlo, "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; BORDER-BOTTOM: rgb(255,255,255) 1px solid; FONT-WEIGHT: bold; COLOR: rgb(34,34,34); BACKGROUND-COLOR: rgb(251,251,251)'><SPAN class=pre style="WHITE-SPACE: nowrap; hyphens: none"><FONT size=4>ktime_get_real_ns()</FONT></SPAN></CODE></A><SPAN>&nbsp;</SPAN>can be used for CLOCK_REALTIME timestamps that need to be persistent across a reboot or between multiple machines.</P></SECTION><SECTION id=bit-compat-mode>