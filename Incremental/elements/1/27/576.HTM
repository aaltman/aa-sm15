<b> : </b><SPAN id=Communication_With_7-bit_I2C_Addresses class=ez-toc-section></SPAN>Communication With 7-bit I2C Addresses<SPAN class=ez-toc-section-end></SPAN></H2>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Arial, Helvetica, sans-serif; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: justify; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.5em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(242,242,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><SPAN style="COLOR: rgb(0,0,0)"><A aria-haspopup=dialog aria-controls=fancybox-wrap class="fancybox image" style="TEXT-DECORATION: none; COLOR: rgb(15,0,229); transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out" href="https://embetronicx.com/wp-content/uploads/2017/07/command.gif"><IMG class="aligncenter wp-image-942 size-full" style="MAX-WIDTH: 100%; HEIGHT: auto; CLEAR: both; MARGIN: 0px auto; DISPLAY: block" alt="" src="https://embetronicx.com/wp-content/uploads/2017/07/command.gif" width=600 height=216 decoding="async" loading="lazy"></A></SPAN></P>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Arial, Helvetica, sans-serif; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: justify; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.5em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(242,242,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><SPAN style="COLOR: rgb(0,0,0)">Each slave device on the bus should have a unique 7-bit address. The communication starts with the Start condition, followed by the 7-bit slave address and the data direction bit. If this bit is 0 then the master will write to the slave device. Otherwise, if the data direction bit is 1, the master will read from the slave device. After the slave address and the data direction is sent, the master can continue with reading or writing. The communication is ended with the Stop condition which also signals that the I2C bus is free. If the master needs to communicate with other slaves it can generate a repeated start with another slave address without the generation Stop condition. All the bytes are transferred with the MSB bit shifted first.</SPAN></P>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Arial, Helvetica, sans-serif; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: justify; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.5em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(242,242,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><SPAN style="COLOR: rgb(0,0,0)">If the master only writes to the slave device then the data transfer direction is not changed.</SPAN></P>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Arial, Helvetica, sans-serif; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: justify; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.5em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(242,242,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><SPAN style="COLOR: rgb(0,0,0)"><A aria-haspopup=dialog aria-controls=fancybox-wrap class="fancybox image" style="TEXT-DECORATION: none; COLOR: rgb(15,0,229); transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out" href="https://embetronicx.com/wp-content/uploads/2017/07/7-bit-address-writing.gif"><IMG class="aligncenter wp-image-943 size-full" style="MAX-WIDTH: 100%; HEIGHT: auto; CLEAR: both; MARGIN: 0px auto; DISPLAY: block" alt="" src="https://embetronicx.com/wp-content/uploads/2017/07/7-bit-address-writing.gif" width=500 height=215 decoding="async" loading="lazy"></A></SPAN></P>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Arial, Helvetica, sans-serif; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: justify; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.5em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(242,242,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><SPAN style="COLOR: rgb(0,0,0)">If the master only needs to read from the slave device then it simply sends the I2C address with the R/W bit set to read. After this, the master device starts reading the data.</SPAN></P>
<DIV class="table-responsive wprt_style_display" style="FONT-SIZE: 16px; MARGIN-BOTTOM: 20px; FONT-FAMILY: Arial, Helvetica, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; OVERFLOW-X: auto; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; MIN-HEIGHT: 0.01%; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(242,242,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<TABLE class=table style="MAX-WIDTH: 100%; BORDER-TOP: 1px solid; BORDER-RIGHT: 0px solid; WIDTH: 607px; BORDER-COLLAPSE: collapse; TABLE-LAYOUT: auto; BORDER-BOTTOM: 0px solid; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-SPACING: 0px; BORDER-LEFT: 1px solid; MARGIN: 0px auto 20px; PADDING-RIGHT: 0px; border-image: initial">
<TBODY>
<TR style="BACKGROUND-COLOR: rgb(255,255,255)">
<TD style="BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: rgb(221,221,221) 1px solid; PADDING-BOTTOM: 8px !important; TEXT-ALIGN: justify; PADDING-TOP: 8px !important; PADDING-LEFT: 8px !important; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 8px !important">
<P style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 0px !important; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px !important"></P></TD>
<TD style="BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: rgb(221,221,221) 1px solid; PADDING-BOTTOM: 8px !important; TEXT-ALIGN: justify; PADDING-TOP: 8px !important; PADDING-LEFT: 8px !important; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 8px !important">
<P style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 0px !important; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px !important"></P></TD></TR></TBODY></TABLE></DIV>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Arial, Helvetica, sans-serif; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: justify; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.5em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(242,242,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><SPAN style="COLOR: rgb(0,0,0)"><A aria-haspopup=dialog aria-controls=fancybox-wrap class="fancybox image" style="TEXT-DECORATION: none; COLOR: rgb(15,0,229); transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out" href="https://embetronicx.com/wp-content/uploads/2017/07/7-bit-address-reading.gif"><IMG class="aligncenter wp-image-944 size-full" style="MAX-WIDTH: 100%; HEIGHT: auto; CLEAR: both; MARGIN: 0px auto; DISPLAY: block" alt="" src="https://embetronicx.com/wp-content/uploads/2017/07/7-bit-address-reading.gif" width=500 height=105 decoding="async" loading="lazy"></A></SPAN></P>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Arial, Helvetica, sans-serif; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: justify; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.5em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(242,242,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><SPAN style="COLOR: rgb(0,0,0)">Sometimes the master needs to write some data and then read from the slave device. In such cases it must first write to the slave device, change the data transfer direction and then read the device. This means sending the I2C address with the R/W bit set to write and then sending some additional data like the register address. After the writing is finished the master device generates repeated start condition and sends the I2C address with the R/W bit set to read. After this, the data transfer direction is changed and the master device starts reading the data.</SPAN></P>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Arial, Helvetica, sans-serif; BORDER-RIGHT: 0px; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; TEXT-ALIGN: justify; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 1.5em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(242,242,242); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><SPAN style="COLOR: rgb(0,0,0)"><A aria-haspopup=dialog aria-controls=fancybox-wrap class="fancybox image" style="TEXT-DECORATION: none; COLOR: rgb(15,0,229); transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out" href="https://embetronicx.com/wp-content/uploads/2017/07/7-bit-address-writing-reading.gif"><IMG class="aligncenter wp-image-945 size-full" style="MAX-WIDTH: 100%; HEIGHT: auto; CLEAR: both; MARGIN: 0px auto; DISPLAY: block" alt="" src="https://embetronicx.com/wp-content/uploads/2017/07/7-bit-address-writing-reading.gif" width=600 height=201 decoding="async" loading="lazy"></A></SPAN>