<b> : </b><b>New Subsystems</SPAN></H2>
<P style="MARGIN: 0.4em 0px 0.5em">Additional subsystems will need to be developed:</P>
<UL style="LIST-STYLE-TYPE: square; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: url(/skins/PostgreSQL/resources/images/bullet.svg?36e03); MARGIN: 0.3em 0px 0px 1.6em; PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Allow lookup tables to be replicated to all shards to allow more join pushdown. This can be accomplished with logical replication (<B>done</B>), but the optimizer must know the tables have been replicated to implement pushdown.</LI></UL>
<UL style="LIST-STYLE-TYPE: square; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: url(/skins/PostgreSQL/resources/images/bullet.svg?36e03); MARGIN: 0.3em 0px 0px 1.6em; PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Write submodule to use the new partitioning system tables to create and issue FDW queries which match submitted queries.</LI></UL>
<UL style="LIST-STYLE-TYPE: square; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: url(/skins/PostgreSQL/resources/images/bullet.svg?36e03); MARGIN: 0.3em 0px 0px 1.6em; PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Write submodule to collect the results of FDW queries and return them to the user.</LI></UL>
<UL style="LIST-STYLE-TYPE: square; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: url(/skins/PostgreSQL/resources/images/bullet.svg?36e03); MARGIN: 0.3em 0px 0px 1.6em; PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Write a<SPAN>&nbsp;</SPAN><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(51,102,187); PADDING-RIGHT: 13px" href="https://wiki.postgresql.org/wiki/2PC_on_FDW" rel=nofollow>global transaction manager</A><SPAN>&nbsp;</SPAN>to efficiently allow shards to atomically commit transactions. This could perhaps be built upon prepared transactions, with some type of transaction manager to clean up open prepared transactions after a crash, e.g. XA.</LI></UL>
<UL style="LIST-STYLE-TYPE: square; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: url(/skins/PostgreSQL/resources/images/bullet.svg?36e03); MARGIN: 0.3em 0px 0px 1.6em; PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Write a<SPAN>&nbsp;</SPAN><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(51,102,187); PADDING-RIGHT: 13px" href="https://www.postgresql.org/message-id/CAFjFpRfQaCTt1vD9E35J%2BXxfCnZC5HONqgJgGpUjfktJdoYZVw%40mail.gmail.com" rel=nofollow>global snapshot manager</A><SPAN>&nbsp;</SPAN>which allows shards to see a consistent snapshot. (Will SERIALIZABLE transaction mode avoid cross-node snapshot conflicts? Does pg_export_snapshot() or hot_standby_feedback help?) This is also needed for consistent multi-shard backups.</LI></UL>
<UL style="LIST-STYLE-TYPE: square; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: url(/skins/PostgreSQL/resources/images/bullet.svg?36e03); MARGIN: 0.3em 0px 0px 1.6em; PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Write user API to create, manage, and report on shards.</LI></UL>