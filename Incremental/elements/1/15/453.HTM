<b> : </b>What about sharding using partitioned tables with postgres_fdw?</H2>
<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 300; COLOR: rgb(51,51,51); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>&nbsp;</P>
<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 300; COLOR: rgb(51,51,51); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>An alternative approach to sharding Postgres using Citus is to create a hash-partitioned table in Postgres in which every partition is a foreign table that uses<SPAN>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: rgb(20,108,172); BACKGROUND-COLOR: transparent" href="https://www.postgresql.org/docs/current/postgres-fdw.html" rel="noopener nofollow noreferrer" target=_blank>postgres_fdw</A>. That way, you can query tables across multiple PostgreSQL servers, and queries for a specific partition key value will only access one remote PostgreSQL server.</P>
<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 300; COLOR: rgb(51,51,51); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>&nbsp;</P>
<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 300; COLOR: rgb(51,51,51); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>While this approach has the advantage of being part of core PostgreSQL, it lacks many of the elemental features that a Postgres sharding solution needs, both in terms of management and performance. For instance:</P>
<UL style='BOX-SIZING: border-box; FONT-SIZE: 16px; MARGIN-BOTTOM: 12px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: 0px; LIST-STYLE-POSITION: outside; TEXT-TRANSFORM: none; FONT-WEIGHT: 300; COLOR: rgb(51,51,51); FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-LEFT: 2.5em; CLEAR: left; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No full query pushdown (necessary to achieve scalability)</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No transparent schema changes</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No rebalancing</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No reference tables</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No co-located joins</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No multi-stage query execution (e.g. broadcast results of CTE, then join with the CTE)</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No object propagation (e.g. create type)</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No shard splits</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No pg_dump</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>No support for 2PC &#8211; cross-shard changes may only be partially applied</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>Limited support for parallel query</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>Poor query performance</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>Poor bulk loading performance</LI>
<LI style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif'>Manual creation of shards</LI></UL>
<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 300; COLOR: rgb(51,51,51); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>In that sense, Postgres native partitioning that uses FOREIGN TABLES to shard is effectively manual sharding with the ability to do simple queries across nodes. If you are considering using partitioning with foreign tables for sharding, we recommend you look into<SPAN>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: rgb(20,108,172); BACKGROUND-COLOR: transparent" href="https://github.com/citusdata/citus" rel="noopener noreferrer" target=_blank>Citus</A><SPAN>&nbsp;</SPAN>as well.</P>
<P style='BOX-SIZING: border-box; FONT-SIZE: 14px; FONT-FAMILY: SegoeUI, Lato, "Helvetica Neue", Helvetica, Arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 300; COLOR: rgb(51,51,51); FONT-STYLE: normal; TEXT-ALIGN: left; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>&nbsp;