<A href="https://www.usenix.org/system/files/conference/atc16/atc16_paper-falsafi.pdf">https://www.usenix.org/system/files/conference/atc16/atc16_paper-falsafi.pdf</A>
<P></P>
<P>Unlocking Energy Babak Falsafi Rachid Guerraoui Javier Picorel Vasileios Trigonakis &#8727; {first.last}@epfl.ch EcoCloud, EPFL</P>With busy waiting, the underlying hardware context remains active. On Intel machines, for example, it is not practically feasible to reduce the power consumption of busy waiting. First, there is no power-friendly pause instruction to be used in busy-wait loops. The conventional way of reducing the cost of these loops, namely the x86 pause instruction, actually increases power consumption. Second, the monitor/mwait instructions require kernel-level privileges, thus using them in user space incurs high overheads. Third, traditional DVFS techniques for decreasing the voltage and frequency of the cores (hence lowering their power consumption) are too coarse-grained and too slow to use. Consequently, the power consumption of busy waiting can simply not be reduced. The only way is to look into sleeping.