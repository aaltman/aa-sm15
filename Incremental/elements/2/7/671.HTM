<A href="https://www.usenix.org/system/files/conference/atc16/atc16_paper-falsafi.pdf">https://www.usenix.org/system/files/conference/atc16/atc16_paper-falsafi.pdf</A> 
<P></P>
<P>Unlocking Energy Babak Falsafi Rachid Guerraoui Javier Picorel Vasileios Trigonakis &#8727; {first.last}@epfl.ch EcoCloud, EPFL</P>
<P>However, going to sleep hurts energy efficiency. The futex system call implements sleeping in Linux and is used by pthread mutex locks. In most realistic scenarios, the futex-call overheads offset the energy benefits of sleeping over busy waiting, if any, resulting in worse energy efficiency. Additionally, the spin-then-sleep policy of mutex is not tuned to account for these overheads. The mutex spins for up to a few hundred cycles before employing futex, while waking up a sleeping thread takes at least 7000 cycles. As a result, it is common that a thread makes the costly futex call to sleep, only to be immediately woken up, thus wasting both time and energy. We design MUTEXEE, an optimized version of mutex that takes the futex overheads into account.