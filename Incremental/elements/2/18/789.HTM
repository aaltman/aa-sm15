<b> : </b><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction#server-side_rendering">Server-side rendering</A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><STRONG style="BOX-SIZING: border-box">Server-side rendering</STRONG><SPAN>&nbsp;</SPAN>(<STRONG style="BOX-SIZING: border-box">SSR</STRONG>) is an application architecture in which it is the<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>server</EM>'s job to render a single-page application. This is the opposite of<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>client-side rendering</EM>, which is the most common and most straightforward way to build a JavaScript application. Server-side rendering is easier on the client's device because you're only sending a rendered HTML file to them, but it can be difficult to set up compared to a client-side-rendered application.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">All of the frameworks covered in this module support server-side rendering as well as client-side rendering. Check out<SPAN>&nbsp;</SPAN><A class=external style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: " href="https://nextjs.org/" target=_blank>Next.js</A><SPAN>&nbsp;</SPAN>for React,<SPAN>&nbsp;</SPAN><A class=external style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: " href="https://nuxt.com/" target=_blank>Nuxt</A><SPAN>&nbsp;</SPAN>for Vue (yes, it is confusing, and no, these projects are not related!),<SPAN>&nbsp;</SPAN><A class=external style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: " href="https://github.com/ember-fastboot/ember-cli-fastboot" target=_blank>FastBoot</A><SPAN>&nbsp;</SPAN>for Ember, and<SPAN>&nbsp;</SPAN><A class=external style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: " href="https://angular.dev/guide/universal" target=_blank>Angular Universal</A><SPAN>&nbsp;</SPAN>for Angular.</P>
<DIV id=sect3 class="notecard note" style="BOX-SIZING: border-box; MARGIN-TOP: 2px; POSITION: relative; COLOR: ; PADDING-TOP: 1px; PADDING-LEFT: 1px; MARGIN-LEFT: 2px; BORDER-LEFT: 2px solid; PADDING-RIGHT: 1px; MARGIN-RIGHT: 2px; border-radius: var(--elem-radius); --note-background: var(--background-information); --note-theme: var(--icon-information); box-shadow: var(--shadow-01)">
<P style="BOX-SIZING: border-box; COLOR: ; PADDING-BOTTOM: 0px; MARGIN: 0px"><STRONG style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px">Note:</STRONG><SPAN>&nbsp;</SPAN>Some SSR solutions are written and maintained by the community, whereas some are "official" solutions provided by the framework's maintainer.</P></DIV></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=static_site_generators>