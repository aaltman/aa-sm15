<b> : </b>Relaxed memory consistency models</H2><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Relaxed memory consistency models" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Consistency_model&amp;action=edit&amp;section=24"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Some different consistency models can be defined by relaxing one or more requirements in<SPAN>&nbsp;</SPAN><A title="Sequential consistency" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Sequential_consistency">sequential consistency</A><SPAN>&nbsp;</SPAN>called relaxed consistency models.<SUP id=cite_ref-RelaxedModel_7-1 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Consistency_model#cite_note-RelaxedModel-7"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[7]</FONT></A></SUP><SPAN>&nbsp;</SPAN>These consistency models do not provide memory consistency at the hardware level. In fact, the programmers are responsible for implementing the memory consistency by applying synchronization techniques. The above models are classified based on four criteria and are detailed further.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">There are four comparisons to define the relaxed consistency:</P>
<DL style="FONT-SIZE: 16px; MARGIN-BOTTOM: 0.5em; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; MARGIN-TOP: -0.5em; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Relaxation</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px; margin-inline: 1.6em 0px">One way to categorize the relaxed consistency is to define which sequential consistency requirements are relaxed. We can have less strict models by relaxing either program order or write atomicity requirements defined by Adve and Gharachorloo, 1996.<SUP id=cite_ref-sharedmemory_5-1 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Consistency_model#cite_note-sharedmemory-5"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[5]</FONT></A></SUP><SPAN>&nbsp;</SPAN>Program order guarantees that each process issues a memory request ordered by its program and write atomicity defines that memory requests are serviced based on the order of a single FIFO queue. In relaxing program order, any or all the ordering of operation pairs, write-after-write, read-after-write, or read/write-after-read, can be relaxed. In the relaxed write atomicity model, a process can view its own writes before any other processors.</DD>
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Synchronizing vs. non-synchronizing</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px; margin-inline: 1.6em 0px">A synchronizing model can be defined by dividing the memory accesses into two groups and assigning different consistency restrictions to each group considering that one group can have a weak consistency model while the other one needs a more restrictive consistency model. In contrast, a non-synchronizing model assigns the same consistency model to the memory access types.</DD>
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Issue vs. view-based</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px; margin-inline: 1.6em 0px"><SUP id=cite_ref-unified_14-3 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Consistency_model#cite_note-unified-14"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[14]</FONT></A></SUP><SPAN>&nbsp;</SPAN>Issue method provides sequential consistency simulation by defining the restrictions for processes to issue memory operations. Whereas, view method describes the visibility restrictions on the events order for processes.</DD>
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Relative model strength</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px; margin-inline: 1.6em 0px">Some consistency models are more restrictive than others. In other words, strict consistency models enforce more constraints as consistency requirements. The strength of a model can be defined by the program order or atomicity relaxations and the strength of models can also be compared. Some models are directly related if they apply the same relaxations or more. On the other hand, the models that relax different requirements are not directly related.</DD></DL>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Sequential consistency has two requirements, program order and write atomicity. Different relaxed consistency models can be obtained by relaxing these requirements. This is done so that, along with relaxed constraints, the performance increases, but the programmer is responsible for implementing the memory consistency by applying synchronisation techniques and must have a good understanding of the hardware.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Potential relaxations:</P>
<UL style="LIST-STYLE-TYPE: disc; FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: -0.5em 0px 0px 1.6em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; margin-inline: 1.6em 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Write to read program order</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Write to write program order</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Read to read and read to write program orders</LI></UL>
<DIV class="mw-heading mw-heading3" style="FONT-SIZE: 1.2em; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">