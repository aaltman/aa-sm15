<b> : </b>Relaxed write to read</H3><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Relaxed write to read" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Consistency_model&amp;action=edit&amp;section=25"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">An approach to improving the performance at the hardware level is by relaxing the PO of a write followed by a read which effectively hides the latency of write operations. The optimisation this type of relaxation relies on is that it allows the subsequent reads to be in a relaxed order with respect to the previous writes from the processor. Because of this relaxation some programs like XXX may fail to give SC results because of this relaxation. Whereas, programs like YYY are still expected to give consistent results because of the enforcement of the remaining program order constraints.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Three models fall under this category. The IBM 370 model is the strictest model. A read can be complete before an earlier write to a different address, but it is prohibited from returning the value of the write unless all the processors have seen the write. The SPARC V8 total store ordering model (TSO) model partially relaxes the IBM 370 Model, it allows a read to return the value of its own processor's write with respect to other writes to the same location i.e. it returns the value of its own write before others see it. Similar to the previous model, this cannot return the value of write unless all the processors have seen the write. The processor consistency model (PC) is the most relaxed of the three models and relaxes both the constraints such that a read can complete before an earlier write even before it is made visible to other processors.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">In Example A, the result is possible only in IBM 370 because read(A) is not issued until the write(A) in that processor is completed. On the other hand, this result is possible in TSO and PC because they allow the reads of the flags before the writes of the flags in a single processor.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">In Example B the result is possible only with PC as it allows P2 to return the value of a write even before it is visible to P3. This won't be possible in the other two models.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">To ensure sequential consistency in the above models, safety nets or fences are used to manually enforce the constraint. The IBM370 model has some specialised<SPAN>&nbsp;</SPAN><I>serialisation instructions</I><SPAN>&nbsp;</SPAN>which are manually placed between operations. These instructions can consist of memory instructions or non-memory instructions such as branches. On the other hand, the TSO and PC models do not provide safety nets, but the programmers can still use read-modify-write operations to make it appear like the program order is still maintained between a write and a following read. In case of TSO, PO appears to be maintained if the R or W which is already a part of a R-modify-W is replaced by a R-modify-W, this requires the W in the R-modify-W is a &#8216;dummy&#8217; that returns the read value. Similarly for PC, PO seems to be maintained if the read is replaced by a write or is already a part of R-modify-W.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">However, compiler optimisations cannot be done after exercising this relaxation alone. Compiler optimisations require the full flexibility of reordering any two operations in the PO, so the ability to reorder a write with respect to a read is not sufficiently helpful in this case.</P>
<TABLE class=wikitable style="FONT-SIZE: 16px; BORDER-TOP: 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: 1px solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-COLLAPSE: collapse; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; BORDER-LEFT: 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: -0.5em 0px 1em; LETTER-SPACING: normal; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<CAPTION style="FONT-WEIGHT: bold">Example A</CAPTION>
<TBODY>
<TR>
<TH style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"><ABBR title=Processor style="CURSOR: help; TEXT-DECORATION: underline; BORDER-BOTTOM: 0px">P</ABBR>1</TH>
<TH style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"><ABBR title=Processor style="CURSOR: help; TEXT-DECORATION: underline; BORDER-BOTTOM: 0px">P</ABBR>2</TH></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em" colSpan=2>A = flag1 = flag2 = 0</TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">flag1 = 1</TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">flag2 = 1</TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">A = 1</TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">A = 2</TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">reg1 = A</TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">reg3 = A</TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">reg2 = flag2</TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">reg4 = flag1</TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em" colSpan=2>reg1 = 1; reg3 = 2, reg2 = reg4 = 0</TD></TR></TBODY></TABLE>
<TABLE class=wikitable style="FONT-SIZE: 16px; BORDER-TOP: 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: 1px solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-COLLAPSE: collapse; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; BORDER-LEFT: 1px solid; ORPHANS: 2; WIDOWS: 2; MARGIN: 1em 0px; LETTER-SPACING: normal; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<CAPTION style="FONT-WEIGHT: bold">Example B</CAPTION>
<TBODY>
<TR>
<TH style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"><ABBR title=Processor style="CURSOR: help; TEXT-DECORATION: underline; BORDER-BOTTOM: 0px">P</ABBR>1</TH>
<TH style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"><ABBR title=Processor style="CURSOR: help; TEXT-DECORATION: underline; BORDER-BOTTOM: 0px">P</ABBR>2</TH>
<TH style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"><ABBR title=Processor style="CURSOR: help; TEXT-DECORATION: underline; BORDER-BOTTOM: 0px">P</ABBR>3</TH></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em" colSpan=3>A = B = 0</TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">A = 1</TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"></TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"></TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"></TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">if (A == 1)</TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"></TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"></TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">B = 1</TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">if (B == 1)</TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"></TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em"></TD>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em">reg1 = A</TD></TR>
<TR>
<TD style="BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0.4em" colSpan=3>B = 1, reg1 = 0</TD></TR></TBODY></TABLE>
<DIV class="mw-heading mw-heading3" style="FONT-SIZE: 1.2em; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">