<b> : </b><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview#anatomy_of_a_dynamic_request">Anatomy of a dynamic request</A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">This section provides a step-by-step overview of the "dynamic" HTTP request and response cycle, building on what we looked at in the last article with much more detail. In order to "keep things real" we'll use the context of a sports-team manager website where a coach can select their team name and team size in an HTML form and get back a suggested "best lineup" for their next game.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">The diagram below shows the main elements of the "team coach" website, along with numbered labels for the sequence of operations when the coach accesses their "best team" list. The parts of the site that make it dynamic are the<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Web Application</EM><SPAN>&nbsp;</SPAN>(this is how we will refer to the server-side code that processes HTTP requests and returns HTTP responses), the<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Database</EM>, which contains information about players, teams, coaches and their relationships, and the<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>HTML Templates</EM>.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><IMG style="MAX-WIDTH: 100%; BORDER-TOP: 1px solid; HEIGHT: auto; BORDER-RIGHT: 1px solid; BACKGROUND: rgb(255,255,255); MARGIN-TOP: 2px; BORDER-BOTTOM: 1px solid; COLOR: rgb(27,27,27); MARGIN-LEFT: 2px; BORDER-LEFT: 1px solid; DISPLAY: flex; MARGIN-RIGHT: 2px; border-radius: var(--elem-radius)" alt="This is a diagram of a simple web server with step numbers for each of step of the client-server interaction." src="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview/web_application_with_html_and_steps.png" width=1226 height=584 loading="lazy"></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">After the coach submits the form with the team name and number of players, the sequence of operations is:</P>
<OL style="LIST-STYLE-TYPE: decimal; BOX-SIZING: border-box; MARGIN-TOP: 1px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 2px; MARGIN-LEFT: 1px; PADDING-RIGHT: 0px; MARGIN-RIGHT: 1px">
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">The web browser creates an HTTP<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">GET</CODE><SPAN>&nbsp;</SPAN>request to the server using the base URL for the resource (<CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">/best</CODE>) and encoding the team and player number either as URL parameters (e.g.<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">/best?team=my_team_name&amp;show=11</CODE>) or as part of the URL pattern (e.g.<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">/best/my_team_name/11/</CODE>). A<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">GET</CODE><SPAN>&nbsp;</SPAN>request is used because the request is only fetching data (not modifying data).</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">The<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Web Server</EM><SPAN>&nbsp;</SPAN>detects that the request is "dynamic" and forwards it to the<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Web Application</EM><SPAN>&nbsp;</SPAN>for processing (the web server determines how to handle different URLs based on pattern matching rules defined in its configuration).</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">The<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Web Application</EM><SPAN>&nbsp;</SPAN>identifies that the<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>intention</EM><SPAN>&nbsp;</SPAN>of the request is to get the "best team list" based on the URL (<CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">/best/</CODE>) and finds out the required team name and number of players from the URL. The<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Web Application</EM><SPAN>&nbsp;</SPAN>then gets the required information from the database (using additional "internal" parameters to define which players are "best", and possibly also getting the identity of the logged in coach from a client-side cookie).</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">The<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Web Application</EM><SPAN>&nbsp;</SPAN>dynamically creates an HTML page by putting the data (from the<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Database</EM>) into placeholders inside an HTML template.</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">The<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Web Application</EM><SPAN>&nbsp;</SPAN>returns the generated HTML to the web browser (via the<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Web Server</EM>), along with an HTTP status code of 200 ("success"). If anything prevents the HTML from being returned then the<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Web Application</EM><SPAN>&nbsp;</SPAN>will return another code &#8212; for example "404" to indicate that the team does not exist.</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">The Web Browser will then start to process the returned HTML, sending separate requests to get any other CSS or JavaScript files that it references (see step 7).</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">The Web Server loads static files from the file system and returns them to the browser directly (again, correct file handling is based on configuration rules and URL pattern matching).</LI></OL>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">An operation to update a record in the database would be handled similarly, except that like any database update, the HTTP request from the browser should be encoded as a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">POST</CODE><SPAN>&nbsp;</SPAN>request.</P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=doing_other_work>