<b> : </b><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview#static_sites">Static sites</A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">A<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>static site</EM><SPAN>&nbsp;</SPAN>is one that returns the same hard coded content from the server whenever a particular resource is requested. So for example if you have a page about a product at<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">/static/myproduct1.html</CODE>, this same page will be returned to every user. If you add another similar product to your site you will need to add another page (e.g.<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">myproduct2.html</CODE>) and so on. This can start to get really inefficient &#8212; what happens when you get to thousands of product pages? You would repeat a lot of code across each page (the basic page template, structure, etc.), and if you wanted to change anything about the page structure &#8212; like add a new "related products" section for example &#8212; then you'd have to change every page individually.</P>
<DIV id=sect3 class="notecard note" style="BOX-SIZING: border-box; MARGIN-TOP: 2px; POSITION: relative; COLOR: ; PADDING-TOP: 1px; PADDING-LEFT: 1px; MARGIN-LEFT: 2px; BORDER-LEFT: 2px solid; PADDING-RIGHT: 1px; MARGIN-RIGHT: 2px; border-radius: var(--elem-radius); --note-background: var(--background-information); --note-theme: var(--icon-information); box-shadow: var(--shadow-01)">
<P style="BOX-SIZING: border-box; COLOR: ; PADDING-BOTTOM: 0px; MARGIN: 0px"><STRONG style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px">Note:</STRONG><SPAN>&nbsp;</SPAN>Static sites are excellent when you have a small number of pages and you want to send the same content to every user. However they can have a significant cost to maintain as the number of pages becomes larger.</P></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">Let's recap on how this works, by looking again at the static site architecture diagram we looked at in the last article.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><IMG style="MAX-WIDTH: 100%; BORDER-TOP: 1px solid; HEIGHT: auto; BORDER-RIGHT: 1px solid; BACKGROUND: rgb(255,255,255); MARGIN-TOP: 2px; BORDER-BOTTOM: 1px solid; COLOR: rgb(27,27,27); MARGIN-LEFT: 2px; BORDER-LEFT: 1px solid; DISPLAY: flex; MARGIN-RIGHT: 2px; border-radius: var(--elem-radius)" alt="A simplified diagram of a static web server." src="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview/basic_static_app_server.png" width=960 height=267 loading="lazy"></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">When a user wants to navigate to a page, the browser sends an HTTP<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">GET</CODE><SPAN>&nbsp;</SPAN>request specifying the URL of its HTML page. The server retrieves the requested document from its file system and returns an HTTP response containing the document and an<SPAN>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status">HTTP Response status code</A><SPAN>&nbsp;</SPAN>of "<CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">200 OK</CODE>" (indicating success). The server might return a different status code, for example "<CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">404 Not Found</CODE>" if the file is not present on the server, or "<CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">301 Moved Permanently</CODE>" if the file exists but has been redirected to a different location.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">The server for a static site will only ever need to process GET requests, because the server doesn't store any modifiable data. It also doesn't change its responses based on HTTP Request data (e.g. URL parameters or cookies).</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">Understanding how static sites work is nevertheless useful when learning server-side programming, because dynamic sites handle requests for static files (CSS, JavaScript, static images, etc.) in exactly the same way.</P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=dynamic_sites>