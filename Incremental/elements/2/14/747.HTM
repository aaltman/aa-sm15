<b> : </b><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview#web_frameworks_simplify_server-side_web_programming">Web frameworks simplify server-side web programming</A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">Server-side web frameworks make writing code to handle the operations described above much easier.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">One of the most important operations they perform is providing simple mechanisms to map URLs for different resources/pages to specific handler functions. This makes it easier to keep the code associated with each type of resource separate. It also has benefits in terms of maintenance, because you can change the URL used to deliver a particular feature in one place, without having to change the handler function.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">For example, consider the following Django (Python) code that maps two URL patterns to two view functions. The first pattern ensures that an HTTP request with a resource URL of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">/best</CODE><SPAN>&nbsp;</SPAN>will be passed to a function named<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">index()</CODE><SPAN>&nbsp;</SPAN>in the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">views</CODE><SPAN>&nbsp;</SPAN>module. A request that has the pattern "<CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">/best/junior</CODE>", will instead be passed to the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">junior()</CODE><SPAN>&nbsp;</SPAN>view function.</P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto">python</SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: python notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="D74TDQzCUwb7zwOlR0qZGpb6dXbVkzroGrPi3TEEDqE="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: "># file: best/urls.py</SPAN>
<SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">#</SPAN>

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> django<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>conf<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>urls <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> url

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> views

urlpatterns <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">[</SPAN>
    <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: "># example: /best/</SPAN>
    url<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">r'^$'</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> views<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>index<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN>
    <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: "># example: /best/junior/</SPAN>
    url<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">r'^junior/$'</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> views<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>junior<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">]</SPAN>
</CODE></PRE></DIV>
<DIV id=sect4 class="notecard note" style="BOX-SIZING: border-box; MARGIN-TOP: 1px; POSITION: relative; COLOR: ; PADDING-TOP: 1px; PADDING-LEFT: 1px; MARGIN-LEFT: 1px; BORDER-LEFT: 2px solid; PADDING-RIGHT: 1px; MARGIN-RIGHT: 1px; border-radius: var(--elem-radius); --note-background: var(--background-information); --note-theme: var(--icon-information); box-shadow: var(--shadow-01)">
<P style="BOX-SIZING: border-box; COLOR: ; PADDING-BOTTOM: 0px; MARGIN: 0px"><STRONG style="BOX-SIZING: border-box">Note:</STRONG><SPAN>&nbsp;</SPAN>The first parameters in the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">url()</CODE><SPAN>&nbsp;</SPAN>functions may look a bit odd (e.g.<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">r'^junior/$'</CODE>) because they use a pattern matching technique called "regular expressions" (RegEx, or RE). You don't need to know how regular expressions work at this point, other than that they allow us to match patterns in the URL (rather than the hard coded values above) and use them as parameters in our view functions. As an example, a really simple RegEx might say "match a single uppercase letter, followed by between 4 and 7 lower case letters."</P></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">The web framework also makes it easy for a view function to fetch information from the database. The structure of our data is defined in models, which are Python classes that define the fields to be stored in the underlying database. If we have a model named<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Team</EM><SPAN>&nbsp;</SPAN>with a field of "<EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>team_type</EM>" then we can use a simple query syntax to get back all teams that have a particular type.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">The example below gets a list of all teams that have the exact (case sensitive)<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">team_type</CODE><SPAN>&nbsp;</SPAN>of "junior" &#8212; note the format: field name (<CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">team_type</CODE>) followed by double underscore, and then the type of match to use (in this case<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">exact</CODE>). There are many other types of matches and we can daisy chain them. We can also control the order and the number of results returned.</P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto">python</SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: python notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="DTyI/4ts++P5RYLRh0sH7UohWb5z+tZqi3XgWZXVxZA="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">#best/views.py</SPAN>

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> django<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>shortcuts <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> render

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>models <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> Team

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">def</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">junior</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>request<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">:</SPAN>
    list_teams <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> Team<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>objects<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token builtin" style="BOX-SIZING: border-box; COLOR: ">filter</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>team_type__exact<SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"junior"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN>
    context <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">'list'</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">:</SPAN> list_teams<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
    <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">return</SPAN> render<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>request<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">'best/index.html'</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> context<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN>
</CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">After the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">junior()</CODE><SPAN>&nbsp;</SPAN>function gets the list of junior teams, it calls the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">render()</CODE><SPAN>&nbsp;</SPAN>function, passing the original<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">HttpRequest</CODE>, an HTML template, and a "context" object defining the information to be included in the template. The<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">render()</CODE><SPAN>&nbsp;</SPAN>function is a convenience function that generates HTML using a context and an HTML template, and returns it in an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">HttpResponse</CODE><SPAN>&nbsp;</SPAN>object.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">Obviously web frameworks can help you with a lot of other tasks. We discuss a lot more benefits and some popular web framework choices in the next article.</P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=summary><BR class=Apple-interchange-newline>