<b> : </b><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Introduction#handling_the_request_views.py">Handling the request (views.py)</A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">Views are the heart of the web application, receiving HTTP requests from web clients and returning HTTP responses. In between, they marshal the other resources of the framework to access databases, render templates, etc.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">The example below shows a minimal view function<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">index()</CODE>, which could have been called by our URL mapper in the previous section. Like all view functions it receives an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">HttpRequest</CODE><SPAN>&nbsp;</SPAN>object as a parameter (<CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">request</CODE>) and returns an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">HttpResponse</CODE><SPAN>&nbsp;</SPAN>object. In this case we don't do anything with the request, and our response returns a hard-coded string. We'll show you a request that does something more interesting in a later section.</P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap; gap: 1rem"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto">python</SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: python notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="B9d4tbHpFBqi98OTw/UtBNntf37n0mnvN+fuvAIevNc="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: "># filename: views.py (Django view functions)</SPAN>

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> django<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>http <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> HttpResponse

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">def</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">index</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>request<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">:</SPAN>
    <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: "># Get an HttpRequest - the request parameter</SPAN>
    <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: "># perform operations using information from the request.</SPAN>
    <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: "># Return HttpResponse</SPAN>
    <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">return</SPAN> HttpResponse<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">'Hello from Django!'</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN>
</CODE></PRE></DIV>
<DIV id=sect3 class="notecard note" style="BOX-SIZING: border-box; MARGIN-TOP: 1px; POSITION: relative; COLOR: ; PADDING-TOP: 1px; PADDING-LEFT: 1px; MARGIN-LEFT: 1px; BORDER-LEFT: 2px solid; PADDING-RIGHT: 1px; MARGIN-RIGHT: 1px; --note-background: var(--background-information); --note-theme: var(--icon-information); border-radius: var(--elem-radius); box-shadow: var(--shadow-01)">
<P style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px"><STRONG style="BOX-SIZING: border-box">Note:</STRONG><SPAN>&nbsp;</SPAN>A little bit of Python:</P>
<UL style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 1px; MARGIN: 0px; PADDING-RIGHT: 0px">
<LI style="BOX-SIZING: border-box; COLOR: ; MARGIN: 0px"><A class=external style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: " href="https://docs.python.org/3/tutorial/modules.html" target=_blank>Python modules</A><SPAN>&nbsp;</SPAN>are "libraries" of functions, stored in separate files, that we might want to use in our code. Here we import just the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">HttpResponse</CODE><SPAN>&nbsp;</SPAN>object from the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">django.http</CODE><SPAN>&nbsp;</SPAN>module so that we can use it in our view:<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">from django.http import HttpResponse</CODE>. There are other ways of importing some or all objects from a module.</LI>
<LI style="BOX-SIZING: border-box; COLOR: ; PADDING-BOTTOM: 0px; MARGIN: 0px">Functions are declared using the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">def</CODE><SPAN>&nbsp;</SPAN>keyword as shown above, with named parameters listed in parentheses after the name of the function; the whole line ends in a colon. Note how the next lines are all<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px">indented</STRONG>. The indentation is important, as it specifies that the lines of code are inside that particular block (mandatory indentation is a key feature of Python, and is one reason that Python code is so easy to read).</LI></UL></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">Views are usually stored in a file called<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box">views.py</STRONG>.</P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=defining_data_models_models.py>