<H1 style="BOX-SIZING: border-box; MARGIN: 0px 0px 2px"><FONT class=extract>React interactivity: Events and state</FONT></H1></HEADER>
<DIV class=section-content style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>
<UL class=prev-next style="LIST-STYLE-TYPE: none; BOX-SIZING: border-box; MARGIN-TOP: 1px; PADDING-BOTTOM: 0px; TEXT-ALIGN: center; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 1px; DISPLAY: flex; PADDING-RIGHT: 0px; MARGIN-RIGHT: 1px; gap: 0.5rem; justify-content: space-between">
<LI style="BOX-SIZING: border-box; MARGIN: 0px; DISPLAY: flex"><A class="button secondary" style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: underline; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: medium none; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px; appearance: none; --button-bg: var(--button-secondary-default); --button-bg-hover: var(--button-secondary-hover); --button-bg-active: var(--button-secondary-active); --button-border-color: var(--border-primary); --button-focus-effect: var(--focus-effect); --button-height: var(--form-elem-height,2rem); --button-color: var(--text-secondary); --button-font: var(--type-emphasis-m); --button-padding: 0.5rem; --button-radius: var(--elem-radius,0.25rem); border-radius: var(--button-radius)" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components"><SPAN class=button-wrap style="BOX-SIZING: border-box; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: ; BORDER-LEFT: 1px solid; DISPLAY: flex; gap: 0.25rem; justify-content: center; border-radius: var(--button-radius); align-items: center"><FONT class=extract>Previous</FONT></SPAN></A><FONT class=extract> </FONT>
<LI style="BOX-SIZING: border-box; MARGIN: 0px; DISPLAY: flex"><A class="button secondary" style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: underline; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: medium none; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px; appearance: none; --button-bg: var(--button-secondary-default); --button-bg-hover: var(--button-secondary-hover); --button-bg-active: var(--button-secondary-active); --button-border-color: var(--border-primary); --button-focus-effect: var(--focus-effect); --button-height: var(--form-elem-height,2rem); --button-color: var(--text-secondary); --button-font: var(--type-emphasis-m); --button-padding: 0.5rem; --button-radius: var(--elem-radius,0.25rem); border-radius: var(--button-radius)" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks"><SPAN class=button-wrap style="BOX-SIZING: border-box; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: ; BORDER-LEFT: 1px solid; DISPLAY: flex; gap: 0.25rem; justify-content: center; border-radius: var(--button-radius); align-items: center"><FONT class=extract>Overview: Understanding client-side JavaScript frameworks</FONT></SPAN></A><FONT class=extract> </FONT>
<LI style="BOX-SIZING: border-box; MARGIN: 0px; DISPLAY: flex"><A class="button secondary" style="BOX-SIZING: border-box; CURSOR: pointer; TEXT-DECORATION: underline; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: medium none; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px; appearance: none; --button-bg: var(--button-secondary-default); --button-bg-hover: var(--button-secondary-hover); --button-bg-active: var(--button-secondary-active); --button-border-color: var(--border-primary); --button-focus-effect: var(--focus-effect); --button-height: var(--form-elem-height,2rem); --button-color: var(--text-secondary); --button-font: var(--type-emphasis-m); --button-padding: 0.5rem; --button-radius: var(--elem-radius,0.25rem); border-radius: var(--button-radius)" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering"><SPAN class=button-wrap style="BOX-SIZING: border-box; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: ; BORDER-LEFT: 1px solid; DISPLAY: flex; gap: 0.25rem; justify-content: center; border-radius: var(--button-radius); align-items: center"><FONT class=extract>Next</FONT></SPAN></A></LI></UL>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>With our component plan worked out, it's now time to start updating our app from a completely static UI to one that actually allows us to interact and change things. In this article we'll do this, digging into events and state along the way, and ending up with an app in which we can successfully add and delete tasks, and toggle tasks as completed.</FONT></P><FIGURE class=table-container style="BOX-SIZING: border-box; OVERFLOW: auto; WIDTH: 639px; MARGIN: 0px 0px 1px">
<TABLE style="BOX-SIZING: border-box; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WIDTH: 639px; BORDER-COLLAPSE: collapse; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid">
<TBODY style="BOX-SIZING: border-box">
<TR style="BOX-SIZING: border-box">
<TH style="BOX-SIZING: border-box; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 1px solid; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px" scope=row><FONT class=extract>Prerequisites:</FONT></TH>
<TD style="BOX-SIZING: border-box; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0px">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Familiarity with the core<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/HTML"><FONT class=extract>HTML</FONT></A><FONT class=extract>,<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/CSS"><FONT class=extract>CSS</FONT></A><FONT class=extract>, and<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript"><FONT class=extract>JavaScript</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>languages, knowledge of the<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line"><FONT class=extract>terminal/command line</FONT></A><FONT class=extract>.</FONT></P></TD></TR>
<TR style="BOX-SIZING: border-box">
<TH style="BOX-SIZING: border-box; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; VERTICAL-ALIGN: middle; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 1px solid; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px" scope=row><FONT class=extract>Objective:</FONT></TH>
<TD style="BOX-SIZING: border-box; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; VERTICAL-ALIGN: middle; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 0px"><FONT class=extract>To learn about handling events and state in React, and use those to start making the case study app interactive.</FONT></TD></TR></TBODY></TABLE></FIGURE></DIV><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=handling_events>
<H2 id=handling_events style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#handling_events"><FONT class=extract>Handling events</FONT></A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>If you've only written vanilla JavaScript before now, you might be used to having a separate JavaScript file in which you query for some DOM nodes and attach listeners to them. For example, an HTML file might have a button in it, like this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>html</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: html notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="Iehg1N25Gr/ibH1OCXLqKH9klJufILK3bLwDENKjDGg="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>button</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>button<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN>Say hi!<SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>button</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>And a JavaScript file might have some code like this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>js</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: js notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="4bhj0QNOq1cObRXNycgtjQhXyNuyvYM9BtrDsEHFb44="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> btn <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> document<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">querySelector</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"button"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>

btn<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">addEventListener</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"click"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">alert</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"hi!"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>In JSX, the code that describes the UI lives right alongside our event listeners:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="xAHhhTDyex0lubgvAizG13i5wuN+u7/LTzFUfnQ8bpg="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>button</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>button<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onClick</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">alert</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"hi!"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>  Say hi!
</FONT></SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>button</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>In this example, we're adding an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onClick</CODE><SPAN>&nbsp;</SPAN>attribute to the<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract>&lt;button&gt;</FONT></CODE></A><FONT class=extract><SPAN>&nbsp;</SPAN>element. The value of that attribute is a function that triggers a simple alert. This may seem counter to best practice advice about not writing event listeners in HTML, but remember: JSX is not HTML.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>The<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onClick</CODE><SPAN>&nbsp;</SPAN>attribute has special meaning here: it tells React to run a given function when the user clicks on the button. There are a couple of other things to note:</FONT></P>
<UL style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-TOP: 1px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 2px; MARGIN-LEFT: 1px; PADDING-RIGHT: 0px; MARGIN-RIGHT: 1px">
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px"><FONT class=extract>The<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Glossary/Camel_case"><FONT class=extract>camel-cased</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>nature of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onClick</CODE><SPAN>&nbsp;</SPAN>is important &#8212; JSX will not recognize<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onclick</CODE><SPAN>&nbsp;</SPAN>(again, it is already used in JavaScript for a specific purpose, which is related but different &#8212; standard<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract>onclick</FONT></CODE></A><FONT class=extract><SPAN>&nbsp;</SPAN>handler properties). </FONT>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px"><FONT class=extract>All browser events follow this format in JSX &#8211;<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">on</CODE>, followed by the name of the event.</FONT></LI></UL>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Let's apply this to our app, starting in the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Form.jsx</CODE><SPAN>&nbsp;</SPAN>component.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=handling_form_submission>
<H3 id=handling_form_submission style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#handling_form_submission"><FONT class=extract>Handling form submission</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>At the top of the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Form()</CODE><SPAN>&nbsp;</SPAN>component function (i.e., just below the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">function Form() {</CODE><SPAN>&nbsp;</SPAN>line), create a function named<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleSubmit()</CODE>. This function should<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#preventing_default_behavior"><FONT class=extract>prevent the default behavior of the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">submit</CODE><SPAN>&nbsp;</SPAN>event</FONT></A><FONT class=extract>. After that, it should trigger an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">alert()</CODE>, which can say whatever you'd like. It should end up looking something like this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="ebF7MKeIA+8XSRHwX4ldfaopKXBJ7A5RMGz2AQu3fJw="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">handleSubmit</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">event</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  event<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">preventDefault</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">alert</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"Hello, world!"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>To use this function, add an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onSubmit</CODE><SPAN>&nbsp;</SPAN>attribute to the<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract>&lt;form&gt;</FONT></CODE></A><FONT class=extract><SPAN>&nbsp;</SPAN>element, and set its value to the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleSubmit</CODE><SPAN>&nbsp;</SPAN>function:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="KOPD4MfUo7ELTiP7l4q91S4pcG4SyajisSJtVcnNN7I="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>form</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onSubmit</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>handleSubmit<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now if you head back to your browser and click on the "Add" button, your browser will show you an alert dialog with the words "Hello, world!" &#8212; or whatever you chose to write there.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=callback_props>
<H2 id=callback_props style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#callback_props"><FONT class=extract>Callback props</FONT></A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>In React applications, interactivity is rarely confined to just one component: events that happen in one component will affect other parts of the app. When we start giving ourselves the power to make new tasks, things that happen in the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>component will affect the list rendered in<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;App /&gt;</CODE>.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>We want our<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleSubmit()</CODE><SPAN>&nbsp;</SPAN>function to ultimately help us create a new task, so we need a way to pass information from<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>to<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;App /&gt;</CODE>. We can't pass data from child to parent in the same way as we pass data from parent to child using standard props. Instead, we can write a function in<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;App /&gt;</CODE><SPAN>&nbsp;</SPAN>that will expect some data from our form as an input, then pass that function to<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>as a prop. This function-as-a-prop is called a<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box">callback prop</STRONG>. Once we have our callback prop, we can call it inside<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>to send the right data to<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;App /&gt;</CODE>.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=handling_form_submission_via_callbacks>
<H3 id=handling_form_submission_via_callbacks style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#handling_form_submission_via_callbacks"><FONT class=extract>Handling form submission via callbacks</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Inside the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App()</CODE><SPAN>&nbsp;</SPAN>function in<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App.jsx</CODE>, create a function named<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>which has a single parameter of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE>:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="rbL6NotfzeUXLbWbSsuWXdKlGzxGtqI4LY4dC5xbwh0="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">addTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">name</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">alert</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Next, pass<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>into<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>as a prop. The prop can have whatever name you want, but pick a name you'll understand later. Something like<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask</CODE><SPAN>&nbsp;</SPAN>works, because it matches the name of the function as well as what the function will do. Your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>component call should be updated as follows:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="P1nYMnqGD5pGgkIMMvuze3MhEUEW8m3lhGJ+KUAKIqY="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">Form</SPAN></SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">addTask</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>addTask<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>To use this prop, we must change the signature of the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Form()</CODE><SPAN>&nbsp;</SPAN>function in<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Form.jsx</CODE><SPAN>&nbsp;</SPAN>so that it accepts<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">props</CODE><SPAN>&nbsp;</SPAN>as a parameter:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="/8fETBpmzAbfAq38ZJ6mTay7zVYnbfDXWPu2cgSlUf0="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">Form</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">props</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">// ...</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Finally, we can use this prop inside the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleSubmit()</CODE><SPAN>&nbsp;</SPAN>function in your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>component! Update it as follows:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="OJgT4LxR/SsDUAUTt7HMV4dp1soArAQ2/rhxlS3yIb0="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">handleSubmit</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">event</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  event<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">preventDefault</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">addTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"Say hello!"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Clicking on the "Add" button in your browser will prove that the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>callback function works, but it'd be nice if we could get the alert to show us what we're typing in our input field! This is what we'll do next.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=aside_a_note_on_naming_conventions>
<H3 id=aside_a_note_on_naming_conventions style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#aside_a_note_on_naming_conventions"><FONT class=extract>Aside: a note on naming conventions</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>We passed the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>function into the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>component as the prop<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask</CODE><SPAN>&nbsp;</SPAN>so that the relationship between the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>function</EM><SPAN>&nbsp;</SPAN>and the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask</CODE><SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>prop</EM><SPAN>&nbsp;</SPAN>would remain as clear as possible. Keep in mind, though, that prop names do not<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>need</EM><SPAN>&nbsp;</SPAN>to be anything in particular. We could have passed<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>into<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>under any other name, such as this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>diff</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: diff notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="gQLcZdB+9WGOOzSu3MoZbezp3rtPkuHU6AWdJ6otxR8="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><SPAN class="token deleted-sign deleted" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token prefix deleted" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract>-</FONT></SPAN><SPAN class="token line" style="BOX-SIZING: border-box"><FONT class=extract> &lt;Form addTask={addTask} /&gt;
</FONT></SPAN></SPAN><SPAN class="token inserted-sign inserted" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token prefix inserted" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract>+</FONT></SPAN><SPAN class="token line" style="BOX-SIZING: border-box"><FONT class=extract> &lt;Form onSubmit={addTask} /&gt;
</FONT></SPAN></SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>This would make the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>function available to the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Form /&gt;</CODE><SPAN>&nbsp;</SPAN>component as the prop<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onSubmit</CODE>. That prop could be used in<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Form.jsx</CODE><SPAN>&nbsp;</SPAN>like this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>diff</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: diff notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="l1QuNkwdfzw9P/VPFQnM061qbI4uGdCHbA0pJPRNvqA="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract>function handleSubmit(event) {
</FONT><SPAN class="token unchanged" style="BOX-SIZING: border-box"><SPAN class="token prefix unchanged" style="BOX-SIZING: border-box"><FONT class=extract> </FONT></SPAN><SPAN class="token line" style="BOX-SIZING: border-box"><FONT class=extract> event.preventDefault();
</FONT></SPAN></SPAN><SPAN class="token deleted-sign deleted" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token prefix deleted" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract>-</FONT></SPAN><SPAN class="token line" style="BOX-SIZING: border-box"><FONT class=extract> props.addTask("Say hello!");
</FONT></SPAN></SPAN><SPAN class="token inserted-sign inserted" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token prefix inserted" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract>+</FONT></SPAN><SPAN class="token line" style="BOX-SIZING: border-box"><FONT class=extract> props.onSubmit("Say hello!");
</FONT></SPAN></SPAN><FONT class=extract>}
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Here, the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">on</CODE><SPAN>&nbsp;</SPAN>prefix tells us that the prop is a callback function;<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Submit</CODE><SPAN>&nbsp;</SPAN>is our clue that a submit event will trigger this function.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>While callback props often match the names of familiar event handlers, like<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onSubmit</CODE><SPAN>&nbsp;</SPAN>or<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onClick</CODE>, they can be named just about anything that helps make their meaning clear. A hypothetical<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Menu /&gt;</CODE><SPAN>&nbsp;</SPAN>component might include a callback function that runs when the menu is opened, as well as a separate callback function that runs when it's closed:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="ZbyRGyvbHXXZd/X1Af2uotyEL887drxFGcr4w8WEvng="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">Menu</SPAN></SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onOpen</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> console<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">log</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"Hi!"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onClose</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> console<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">log</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"Bye!"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>This<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">on*</CODE><SPAN>&nbsp;</SPAN>naming convention is very common in the React ecosystem, so keep it in mind as you continue your learning. For the sake of clarity, we're going to stick with<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask</CODE><SPAN>&nbsp;</SPAN>and similar prop names for the rest of this tutorial. If you changed any prop names while reading this section, be sure to change them back before continuing!</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=persisting_and_changing_data_with_state>
<H2 id=persisting_and_changing_data_with_state style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#persisting_and_changing_data_with_state"><FONT class=extract>Persisting and changing data with state</FONT></A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>So far, we've used props to pass data through our components and this has served us just fine. Now that we're dealing with interactivity, however, we need the ability to create new data, retain it, and update it later. Props are not the right tool for this job because they are immutable &#8212; a component cannot change or create its own props.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>This is where<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box">state</STRONG><SPAN>&nbsp;</SPAN>comes in. If we think of props as a way to communicate between components, we can think of state as a way to give components "memory" &#8211; information they can hold onto and update as needed.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>React provides a special function for introducing state to a component, aptly named<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">useState()</CODE>.</FONT></P>
<DIV id=sect1 class="notecard note" style="BOX-SIZING: border-box; MARGIN-TOP: 2px; POSITION: relative; COLOR: ; PADDING-TOP: 1px; PADDING-LEFT: 1px; MARGIN-LEFT: 2px; BORDER-LEFT: 2px solid; PADDING-RIGHT: 1px; MARGIN-RIGHT: 2px; border-radius: var(--elem-radius); --note-background: var(--background-information); --note-theme: var(--icon-information); box-shadow: var(--shadow-01)">
<P style="BOX-SIZING: border-box; COLOR: ; PADDING-BOTTOM: 0px; MARGIN: 0px"><FONT class=extract><STRONG style="BOX-SIZING: border-box">Note:</STRONG><SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">useState()</CODE><SPAN>&nbsp;</SPAN>is part of a special category of functions called<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px">hooks</STRONG>, each of which can be used to add new functionality to a component. We'll learn about other hooks later on.</FONT></P></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>To use<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">useState()</CODE>, we need to import it from the React module. Add the following line to the top of your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Form.jsx</CODE><SPAN>&nbsp;</SPAN>file, above the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Form()</CODE><SPAN>&nbsp;</SPAN>function definition:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="jA9iK2pFeH2YYAmYeGS55Og2D8vqu9X/OEBqgBPA5Is="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> useState <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"react"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">useState()</CODE><SPAN>&nbsp;</SPAN>takes a single argument that determines the initial value of the state. This argument can be a string, a number, an array, an object, or any other JavaScript data type.<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">useState()</CODE><SPAN>&nbsp;</SPAN>returns an array containing two items. The first item is the current value of the state; the second item is a function that can be used to update the state.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Let's create a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE><SPAN>&nbsp;</SPAN>state. Write the following above your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleSubmit()</CODE><SPAN>&nbsp;</SPAN>function, inside<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Form()</CODE>:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="6UjiCOoNiRnA9z5VNyiNcRgXG8oqppzkqfOYqvMU//s="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">[</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> setName<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">]</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">useState</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"Learn React"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Several things are happening in this line of code:</FONT></P>
<UL style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-TOP: 1px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 2px; MARGIN-LEFT: 1px; PADDING-RIGHT: 0px; MARGIN-RIGHT: 1px">
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px"><FONT class=extract>We are defining a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE><SPAN>&nbsp;</SPAN>constant with the value<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">"Learn React"</CODE>. </FONT>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px"><FONT class=extract>We are defining a function whose job it is to modify<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE>, called<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">setName()</CODE>. </FONT>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px"><FONT class=extract><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">useState()</CODE><SPAN>&nbsp;</SPAN>returns these two things in an array, so we are using<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"><FONT class=extract>array destructuring</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>to capture them both in separate variables.</FONT></LI></UL></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=reading_state>
<H3 id=reading_state style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#reading_state"><FONT class=extract>Reading state</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>You can see the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE><SPAN>&nbsp;</SPAN>state in action right away. Add a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">value</CODE><SPAN>&nbsp;</SPAN>attribute to the form's input, and set its value to<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE>. Your browser will render "Learn React" inside the input.</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="zN8DVCy3ThyXQBIDHSs+fvL7r9GSeyRkDfgXDjYG1o4="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>input</SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>text<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>new-todo-input<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>input input__lg<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">name</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>text<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">autoComplete</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>off<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">value</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Change "Learn React" to an empty string once you're done; this is what we want for our initial state:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="q/hzrVzOlGUhicOqD6QzQLGBTHo/eRxHD893OoRQO4c="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">[</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> setName<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">]</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">useState</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">""</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=reading_user_input>
<H3 id=reading_user_input style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#reading_user_input"><FONT class=extract>Reading user input</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Before we can change the value of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE>, we need to capture a user's input as they type. For this, we can listen to the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onChange</CODE><SPAN>&nbsp;</SPAN>event. Let's write a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleChange()</CODE><SPAN>&nbsp;</SPAN>function, and listen for it on the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;input /&gt;</CODE><SPAN>&nbsp;</SPAN>element.</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="CMEX/9FU3J5u9V3ro0DZ/++5e1W2oqpI0dQat03hjts="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">// near the top of the `Form` component</SPAN>
<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">handleChange</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  console<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">log</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"Typing!"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>

<SPAN class="token operator" style="BOX-SIZING: border-box">...</SPAN>

<SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">// Down in the return statement</SPAN>
</FONT><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>input</SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>text<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>new-todo-input<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>input input__lg<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">name</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>text<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">autoComplete</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>off<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">value</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onChange</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>handleChange<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Currently, our input's value will not change when you try to enter text into it, but your browser will log the word "Typing!" to the JavaScript console, so we know our event listener is attached to the input.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>To read the user's keystrokes, we must access the input's<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">value</CODE><SPAN>&nbsp;</SPAN>property. We can do this by reading the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">event</CODE><SPAN>&nbsp;</SPAN>object that<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleChange()</CODE><SPAN>&nbsp;</SPAN>receives when it's called.<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">event</CODE>, in turn, has<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Web/API/Event/target"><FONT class=extract>a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">target</CODE><SPAN>&nbsp;</SPAN>property</FONT></A><FONT class=extract>, which represents the element that fired the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">change</CODE><SPAN>&nbsp;</SPAN>event. That's our input. So,<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">event.target.value</CODE><SPAN>&nbsp;</SPAN>is the text inside the input.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>You can<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">console.log()</CODE><SPAN>&nbsp;</SPAN>this value to see it in your browser's console. Try updating the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleChange()</CODE><SPAN>&nbsp;</SPAN>function as follows, and typing in the input to see the result in your console:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="y/CfQRmKSVx1r8RRreBSJlJOO0OuwjF4SCoi3NB9yWg="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">handleChange</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">event</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  console<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">log</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>event<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>target<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>value<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=updating_state>
<H3 id=updating_state style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#updating_state"><FONT class=extract>Updating state</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Logging isn't enough &#8212; we want to actually store what the user types and render it in the input! Change your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">console.log()</CODE><SPAN>&nbsp;</SPAN>call to<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">setName()</CODE>, as shown below:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="XZNwmIRHjmrgfzHpnAcl3TyQuHVXX71H2oGhJbh2TFw="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">handleChange</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">event</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setName</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>event<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>target<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>value<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now when you type in the input, your keystrokes will fill out the input, as you might expect.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>We have one more step: we need to change our<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleSubmit()</CODE><SPAN>&nbsp;</SPAN>function so that it calls<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">props.addTask</CODE><SPAN>&nbsp;</SPAN>with<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE><SPAN>&nbsp;</SPAN>as an argument. Remember our callback prop? This will serve to send the task back to the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App</CODE><SPAN>&nbsp;</SPAN>component, so we can add it to our list of tasks at some later date. As a matter of good practice, you should clear the input after your form is submitted, so we'll call<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">setName()</CODE><SPAN>&nbsp;</SPAN>again with an empty string to do so:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="I+bZFRVX7rdDITeCVmf9iA9grpYaRFnHP4d8yVXRLbA="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">handleSubmit</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">event</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  event<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">preventDefault</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">addTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setName</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">""</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>At last, you can type something into the input field in your browser and click<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>Add</EM><SPAN>&nbsp;</SPAN>&#8212; whatever you typed will appear in an alert dialog.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Form.jsx</CODE><SPAN>&nbsp;</SPAN>file should now read like this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="ZGfJma4/euo1spwu/V7nm7ET1GtNo/4gFeAN7zXHAiA="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> useState <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"react"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">Form</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">props</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">[</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> setName<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">]</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">useState</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">""</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>

  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">handleChange</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">event</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
    <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setName</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>event<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>target<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>value<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>

  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">handleSubmit</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">event</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
    event<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">preventDefault</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
    props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">addTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
    <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setName</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">""</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>

  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">return</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>
    <SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>form</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onSubmit</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>handleSubmit<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>h2</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>label-wrapper<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>label</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">htmlFor</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>new-todo-input<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>label__lg<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>          What needs to be done?
        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>label</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>input</SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>text<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>new-todo-input<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>input input__lg<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">name</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>text<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">autoComplete</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>off<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">value</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onChange</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>handleChange<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
      <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>button</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>submit<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>btn btn__primary btn__lg<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        Add
      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>button</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>    </FONT></SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>form</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">export</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">default</SPAN> Form<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<DIV id=sect2 class="notecard note" style="BOX-SIZING: border-box; MARGIN-TOP: 1px; POSITION: relative; COLOR: ; PADDING-TOP: 1px; PADDING-LEFT: 1px; MARGIN-LEFT: 1px; BORDER-LEFT: 2px solid; PADDING-RIGHT: 1px; MARGIN-RIGHT: 1px; border-radius: var(--elem-radius); --note-background: var(--background-information); --note-theme: var(--icon-information); box-shadow: var(--shadow-01)">
<P style="BOX-SIZING: border-box; COLOR: ; PADDING-BOTTOM: 0px; MARGIN: 0px"><FONT class=extract><STRONG style="BOX-SIZING: border-box">Note:</STRONG><SPAN>&nbsp;</SPAN>You'll notice that you are able to submit empty tasks by just pressing the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Add</CODE><SPAN>&nbsp;</SPAN>button without entering a task name. Can you think of a way to prevent this? As a hint, you probably need to add some kind of check into the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">handleSubmit()</CODE><SPAN>&nbsp;</SPAN>function.</FONT></P></DIV></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=putting_it_all_together_adding_a_task>
<H2 id=putting_it_all_together_adding_a_task style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#putting_it_all_together_adding_a_task"><FONT class=extract>Putting it all together: Adding a task</FONT></A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now that we've practiced with events, callback props, and hooks, we're ready to write functionality that will allow a user to add a new task from their browser.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=tasks_as_state>
<H3 id=tasks_as_state style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#tasks_as_state"><FONT class=extract>Tasks as state</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>We need to import<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">useState</CODE><SPAN>&nbsp;</SPAN>into<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App.jsx</CODE><SPAN>&nbsp;</SPAN>so that we can store our tasks in state. Add the following to the top of your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App.jsx</CODE><SPAN>&nbsp;</SPAN>file:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="jA9iK2pFeH2YYAmYeGS55Og2D8vqu9X/OEBqgBPA5Is="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> useState <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"react"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>We want to pass<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">props.tasks</CODE><SPAN>&nbsp;</SPAN>into the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">useState()</CODE><SPAN>&nbsp;</SPAN>hook &#8211; this will preserve its initial state. Add the following right at the top of your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App()</CODE><SPAN>&nbsp;</SPAN>function definition:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="8CiM5dIbtI5mrJQG09LMoFw4RvN6IYC7tDcQcsKQRts="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">[</SPAN>tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> setTasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">]</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">useState</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now, we can change our<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">taskList</CODE><SPAN>&nbsp;</SPAN>mapping so that it is the result of mapping<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">tasks</CODE>, instead of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">props.tasks</CODE>. Your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">taskList</CODE><SPAN>&nbsp;</SPAN>constant declaration should now look like so:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="ZltwyqGwuvPOjDFDABtoeJib7EJM0IXtghcg9Wr0AxU="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> taskList <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> tasks<SPAN class="token operator" style="BOX-SIZING: border-box">?.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">map</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">task</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>
  </FONT><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">Todo</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">name</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">completed</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>completed<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">key</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=adding_a_task>
<H3 id=adding_a_task style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#adding_a_task"><FONT class=extract>Adding a task</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>We've now got a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">setTasks</CODE><SPAN>&nbsp;</SPAN>hook that we can use in our<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>function to update our list of tasks. There's one problem however: we can't just pass the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE><SPAN>&nbsp;</SPAN>argument of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>into<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">setTasks</CODE>, because<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">tasks</CODE><SPAN>&nbsp;</SPAN>is an array of objects and<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE><SPAN>&nbsp;</SPAN>is a string. If we tried to do this, the array would be replaced with the string.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>First of all, we need to put<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">name</CODE><SPAN>&nbsp;</SPAN>into an object that has the same structure as our existing tasks. Inside of the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>function, we will make a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">newTask</CODE><SPAN>&nbsp;</SPAN>object to add to the array.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>We then need to make a new array with this new task added to it and then update the state of the tasks data to this new state. To do this, we can use spread syntax to<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#copying_an_array"><FONT class=extract>copy the existing array</FONT></A><FONT class=extract>, and add our object at the end. We then pass this array into<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">setTasks()</CODE><SPAN>&nbsp;</SPAN>to update the state.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Putting that all together, your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>function should read like so:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="8qCWOfkhaBvbYOjmQB1sblCyreRDB9E/XtaknA0eECA="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">addTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">name</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> newTask <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> <SPAN class="token literal-property property" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"id"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> <SPAN class="token literal-property property" style="BOX-SIZING: border-box; COLOR: ">completed</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token boolean" style="BOX-SIZING: border-box; COLOR: ">false</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setTasks</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">[</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">...</SPAN>tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> newTask<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">]</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now you can use the browser to add a task to our data! Type anything into the form and click "Add" (or press the<SPAN>&nbsp;</SPAN><KBD style="BOX-SIZING: border-box; BORDER-TOP: 2px solid; BORDER-RIGHT: 2px solid; BORDER-BOTTOM: 2px solid; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 2px solid; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); box-shadow: inset 0 -1px 0 0 var(--border-secondary)">Enter</KBD><SPAN>&nbsp;</SPAN>key) and you'll see your new todo item appear in the UI!</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract><STRONG style="BOX-SIZING: border-box">However, we have another problem</STRONG>: our<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>function is giving each task the same<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">id</CODE>. This is bad for accessibility, and makes it impossible for React to tell future tasks apart with the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">key</CODE><SPAN>&nbsp;</SPAN>prop. In fact, React will give you a warning in your DevTools console &#8212; "Warning: Encountered two children with the same key&#8230;"</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>We need to fix this. Making unique identifiers is a hard problem &#8211; one for which the JavaScript community has written some helpful libraries. We'll use<SPAN>&nbsp;</SPAN></FONT><A class=external style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: " href="https://github.com/ai/nanoid" target=_blank><FONT class=extract>nanoid</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>because it's tiny and it works.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Make sure you're in the root directory of your application and run the following terminal command:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>bash</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: bash notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="QTxOrlgu2HgDCv1k2T+a0Gvz3cFOpv6EHVk/1uV5tsg="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">npm</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">install</SPAN> nanoid
</FONT></CODE></PRE></DIV>
<DIV id=sect3 class="notecard note" style="BOX-SIZING: border-box; MARGIN-TOP: 1px; POSITION: relative; COLOR: ; PADDING-TOP: 1px; PADDING-LEFT: 1px; MARGIN-LEFT: 1px; BORDER-LEFT: 2px solid; PADDING-RIGHT: 1px; MARGIN-RIGHT: 1px; border-radius: var(--elem-radius); --note-background: var(--background-information); --note-theme: var(--icon-information); box-shadow: var(--shadow-01)">
<P style="BOX-SIZING: border-box; COLOR: ; PADDING-BOTTOM: 0px; MARGIN: 0px"><FONT class=extract><STRONG style="BOX-SIZING: border-box">Note:</STRONG><SPAN>&nbsp;</SPAN>If you're using yarn, you'll need the following instead:<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">yarn add nanoid</CODE>.</FONT></P></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now we can use<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">nanoid</CODE><SPAN>&nbsp;</SPAN>to create unique IDs for our new tasks. First of all, import it by including the following line at the top of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App.jsx</CODE>:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="xTDZmNyTtX3p1ZnCU40ZIszsC/+uW8a0cQbI0gDUy0g="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> nanoid <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"nanoid"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now let's update<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">addTask()</CODE><SPAN>&nbsp;</SPAN>so that each task ID becomes a prefix<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">todo-</CODE><SPAN>&nbsp;</SPAN>plus a unique string generated by nanoid. Update your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">newTask</CODE><SPAN>&nbsp;</SPAN>constant declaration to this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="cPR7Vp/dpsPXt3otuafxEXvcc5/eT4s6SxcoEkLvUbk="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> newTask <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> <SPAN class="token literal-property property" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token template-string" style="BOX-SIZING: border-box"><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">todo-</SPAN><SPAN class="token interpolation" style="BOX-SIZING: border-box"><SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">${</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">nanoid</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> <SPAN class="token literal-property property" style="BOX-SIZING: border-box; COLOR: ">completed</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token boolean" style="BOX-SIZING: border-box; COLOR: ">false</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Save everything, and try your app again &#8212; now you can add tasks without getting that warning about duplicate IDs.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=detour_counting_tasks>
<H2 id=detour_counting_tasks style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#detour_counting_tasks"><FONT class=extract>Detour: counting tasks</FONT></A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now that we can add new tasks, you may notice a problem: our heading reads "3 tasks remaining" no matter how many tasks we have! We can fix this by counting the length of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">taskList</CODE><SPAN>&nbsp;</SPAN>and changing the text of our heading accordingly.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Add this inside your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App()</CODE><SPAN>&nbsp;</SPAN>definition, before the return statement:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="91qMrLAYMdpZUA8vdNNEuUke2WiUsNP8f6W6GelJBWc="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> headingText <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token template-string" style="BOX-SIZING: border-box"><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN><SPAN class="token interpolation" style="BOX-SIZING: border-box"><SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">${</SPAN>taskList<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>length<SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: "> tasks remaining</SPAN><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>This is almost right, except that if our list ever contains a single task, the heading will still use the word "tasks". We can make this a variable, too. Update the code you just added as follows:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="u4ziC4ytaRtgbo2xVyboW+GRmrNENJfdcMU6+ZjMlaI="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> tasksNoun <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> taskList<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>length <SPAN class="token operator" style="BOX-SIZING: border-box">!==</SPAN> <SPAN class="token number" style="BOX-SIZING: border-box; COLOR: ">1</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">?</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"tasks"</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"task"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> headingText <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token template-string" style="BOX-SIZING: border-box"><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN><SPAN class="token interpolation" style="BOX-SIZING: border-box"><SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">${</SPAN>taskList<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>length<SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: "> </SPAN><SPAN class="token interpolation" style="BOX-SIZING: border-box"><SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">${</SPAN>tasksNoun<SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: "> remaining</SPAN><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now you can replace the list heading's text content with the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">headingText</CODE><SPAN>&nbsp;</SPAN>variable. Update your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;h2&gt;</CODE><SPAN>&nbsp;</SPAN>like so:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="4avokApJDjFgYuUEfMercmYLQSKIbQiPyKD/+NjLxq0="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>h2</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>list-heading<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>headingText<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Save the file, go back to your browser, and try adding some tasks: the count should now update as expected.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=completing_a_task>
<H2 id=completing_a_task style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#completing_a_task"><FONT class=extract>Completing a task</FONT></A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>You might notice that, when you click on a checkbox, it checks and unchecks appropriately. As a feature of HTML, the browser knows how to remember which checkbox inputs are checked or unchecked without our help. This feature hides a problem, however: toggling a checkbox doesn't change the state in our React application. This means that the browser and our app are now out-of-sync. We have to write our own code to put the browser back in sync with our app.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=proving_the_bug>
<H3 id=proving_the_bug style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#proving_the_bug"><FONT class=extract>Proving the bug</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Before we fix the problem, let's observe it happening.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>We'll start by writing a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">toggleTaskCompleted()</CODE><SPAN>&nbsp;</SPAN>function in our<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App()</CODE><SPAN>&nbsp;</SPAN>component. This function will have an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">id</CODE><SPAN>&nbsp;</SPAN>parameter, but we're not going to use it yet. For now, we'll log the first task in the array to the console &#8211; we're going to inspect what happens when we check or uncheck it in our browser:</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Add this just above your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">taskList</CODE><SPAN>&nbsp;</SPAN>constant declaration:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="JeXdsvn+JJzvh2eW3yXnW3TLZ42IlV/wYtCGzaAic0A="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">toggleTaskCompleted</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">id</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  console<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">log</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">[</SPAN><SPAN class="token number" style="BOX-SIZING: border-box; COLOR: ">0</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">]</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Next, we'll add<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">toggleTaskCompleted</CODE><SPAN>&nbsp;</SPAN>to the props of each<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Todo /&gt;</CODE><SPAN>&nbsp;</SPAN>component rendered inside our<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">taskList</CODE>; update it like so:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="HPtvdE6oK170dH+jZMzWfMZCHItVf1FpBK3PbsJbW3w="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> taskList <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">map</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">task</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>
  </FONT><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">Todo</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">name</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">completed</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>completed<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">key</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">toggleTaskCompleted</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>toggleTaskCompleted<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Next, go over to your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Todo.jsx</CODE><SPAN>&nbsp;</SPAN>component and add an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">onChange</CODE><SPAN>&nbsp;</SPAN>handler to your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;input /&gt;</CODE><SPAN>&nbsp;</SPAN>element, which should use an anonymous function to call<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">props.toggleTaskCompleted()</CODE><SPAN>&nbsp;</SPAN>with a parameter of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">props.id</CODE>. The<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;input /&gt;</CODE><SPAN>&nbsp;</SPAN>should now look like this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="EPsOnEG+twEJaP8fmwwTv8iTfhf7QiHfJh8jHHhHWAI="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>input</SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>checkbox<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">defaultChecked</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>completed<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onChange</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">toggleTaskCompleted</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Save everything and return to your browser and notice that our first task, Eat, is checked. Open your JavaScript console, then click on the checkbox next to Eat. It unchecks, as we expect. Your JavaScript console, however, will log something like this:</FONT></P><PRE class="brush: plain notranslate" style="BOX-SIZING: border-box; BORDER-TOP: 1px solid; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; MARGIN-TOP: 1px; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; MARGIN-LEFT: 1px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 1px; MARGIN-RIGHT: 1px; border-radius: var(--elem-radius); overflow-wrap: break-word"><FONT class=extract>Object { id: "task-0", name: "Eat", completed: true }
</FONT></PRE>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>The checkbox unchecks in the browser, but our console tells us that Eat is still completed. We will fix that next!</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=synchronizing_the_browser_with_our_data>
<H3 id=synchronizing_the_browser_with_our_data style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#synchronizing_the_browser_with_our_data"><FONT class=extract>Synchronizing the browser with our data</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Let's revisit our<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">toggleTaskCompleted()</CODE><SPAN>&nbsp;</SPAN>function in<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App.jsx</CODE>. We want it to change the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">completed</CODE><SPAN>&nbsp;</SPAN>property of only the task that was toggled, and leave all the others alone. To do this, we'll<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">map()</CODE><SPAN>&nbsp;</SPAN>over the task list and just change the one we completed.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Update your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">toggleTaskCompleted()</CODE><SPAN>&nbsp;</SPAN>function to the following:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="KDrrkP6vMM9OBQ9nCbVvuARxpizP6SPhxXjOWcmQCQM="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">toggleTaskCompleted</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">id</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> updatedTasks <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">map</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">task</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
    <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">// if this task has the same ID as the edited task</SPAN>
    <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">if</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>id <SPAN class="token operator" style="BOX-SIZING: border-box">===</SPAN> task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
      <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">// use object spread to make a new object</SPAN>
      <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">// whose `completed` prop has been inverted</SPAN>
      <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">return</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">...</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> <SPAN class="token literal-property property" style="BOX-SIZING: border-box; COLOR: ">completed</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">!</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>completed <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
    <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
    <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">return</SPAN> task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setTasks</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>updatedTasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Here, we define an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">updatedTasks</CODE><SPAN>&nbsp;</SPAN>constant that maps over the original<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">tasks</CODE><SPAN>&nbsp;</SPAN>array. If the task's<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">id</CODE><SPAN>&nbsp;</SPAN>property matches the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">id</CODE><SPAN>&nbsp;</SPAN>provided to the function, we use<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"><FONT class=extract>object spread syntax</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>to create a new object, and toggle the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">completed</CODE><SPAN>&nbsp;</SPAN>property of that object before returning it. If it doesn't match, we return the original object.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Then we call<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">setTasks()</CODE><SPAN>&nbsp;</SPAN>with this new array in order to update our state.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=deleting_a_task>
<H2 id=deleting_a_task style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#deleting_a_task"><FONT class=extract>Deleting a task</FONT></A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Deleting a task will follow a similar pattern to toggling its completed state: we need to define a function for updating our state, then pass that function into<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Todo /&gt;</CODE><SPAN>&nbsp;</SPAN>as a prop and call it when the right event happens.</FONT></P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=the_deletetask_callback_prop>
<H3 id=the_deletetask_callback_prop style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#the_deletetask_callback_prop"><FONT class=extract>The<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">deleteTask</CODE><SPAN>&nbsp;</SPAN>callback prop</FONT></A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Here we'll start by writing a<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">deleteTask()</CODE><SPAN>&nbsp;</SPAN>function in your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App</CODE><SPAN>&nbsp;</SPAN>component. Like<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">toggleTaskCompleted()</CODE>, this function will take an<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">id</CODE><SPAN>&nbsp;</SPAN>parameter, and we will log that<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">id</CODE><SPAN>&nbsp;</SPAN>to the console to start with. Add the following below<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">toggleTaskCompleted()</CODE>:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="jFfdyERHh5h+ATE5y+jed9+TxAQZQsbdgQgVzdo6CIY="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">deleteTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">id</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  console<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">log</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Next, add another callback prop to our array of<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">&lt;Todo /&gt;</CODE><SPAN>&nbsp;</SPAN>components:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="lNsdR6MV7rIxfgCuCyGBv80GBtBxvLigNpObyUUIt9w="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> taskList <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">map</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">task</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>
  </FONT><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">Todo</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">name</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">completed</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>completed<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">key</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">toggleTaskCompleted</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>toggleTaskCompleted<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">deleteTask</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>deleteTask<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>In<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Todo.jsx</CODE>, we want to call<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">props.deleteTask()</CODE><SPAN>&nbsp;</SPAN>when the "Delete" button is pressed.<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">deleteTask()</CODE><SPAN>&nbsp;</SPAN>needs to know the ID of the task that called it, so it can delete the correct task from the state.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Update the "Delete" button inside<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Todo.jsx</CODE>, like so:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="+1elb2/wagAyIB2ALW7Al+dFRzUyKaYUHh+jQ1xCsFY="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>button</SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>button<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>btn btn__danger<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
  <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onClick</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">deleteTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>  Delete </FONT></SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>span</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>visually-hidden<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>span</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
</SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>button</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now when you click on any of the "Delete" buttons in the app, your browser console should log the ID of the related task.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>At this point, your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">Todo.jsx</CODE><SPAN>&nbsp;</SPAN>file should look like this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="sWlKDgA16MgU2HSwaY/kZWnwfea3ylQy/079Pv/Rq+0="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">Todo</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">props</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">return</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>
    <SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>li</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>todo stack-small<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>c-cb<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>input</SPAN>
          <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
          <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>checkbox<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
          <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">defaultChecked</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>completed<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
          <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onChange</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">toggleTaskCompleted</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
        <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>label</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>todo-label<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">htmlFor</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>          </FONT></SPAN><FONT class=extract><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>label</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>btn-group<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>button</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>button<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>btn<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>          Edit </FONT></SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>span</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>visually-hidden<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>span</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>button</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>button</SPAN>
          <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">type</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>button<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
          <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>btn btn__danger<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
          <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">onClick</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">deleteTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>          Delete </FONT></SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>span</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>visually-hidden<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>span</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>button</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>    </FONT></SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>li</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">export</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">default</SPAN> Todo<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
</FONT></CODE></PRE></DIV></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=deleting_tasks_from_state_and_ui>
<H2 id=deleting_tasks_from_state_and_ui style="BOX-SIZING: border-box; MARGIN-TOP: 2px; MARGIN-LEFT: 2px; MARGIN-RIGHT: 2px"><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#deleting_tasks_from_state_and_ui"><FONT class=extract>Deleting tasks from state and UI</FONT></A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Now that we know<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">deleteTask()</CODE><SPAN>&nbsp;</SPAN>is invoked correctly, we can call our<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">setTasks()</CODE><SPAN>&nbsp;</SPAN>hook in<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">deleteTask()</CODE><SPAN>&nbsp;</SPAN>to actually delete that task from the app's state as well as visually in the app UI. Since<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">setTasks()</CODE><SPAN>&nbsp;</SPAN>expects an array as an argument, we should provide it with a new array that copies the existing tasks,<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>excluding</EM><SPAN>&nbsp;</SPAN>the task whose ID matches the one passed into<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">deleteTask()</CODE>.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>This is a perfect opportunity to use<SPAN>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract>Array.prototype.filter()</FONT></CODE></A><FONT class=extract>. We can test each task, and exclude a task from the new array if its<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">id</CODE><SPAN>&nbsp;</SPAN>prop matches the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">id</CODE><SPAN>&nbsp;</SPAN>argument passed into<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">deleteTask()</CODE>.</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Update the<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">deleteTask()</CODE><SPAN>&nbsp;</SPAN>function inside your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App.jsx</CODE><SPAN>&nbsp;</SPAN>file as follows:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="R+6uSu3Mr45i4XDudrwio29dgR6tDARmXXa0N34oS2g="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">deleteTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">id</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> remainingTasks <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">filter</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">task</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> id <SPAN class="token operator" style="BOX-SIZING: border-box">!==</SPAN> task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setTasks</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>remainingTasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
</FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>Try your app out again. Now you should be able to delete a task from your app!</FONT></P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px"><FONT class=extract>At this point, your<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">App.jsx</CODE><SPAN>&nbsp;</SPAN>file should look like this:</FONT></P>
<DIV class=code-example style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); POSITION: relative; border-radius: var(--elem-radius); --code-action-color: var(--text-secondary)">
<DIV class=example-header style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; DISPLAY: flex; PADDING-RIGHT: 0px; gap: 1rem; align-items: baseline; border-top-left-radius: var(--elem-radius); border-top-right-radius: var(--elem-radius); flex-wrap: wrap"><SPAN class=language-name style="BOX-SIZING: border-box; TEXT-TRANSFORM: uppercase; MARGIN-RIGHT: auto"><FONT class=extract>jsx</FONT></SPAN><SPAN role=alert class="copy-icon-message visually-hidden" style="BOX-SIZING: border-box; OVERFLOW: hidden !important; BORDER-TOP: 0px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px !important; BORDER-RIGHT: 0px; WIDTH: 1px !important; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap !important; BORDER-BOTTOM: 0px; POSITION: absolute; COLOR: ; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: -1px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius); clip-path: inset(50%); opacity: 1"></SPAN></DIV><PRE class="brush: jsx notranslate" style="BOX-SIZING: border-box; BORDER-TOP: medium none; FONT-FAMILY: var(--font-code); BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 1px solid; PADDING-TOP: 1px; PADDING-LEFT: 1px; BORDER-LEFT: 1px solid; MARGIN: 0px 0px 2px; PADDING-RIGHT: 1px; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: break-word; border-bottom-right-radius: ; border-bottom-left-radius: ; border-image: initial" data-signature="MNLj2Csi2KkZLW/wBWyACB95BiPAPM4HriymD3wME8U="><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)"><FONT class=extract><SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> useState <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"react"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> nanoid <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"nanoid"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> Todo <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"./components/Todo"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> Form <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"./components/Form"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">import</SPAN> FilterButton <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">from</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"./components/FilterButton"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">App</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">props</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">addTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">name</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
    <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> newTask <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> <SPAN class="token literal-property property" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token template-string" style="BOX-SIZING: border-box"><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">todo-</SPAN><SPAN class="token interpolation" style="BOX-SIZING: border-box"><SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">${</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">nanoid</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> <SPAN class="token literal-property property" style="BOX-SIZING: border-box; COLOR: ">completed</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token boolean" style="BOX-SIZING: border-box; COLOR: ">false</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
    <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setTasks</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">[</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">...</SPAN>tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> newTask<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">]</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>

  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">toggleTaskCompleted</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">id</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
    <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> updatedTasks <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">map</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">task</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
      <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">// if this task has the same ID as the edited task</SPAN>
      <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">if</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>id <SPAN class="token operator" style="BOX-SIZING: border-box">===</SPAN> task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
        <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">// use object spread to make a new object</SPAN>
        <SPAN class="token comment" style="BOX-SIZING: border-box; COLOR: ">// whose `completed` prop has been inverted</SPAN>
        <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">return</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">...</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> <SPAN class="token literal-property property" style="BOX-SIZING: border-box; COLOR: ">completed</SPAN><SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">!</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>completed <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
      <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>
      <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">return</SPAN> task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
    <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
    <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setTasks</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>updatedTasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>

  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">function</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">deleteTask</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">id</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>
    <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> remainingTasks <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">filter</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">task</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> id <SPAN class="token operator" style="BOX-SIZING: border-box">!==</SPAN> task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
    <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">setTasks</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>remainingTasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>

  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">[</SPAN>tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">,</SPAN> setTasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">]</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">useState</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>props<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>tasks<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> taskList <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> tasks<SPAN class="token operator" style="BOX-SIZING: border-box">?.</SPAN><SPAN class="token function" style="BOX-SIZING: border-box; COLOR: ">map</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN><SPAN class="token parameter" style="BOX-SIZING: border-box">task</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">=&gt;</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>
    </FONT><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">Todo</SPAN></SPAN>
      <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
      <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">name</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>name<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
      <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">completed</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>completed<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
      <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">key</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>task<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>id<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
      <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">toggleTaskCompleted</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>toggleTaskCompleted<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
      <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">deleteTask</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>deleteTask<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN>
    <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>

  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> tasksNoun <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> taskList<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>length <SPAN class="token operator" style="BOX-SIZING: border-box">!==</SPAN> <SPAN class="token number" style="BOX-SIZING: border-box; COLOR: ">1</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">?</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"tasks"</SPAN> <SPAN class="token operator" style="BOX-SIZING: border-box">:</SPAN> <SPAN class="token string" style="BOX-SIZING: border-box; COLOR: ">"task"</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">const</SPAN> headingText <SPAN class="token operator" style="BOX-SIZING: border-box">=</SPAN> <SPAN class="token template-string" style="BOX-SIZING: border-box"><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN><SPAN class="token interpolation" style="BOX-SIZING: border-box"><SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">${</SPAN>taskList<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">.</SPAN>length<SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: "> </SPAN><SPAN class="token interpolation" style="BOX-SIZING: border-box"><SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">${</SPAN>tasksNoun<SPAN class="token interpolation-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN><SPAN class="token string" style="BOX-SIZING: border-box; COLOR: "> remaining</SPAN><SPAN class="token template-punctuation string" style="BOX-SIZING: border-box; COLOR: ">`</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>

  <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">return</SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">(</SPAN>
    <SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>todoapp stack-large<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>h1</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">TodoMatic</SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>h1</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">Form</SPAN></SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">addTask</SPAN><SPAN class="token script language-javascript" style="BOX-SIZING: border-box"><SPAN class="token script-punctuation punctuation" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>addTask<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>div</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>filters btn-group stack-exception<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">FilterButton</SPAN></SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">FilterButton</SPAN></SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN><SPAN class="token class-name" style="BOX-SIZING: border-box; COLOR: ">FilterButton</SPAN></SPAN> <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">/&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>h2</SPAN> <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">id</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>list-heading<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>headingText<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>h2</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;</SPAN>ul</SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">role</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>list<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">className</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>todo-list stack-large stack-exception<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN>
        <SPAN class="token attr-name" style="BOX-SIZING: border-box; COLOR: ">aria-labelledby</SPAN><SPAN class="token attr-value" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation attr-equals" style="BOX-SIZING: border-box; COLOR: ">=</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN>list-heading<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">"</SPAN></SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>        </FONT></SPAN><FONT class=extract><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">{</SPAN>taskList<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN></FONT><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>      </FONT></SPAN><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>ul</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></FONT></SPAN><SPAN class="token plain-text" style="BOX-SIZING: border-box">
<FONT class=extract>    </FONT></SPAN><FONT class=extract><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token tag" style="BOX-SIZING: border-box; COLOR: "><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&lt;/</SPAN>div</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">&gt;</SPAN></SPAN>
  <SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">)</SPAN><SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN>
<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">}</SPAN>

<SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">export</SPAN> <SPAN class="token keyword" style="BOX-SIZING: border-box; COLOR: ">default</SPAN> App<SPAN class="token punctuation" style="BOX-SIZING: border-box; COLOR: ">;</SPAN></FONT></CODE></PRE></DIV></DIV></SECTION>