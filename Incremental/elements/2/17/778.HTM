<b> : </b><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction#routing">Routing</A></H3>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">The most essential feature of the web is that it allows users to navigate from one page to another &#8211; it is, after all, a network of interlinked documents. When you follow a link on this very website, your browser communicates with a server and fetches new content to display for you. As it does so, the URL in your address bar changes. You can save this new URL and come back to the page later on, or share it with others so they can easily find the same page. Your browser remembers your navigation history and allows you to navigate back and forth, too. This is called<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box">server-side routing</STRONG>.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">Modern web applications typically do not fetch and render new HTML files &#8212; they load a single HTML shell, and continually update the DOM inside it (referred to as<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box">single page apps</STRONG>, or<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box">SPAs</STRONG>) without navigating users to new addresses on the web. Each new pseudo-webpage is usually called a<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>view</EM>, and by default, no routing is done.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">When an SPA is complex enough, and renders enough unique views, it's important to bring routing functionality into your application. People are used to being able to link to specific pages in an application, travel forward and backward in their navigation history, etc., and their experience suffers when these standard web features are broken. When routing is handled by a client application in this fashion, it is aptly called<SPAN>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box">client-side routing</STRONG>.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">It's<SPAN>&nbsp;</SPAN><EM style='BOX-SIZING: border-box; font-variation-settings: "slnt" -10'>possible</EM><SPAN>&nbsp;</SPAN>to make a router using the native capabilities of JavaScript and the browser, but popular, actively developed frameworks have companion libraries that make routing a more intuitive part of the development process.</P></DIV></SECTION><SECTION style='BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: Inter, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(27,27,27); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial' aria-labelledby=things_to_consider_when_using_frameworks>