<b> : </b><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; text-decoration-skip-ink: auto" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started#summary">Summary</A></H2>
<DIV class=section-content style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">This brings us to the end of our initial look at React, including how to install it locally, creating a starter app, and how the basics work. In the next article, we'll start building our first proper application &#8212; a todo list. Before we do that, however, let's recap some of the things we've learned.</P>
<P style="BOX-SIZING: border-box; MARGIN-TOP: 1px; MARGIN-LEFT: 1px; MARGIN-RIGHT: 1px">In React:</P>
<UL style="LIST-STYLE-TYPE: disc; BOX-SIZING: border-box; MARGIN-TOP: 1px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 2px; MARGIN-LEFT: 1px; PADDING-RIGHT: 0px; MARGIN-RIGHT: 1px">
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">Components can import modules they need and must export themselves at the bottom of their files.</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">Component functions are named with<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">PascalCase</CODE>.</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">You can render JavaScript expressions in JSX by putting them between curly braces, like<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">{so}</CODE>.</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">Some JSX attributes are different than HTML attributes so that they don't conflict with JavaScript reserved words. For example,<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">class</CODE><SPAN>&nbsp;</SPAN>in HTML translates to<SPAN>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-FAMILY: var(--font-code); BACKGROUND: none transparent scroll repeat 0% 0%; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: var(--elem-radius)">className</CODE><SPAN>&nbsp;</SPAN>in JSX.</LI>
<LI style="BOX-SIZING: border-box; MARGIN-TOP: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 0px">Props are written just like attributes inside component calls and are passed into components.</LI></UL></DIV></SECTION>