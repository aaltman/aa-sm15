<b> : </b>Implementation</H2>
<P style="BOX-SIZING: border-box; MARGIN: 0px 0px 10px">I programmed in JAVA for this project. I used JAVA's "<I style="BOX-SIZING: border-box">Thread</I><SPAN>&nbsp;</SPAN>to simulate concurrents' operations. And I used "<I style="BOX-SIZING: border-box">ReentrantLock</I>" lock class to implement EREW lock-based synchronization. For lock-free synchronization, I implemented the CAS process by using "<I style="BOX-SIZING: border-box">AtomicBoolean</I>" class, which provides the convenience for doing the CAS atomic operation. My lock-free implementation is based on the idea of Ma's Algorithm and pseudocode provided in Kim's paper. Finally, I modified the code of treeGUI from GitHub to realize a small JFrame visualization for displaying the red-black tree built by my algorithm. As the code limits, the visualization only works and layouts well for small data set, like trees with less than 20 nodes.</P></DIV>
<DIV class=row style="BOX-SIZING: border-box; MARGIN-LEFT: -15px; MARGIN-RIGHT: -15px">