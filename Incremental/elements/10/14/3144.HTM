<H3 style='FONT-SIZE: 16px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 1.1em; PADDING-LEFT: 0.75em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Constants class=mw-headline>Constants</SPAN></H3>
<TABLE class=t-dsc-begin style='FONT-SIZE: 12px; MAX-WIDTH: 60em; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; BORDER-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>
<TBODY>
<TR class=t-dsc-header>
<TD style="FONT-SIZE: 0.8em; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LINE-HEIGHT: 1em; PADDING-RIGHT: 0px" colSpan=2>
<DIV style="MARGIN-LEFT: 2em">Defined in header<SPAN>&nbsp;</SPAN><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'><A title=cpp/header/atomic style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/header/atomic">&lt;atomic&gt;</A></CODE></DIV></TD></TR>
<TR class=t-dsc-hitem>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WHITE-SPACE: nowrap; FONT-WEIGHT: bold; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.1em; PADDING-RIGHT: 0px">Name</TD>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WHITE-SPACE: nowrap; FONT-WEIGHT: bold; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.1em; PADDING-RIGHT: 0px">Explanation</TD></TR>
<TR class=t-dsc>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WIDTH: 154px; WHITE-SPACE: nowrap; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.2em; PADDING-RIGHT: 0px"><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'>memory_order_relaxed</CODE></TD>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WHITE-SPACE: normal; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.1em">Relaxed operation: there are no synchronization or ordering constraints imposed on other reads or writes, only this operation's atomicity is guaranteed (see<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/memory_order#Relaxed_ordering">Relaxed ordering</A><SPAN>&nbsp;</SPAN>below).</TD></TR>
<TR class=t-dsc>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WIDTH: 154px; WHITE-SPACE: nowrap; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.2em; PADDING-RIGHT: 0px"><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'>memory_order_consume</CODE></TD>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WHITE-SPACE: normal; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.1em">A load operation with this memory order performs a<SPAN>&nbsp;</SPAN><I>consume operation</I><SPAN>&nbsp;</SPAN>on the affected memory location: no reads or writes in the current thread dependent on the value currently loaded can be reordered before this load. Writes to data-dependent variables in other threads that release the same atomic variable are visible in the current thread. On most platforms, this affects compiler optimizations only (see<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Consume_ordering">Release-Consume ordering</A><SPAN>&nbsp;</SPAN>below).</TD></TR>
<TR class=t-dsc>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WIDTH: 154px; WHITE-SPACE: nowrap; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.2em; PADDING-RIGHT: 0px"><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'>memory_order_acquire</CODE></TD>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WHITE-SPACE: normal; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.1em">A load operation with this memory order performs the<SPAN>&nbsp;</SPAN><I>acquire operation</I><SPAN>&nbsp;</SPAN>on the affected memory location: no reads or writes in the current thread can be reordered before this load. All writes in other threads that release the same atomic variable are visible in the current thread (see<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Acquire_ordering">Release-Acquire ordering</A><SPAN>&nbsp;</SPAN>below).</TD></TR>
<TR class=t-dsc>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WIDTH: 154px; WHITE-SPACE: nowrap; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.2em; PADDING-RIGHT: 0px"><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'>memory_order_release</CODE></TD>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WHITE-SPACE: normal; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.1em">A store operation with this memory order performs the<SPAN>&nbsp;</SPAN><I>release operation</I>: no reads or writes in the current thread can be reordered after this store. All writes in the current thread are visible in other threads that acquire the same atomic variable (see<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Acquire_ordering">Release-Acquire ordering</A><SPAN>&nbsp;</SPAN>below) and writes that carry a dependency into the atomic variable become visible in other threads that consume the same atomic (see<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Consume_ordering">Release-Consume ordering</A><SPAN>&nbsp;</SPAN>below).</TD></TR>
<TR class=t-dsc>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WIDTH: 154px; WHITE-SPACE: nowrap; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.2em; PADDING-RIGHT: 0px"><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'>memory_order_acq_rel</CODE></TD>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WHITE-SPACE: normal; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.1em">A read-modify-write operation with this memory order is both an<SPAN>&nbsp;</SPAN><I>acquire operation</I><SPAN>&nbsp;</SPAN>and a<SPAN>&nbsp;</SPAN><I>release operation</I>. No memory reads or writes in the current thread can be reordered before the load, nor after the store. All writes in other threads that release the same atomic variable are visible before the modification and the modification is visible in other threads that acquire the same atomic variable.</TD></TR>
<TR class=t-dsc>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WIDTH: 154px; WHITE-SPACE: nowrap; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.2em; PADDING-RIGHT: 0px"><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'>memory_order_seq_cst</CODE></TD>
<TD style="BORDER-TOP: rgb(204,204,204) 1px solid; WHITE-SPACE: normal; PADDING-LEFT: 0.75em; LINE-HEIGHT: 1.1em">A load operation with this memory order performs an<SPAN>&nbsp;</SPAN><I>acquire operation</I>, a store performs a<SPAN>&nbsp;</SPAN><I>release operation</I>, and read-modify-write performs both an<SPAN>&nbsp;</SPAN><I>acquire operation</I><SPAN>&nbsp;</SPAN>and a<SPAN>&nbsp;</SPAN><I>release operation</I>, plus a single total order exists in which all threads observe all modifications in the same order (see<SPAN>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/memory_order#Sequentially-consistent_ordering">Sequentially-consistent ordering</A><SPAN>&nbsp;</SPAN>below).</TD></TR></TBODY></TABLE>
<H3 style='FONT-SIZE: 16px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 1.1em; PADDING-LEFT: 0.75em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Formal_description class=mw-headline>Formal description</SPAN></H3>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Inter-thread synchronization and memory ordering determine how<SPAN>&nbsp;</SPAN><I>evaluations</I><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><I>side effects</I><SPAN>&nbsp;</SPAN>of expressions are ordered between different threads of execution. They are defined in the following terms:</P>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Sequenced-before class=mw-headline>Sequenced-before</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Within the same thread, evaluation A may be<SPAN>&nbsp;</SPAN><I>sequenced-before</I><SPAN>&nbsp;</SPAN>evaluation B, as described in<SPAN>&nbsp;</SPAN><A title="cpp/language/eval order" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/language/eval_order">evaluation order</A>.</P>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Carries_dependency class=mw-headline>Carries dependency</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Within the same thread, evaluation A that is<SPAN>&nbsp;</SPAN><I>sequenced-before</I><SPAN>&nbsp;</SPAN>evaluation B may also carry a dependency into B (that is, B depends on A), if any of the following is true:</P>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN>The value of A is used as an operand of B,<SPAN>&nbsp;</SPAN><B style="FONT-WEIGHT: bold; TEXT-INDENT: 0em">except</B></DIV>
<DIV class=t-li2 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 5em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">a)</SPAN><SPAN>&nbsp;</SPAN>if B is a call to<SPAN>&nbsp;</SPAN><SPAN class=t-lc style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; TEXT-INDENT: 0em'><A title="cpp/atomic/kill dependency" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/kill_dependency">std::kill_dependency</A></SPAN>,</DIV>
<DIV class=t-li2 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 5em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">b)</SPAN><SPAN>&nbsp;</SPAN>if A is the left operand of the built-in<SPAN>&nbsp;</SPAN><SPAN class=t-c style="BORDER-TOP: rgb(214,214,214) 1px solid; BORDER-RIGHT: rgb(214,214,214) 1px solid; BORDER-BOTTOM: rgb(214,214,214) 1px solid; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 2px; BORDER-LEFT: rgb(214,214,214) 1px solid; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 2px; TEXT-INDENT: 0em; border-radius: 3px"><SPAN class="mw-geshi cpp source-cpp" style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap; LINE-HEIGHT: normal"><SPAN class=sy3 style="COLOR: rgb(0,0,64)">&amp;&amp;</SPAN></SPAN></SPAN>,<SPAN>&nbsp;</SPAN><SPAN class=t-c style="BORDER-TOP: rgb(214,214,214) 1px solid; BORDER-RIGHT: rgb(214,214,214) 1px solid; BORDER-BOTTOM: rgb(214,214,214) 1px solid; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 2px; BORDER-LEFT: rgb(214,214,214) 1px solid; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 2px; TEXT-INDENT: 0em; border-radius: 3px"><SPAN class="mw-geshi cpp source-cpp" style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap; LINE-HEIGHT: normal"><SPAN class=sy3 style="COLOR: rgb(0,0,64)">||</SPAN></SPAN></SPAN>,<SPAN>&nbsp;</SPAN><SPAN class=t-c style="BORDER-TOP: rgb(214,214,214) 1px solid; BORDER-RIGHT: rgb(214,214,214) 1px solid; BORDER-BOTTOM: rgb(214,214,214) 1px solid; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 2px; BORDER-LEFT: rgb(214,214,214) 1px solid; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 2px; TEXT-INDENT: 0em; border-radius: 3px"><SPAN class="mw-geshi cpp source-cpp" style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap; LINE-HEIGHT: normal"><SPAN class=sy4 style="COLOR: rgb(0,128,128)">?:</SPAN></SPAN></SPAN>, or<SPAN>&nbsp;</SPAN><SPAN class=t-c style="BORDER-TOP: rgb(214,214,214) 1px solid; BORDER-RIGHT: rgb(214,214,214) 1px solid; BORDER-BOTTOM: rgb(214,214,214) 1px solid; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 2px; BORDER-LEFT: rgb(214,214,214) 1px solid; MARGIN: 0px 2px; DISPLAY: inline-block; PADDING-RIGHT: 2px; TEXT-INDENT: 0em; border-radius: 3px"><SPAN class="mw-geshi cpp source-cpp" style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap; LINE-HEIGHT: normal">,</SPAN></SPAN><SPAN>&nbsp;</SPAN>operators.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN>A writes to a scalar object M, B reads from M.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">3)</SPAN><SPAN>&nbsp;</SPAN>A carries dependency into another evaluation X, and X carries dependency into B.</DIV>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Modification_order class=mw-headline>Modification order</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>All modifications to any particular atomic variable occur in a total order that is specific to this one atomic variable.</P>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>The following four requirements are guaranteed for all atomic operations:</P>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN><B style="FONT-WEIGHT: bold; TEXT-INDENT: 0em">Write-write coherence</B>: If evaluation A that modifies some atomic M (a write)<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">happens-before</I><SPAN>&nbsp;</SPAN>evaluation B that modifies M, then A appears earlier than B in the<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">modification order</I><SPAN>&nbsp;</SPAN>of M.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN><B style="FONT-WEIGHT: bold; TEXT-INDENT: 0em">Read-read coherence</B>: if a value computation A of some atomic M (a read)<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">happens-before</I><SPAN>&nbsp;</SPAN>a value computation B on M, and if the value of A comes from a write X on M, then the value of B is either the value stored by X, or the value stored by a side effect Y on M that appears later than X in the<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">modification order</I><SPAN>&nbsp;</SPAN>of M.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">3)</SPAN><SPAN>&nbsp;</SPAN><B style="FONT-WEIGHT: bold; TEXT-INDENT: 0em">Read-write coherence</B>: if a value computation A of some atomic M (a read)<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">happens-before</I><SPAN>&nbsp;</SPAN>an operation B on M (a write), then the value of A comes from a side-effect (a write) X that appears earlier than B in the<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">modification order</I><SPAN>&nbsp;</SPAN>of M.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">4)</SPAN><SPAN>&nbsp;</SPAN><B style="FONT-WEIGHT: bold; TEXT-INDENT: 0em">Write-read coherence</B>: if a side effect (a write) X on an atomic object M<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">happens-before</I><SPAN>&nbsp;</SPAN>a value computation (a read) B of M, then the evaluation B shall take its value from X or from a side effect Y that follows X in the modification order of M.</DIV>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Release_sequence class=mw-headline>Release sequence</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>After a<SPAN>&nbsp;</SPAN><I>release operation</I><SPAN>&nbsp;</SPAN>A is performed on an atomic object M, the longest continuous subsequence of the modification order of M that consists of:</P>
<TABLE class=t-rev-begin style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-COLLAPSE: collapse; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; BORDER-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>
<TBODY>
<TR class="t-rev t-until-cxx20">
<TD style="BORDER-TOP: silver 1px solid; BORDER-RIGHT: medium none; BORDER-BOTTOM: silver 1px solid; PADDING-BOTTOM: 0.3em; PADDING-TOP: 0.3em; PADDING-LEFT: 0.2em; BORDER-LEFT: silver 1px solid; PADDING-RIGHT: 0.2em; border-image: initial">
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN>Writes performed by the same thread that performed A.</DIV></TD>
<TD style="BORDER-TOP: silver 1px solid; BORDER-RIGHT: silver 1px solid; WHITE-SPACE: nowrap; BORDER-BOTTOM: silver 1px solid; PADDING-BOTTOM: 0.3em; PADDING-TOP: 0.3em; PADDING-LEFT: 0.2em; BORDER-LEFT: medium none; PADDING-RIGHT: 0.2em; border-image: initial"><SPAN class="t-mark-rev t-until-cxx20" style="FONT-SIZE: 0.8em; COLOR: rgb(0,128,0)">(until C++20)</SPAN></TD></TR></TBODY></TABLE>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN>Atomic read-modify-write operations made to M by any thread.</DIV>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Is known as<SPAN>&nbsp;</SPAN><I>release sequence headed by A</I>.</P>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Synchronizes_with class=mw-headline>Synchronizes with</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>If an atomic store in thread A is a<SPAN>&nbsp;</SPAN><I>release operation</I>, an atomic load in thread B from the same variable is an<SPAN>&nbsp;</SPAN><I>acquire operation</I>, and the load in thread B reads a value written by the store in thread A, then the store in thread A<SPAN>&nbsp;</SPAN><I>synchronizes-with</I><SPAN>&nbsp;</SPAN>the load in thread B.</P>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Also, some library calls may be defined to<SPAN>&nbsp;</SPAN><I>synchronize-with</I><SPAN>&nbsp;</SPAN>other library calls on other threads.</P>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Dependency-ordered_before class=mw-headline>Dependency-ordered before</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Between threads, evaluation A is<SPAN>&nbsp;</SPAN><I>dependency-ordered before</I><SPAN>&nbsp;</SPAN>evaluation B if any of the following is true:</P>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN>A performs a<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">release operation</I><SPAN>&nbsp;</SPAN>on some atomic M, and, in a different thread, B performs a<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">consume operation</I><SPAN>&nbsp;</SPAN>on the same atomic M, and B reads a value written<SPAN>&nbsp;</SPAN><SPAN class="t-rev-inl t-until-cxx20" style="BORDER-TOP: silver 1px solid; BORDER-RIGHT: silver 1px solid; BORDER-BOTTOM: silver 1px solid; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: silver 1px solid; MARGIN: 0px; PADDING-RIGHT: 0px; TEXT-INDENT: 0em"><SPAN style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px">by any part of the release sequence headed</SPAN><SPAN style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px"><SPAN class="t-mark-rev t-until-cxx20" style="FONT-SIZE: 0.8em; COLOR: rgb(0,128,0)">(until C++20)</SPAN></SPAN></SPAN><SPAN>&nbsp;</SPAN>by A.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN>A is dependency-ordered before X and X carries a dependency into B.</DIV>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Inter-thread_happens-before class=mw-headline>Inter-thread happens-before</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Between threads, evaluation A<SPAN>&nbsp;</SPAN><I>inter-thread happens before</I><SPAN>&nbsp;</SPAN>evaluation B if any of the following is true:</P>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">synchronizes-with</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN>A is<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">dependency-ordered before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">3)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">synchronizes-with</I><SPAN>&nbsp;</SPAN>some evaluation X, and X is<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">sequenced-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">4)</SPAN><SPAN>&nbsp;</SPAN>A is<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">sequenced-before</I><SPAN>&nbsp;</SPAN>some evaluation X, and X<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">inter-thread happens-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">5)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">inter-thread happens-before</I><SPAN>&nbsp;</SPAN>some evaluation X, and X<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">inter-thread happens-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Happens-before class=mw-headline>Happens-before</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Regardless of threads, evaluation A<SPAN>&nbsp;</SPAN><I>happens-before</I><SPAN>&nbsp;</SPAN>evaluation B if any of the following is true:</P>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN>A is<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">sequenced-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">inter-thread happens before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>The implementation is required to ensure that the<SPAN>&nbsp;</SPAN><I>happens-before</I><SPAN>&nbsp;</SPAN>relation is acyclic, by introducing additional synchronization if necessary (it can only be necessary if a consume operation is involved, see<SPAN>&nbsp;</SPAN><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: url(//upload.cppreference.com/mwiki/images/2/23/Icons-mini-file_acrobat.gif) no-repeat right center; COLOR: rgb(51,102,187); PADDING-RIGHT: 18px" href="https://www.cl.cam.ac.uk/~pes20/cpp/popl085ap-sewell.pdf" rel=nofollow>Batty et al</A>).</P>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>If one evaluation modifies a memory location, and the other reads or modifies the same memory location, and if at least one of the evaluations is not an atomic operation, the behavior of the program is undefined (the program has a<SPAN>&nbsp;</SPAN><A title="cpp/language/memory model" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/language/memory_model">data race</A>) unless there exists a<SPAN>&nbsp;</SPAN><I>happens-before</I><SPAN>&nbsp;</SPAN>relationship between these two evaluations.</P>
<TABLE class=t-rev-begin style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-COLLAPSE: collapse; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; BORDER-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>
<TBODY>
<TR class="t-rev t-since-cxx20">
<TD style="BORDER-TOP: silver 1px solid; BORDER-RIGHT: medium none; BORDER-BOTTOM: silver 1px solid; PADDING-BOTTOM: 0.3em; PADDING-TOP: 0.3em; PADDING-LEFT: 0.2em; BORDER-LEFT: silver 1px solid; PADDING-RIGHT: 0.2em; border-image: initial">
<H4 style="FONT-SIZE: 14px; OVERFLOW: hidden; WIDTH: auto; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: medium none; FONT-WEIGHT: bold; COLOR: black; PADDING-BOTTOM: 0.17em; PADDING-TOP: 0.5em; MARGIN: 0px 0px 0.3em"><SPAN id=Simply_happens-before class=mw-headline>Simply happens-before</SPAN></H4>
<P style="MARGIN: 0.4em 0px 0.5em; LINE-HEIGHT: 1.2em">Regardless of threads, evaluation A<SPAN>&nbsp;</SPAN><I>simply happens-before</I><SPAN>&nbsp;</SPAN>evaluation B if any of the following is true:</P>
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN>A is<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">sequenced-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">synchronizes-with</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">3)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">simply happens-before</I><SPAN>&nbsp;</SPAN>X, and X<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">simply happens-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<P style="MARGIN: 0.4em 0px 0em; LINE-HEIGHT: 1.2em">Note: without consume operations,<SPAN>&nbsp;</SPAN><I>simply happens-before</I><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><I>happens-before</I><SPAN>&nbsp;</SPAN>relations are the same.</P></TD>
<TD style="BORDER-TOP: silver 1px solid; BORDER-RIGHT: silver 1px solid; WHITE-SPACE: nowrap; BORDER-BOTTOM: silver 1px solid; PADDING-BOTTOM: 0.3em; PADDING-TOP: 0.3em; PADDING-LEFT: 0.2em; BORDER-LEFT: medium none; PADDING-RIGHT: 0.2em; border-image: initial"><SPAN class="t-mark-rev t-since-cxx20" style="FONT-SIZE: 0.8em; COLOR: rgb(0,128,0)">(since C++20)</SPAN></TD></TR></TBODY></TABLE>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Strongly_happens-before class=mw-headline>Strongly happens-before</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Regardless of threads, evaluation A<SPAN>&nbsp;</SPAN><I>strongly happens-before</I><SPAN>&nbsp;</SPAN>evaluation B if any of the following is true:</P>
<TABLE class=t-rev-begin style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-COLLAPSE: collapse; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; BORDER-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>
<TBODY>
<TR class="t-rev t-until-cxx20">
<TD style="BORDER-TOP: silver 1px solid; BORDER-RIGHT: medium none; BORDER-BOTTOM: silver 1px solid; PADDING-BOTTOM: 0.3em; PADDING-TOP: 0.3em; PADDING-LEFT: 0.2em; BORDER-LEFT: silver 1px solid; PADDING-RIGHT: 0.2em; border-image: initial">
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN>A is<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">sequenced-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">synchronizes-with</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">3)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">strongly happens-before</I><SPAN>&nbsp;</SPAN>X, and X<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">strongly happens-before</I><SPAN>&nbsp;</SPAN>B.</DIV></TD>
<TD style="BORDER-TOP: silver 1px solid; BORDER-RIGHT: silver 1px solid; WHITE-SPACE: nowrap; BORDER-BOTTOM: silver 1px solid; PADDING-BOTTOM: 0.3em; PADDING-TOP: 0.3em; PADDING-LEFT: 0.2em; BORDER-LEFT: medium none; PADDING-RIGHT: 0.2em; border-image: initial"><SPAN class="t-mark-rev t-until-cxx20" style="FONT-SIZE: 0.8em; COLOR: rgb(0,128,0)">(until C++20)</SPAN></TD></TR>
<TR class="t-rev t-since-cxx20">
<TD style="BORDER-TOP: silver 1px solid; BORDER-RIGHT: medium none; BORDER-BOTTOM: silver 1px solid; PADDING-BOTTOM: 0.3em; PADDING-TOP: 0.3em; PADDING-LEFT: 0.2em; BORDER-LEFT: silver 1px solid; PADDING-RIGHT: 0.2em; border-image: initial">
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN>A is<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">sequenced-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">synchronizes with</I><SPAN>&nbsp;</SPAN>B, and both A and B are sequentially consistent atomic operations.</DIV>
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">3)</SPAN><SPAN>&nbsp;</SPAN>A is<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">sequenced-before</I><SPAN>&nbsp;</SPAN>X, X<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">simply happens-before</I><SPAN>&nbsp;</SPAN>Y, and Y is<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">sequenced-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style="PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; PADDING-RIGHT: 0px; TEXT-INDENT: -5em"><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">4)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">strongly happens-before</I><SPAN>&nbsp;</SPAN>X, and X<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">strongly happens-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<P style="MARGIN: 0.4em 0px 0.5em; LINE-HEIGHT: 1.2em">Note: informally, if A<SPAN>&nbsp;</SPAN><I>strongly happens-before</I><SPAN>&nbsp;</SPAN>B, then A appears to be evaluated before B in all contexts.</P>
<P style="MARGIN: 0.4em 0px 0em; LINE-HEIGHT: 1.2em">Note:<SPAN>&nbsp;</SPAN><I>strongly happens-before</I><SPAN>&nbsp;</SPAN>excludes consume operations.</P></TD>
<TD style="BORDER-TOP: silver 1px solid; BORDER-RIGHT: silver 1px solid; WHITE-SPACE: nowrap; BORDER-BOTTOM: silver 1px solid; PADDING-BOTTOM: 0.3em; PADDING-TOP: 0.3em; PADDING-LEFT: 0.2em; BORDER-LEFT: medium none; PADDING-RIGHT: 0.2em; border-image: initial"><SPAN class="t-mark-rev t-since-cxx20" style="FONT-SIZE: 0.8em; COLOR: rgb(0,128,0)">(since C++20)</SPAN></TD></TR></TBODY></TABLE>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Visible_side-effects class=mw-headline>Visible side-effects</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>The side-effect A on a scalar M (a write) is<SPAN>&nbsp;</SPAN><I>visible</I><SPAN>&nbsp;</SPAN>with respect to value computation B on M (a read) if both of the following are true:</P>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">1)</SPAN><SPAN>&nbsp;</SPAN>A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">happens-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<DIV class=t-li1 style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.2em; FONT-STYLE: normal; PADDING-TOP: 0.2em; PADDING-LEFT: 3em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: -5em; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN class=t-li style="WIDTH: 5em; TEXT-ALIGN: right; DISPLAY: inline-block; TEXT-INDENT: 0em">2)</SPAN><SPAN>&nbsp;</SPAN>There is no other side effect X to M where A<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">happens-before</I><SPAN>&nbsp;</SPAN>X and X<SPAN>&nbsp;</SPAN><I style="TEXT-INDENT: 0em">happens-before</I><SPAN>&nbsp;</SPAN>B.</DIV>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>If side-effect A is visible with respect to the value computation B, then the longest contiguous subset of the side-effects to M, in<SPAN>&nbsp;</SPAN><I>modification order</I>, where B does not<SPAN>&nbsp;</SPAN><I>happen-before</I><SPAN>&nbsp;</SPAN>it is known as the<SPAN>&nbsp;</SPAN><I>visible sequence of side-effects</I><SPAN>&nbsp;</SPAN>(the value of M, determined by B, will be the value stored by one of these side effects).</P>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Note: inter-thread synchronization boils down to preventing data races (by establishing happens-before relationships) and defining which side effects become visible under what conditions.</P>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Consume_operation class=mw-headline>Consume operation</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Atomic load with<SPAN>&nbsp;</SPAN><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'>memory_order_consume</CODE><SPAN>&nbsp;</SPAN>or stronger is a consume operation. Note that<SPAN>&nbsp;</SPAN><SPAN class=t-lc style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important'><A title="cpp/atomic/atomic thread fence" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/atomic_thread_fence">std::atomic_thread_fence</A></SPAN><SPAN>&nbsp;</SPAN>imposes stronger synchronization requirements than a consume operation.</P>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Acquire_operation class=mw-headline>Acquire operation</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Atomic load with<SPAN>&nbsp;</SPAN><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'>memory_order_acquire</CODE><SPAN>&nbsp;</SPAN>or stronger is an acquire operation. The lock() operation on a<SPAN>&nbsp;</SPAN><A title="cpp/named req/Mutex" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/named_req/Mutex"><SPAN style='FONT-FAMILY: Georgia, "DejaVu Serif", serif; FONT-STYLE: italic'>Mutex</SPAN></A><SPAN>&nbsp;</SPAN>is also an acquire operation. Note that<SPAN>&nbsp;</SPAN><SPAN class=t-lc style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important'><A title="cpp/atomic/atomic thread fence" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/atomic_thread_fence">std::atomic_thread_fence</A></SPAN><SPAN>&nbsp;</SPAN>imposes stronger synchronization requirements than an acquire operation.</P>
<H4 style='FONT-SIZE: 14px; OVERFLOW: hidden; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WIDTH: auto; BACKGROUND: rgb(255,255,255); WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0px 0px 0.3em; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><SPAN id=Release_operation class=mw-headline>Release operation</SPAN></H4>
<P style='FONT-SIZE: 12px; FONT-FAMILY: DejaVuSans, "DejaVu Sans", arial, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.4em 0px 0.5em; LETTER-SPACING: normal; LINE-HEIGHT: 1.2em; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: no-common-ligatures; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'>Atomic store with<SPAN>&nbsp;</SPAN><CODE style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important; BACKGROUND-COLOR: transparent'>memory_order_release</CODE><SPAN>&nbsp;</SPAN>or stronger is a release operation. The unlock() operation on a<SPAN>&nbsp;</SPAN><A title="cpp/named req/Mutex" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/named_req/Mutex"><SPAN style='FONT-FAMILY: Georgia, "DejaVu Serif", serif; FONT-STYLE: italic'>Mutex</SPAN></A><SPAN>&nbsp;</SPAN>is also a release operation. Note that<SPAN>&nbsp;</SPAN><SPAN class=t-lc style='FONT-FAMILY: DejaVuSansMono, "DejaVu Sans Mono", courier, monospace !important'><A title="cpp/atomic/atomic thread fence" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)" href="https://en.cppreference.com/w/cpp/atomic/atomic_thread_fence">std::atomic_thread_fence</A></SPAN><SPAN>&nbsp;</SPAN>imposes stronger synchronization requirements than a release operation.