<b> : </b><A name="1 Introduction"></A><A name="1 Introduction1"></A>Introduction</H1></LI></OL>
<P class=western style="MARGIN-TOP: 0.14in; LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in">According<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>CAP<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>theorem,<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>consistency,<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>high<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>availability,<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>partition<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>tolerance<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>are<SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>the three axes of any distributed database management system that at most two of them<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>can be fulfilled.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>The systems with the primary goal of scalability usually provide high<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>availability and partition tolerance.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Therefore, they have to use various approaches to<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>managing the replicas, and also be prepared for different partitioning scenarios. Horizontal<SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>partitioning in server clusters is one of the cost-effective ways for providing scalability. By<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>horizontal partitioning, each cluster manages a part of data with its own database system.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>In such a system, manual processes are dedicated to maintenance and load balancing<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>tasks; but recently, new architectures emerged for automatic horizontal partitioning and<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>load balancing <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark20"><FONT color=#000080>[8,</FONT></A> <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark24"><FONT color=#000080>12,</FONT></A> <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark27"><FONT color=#000080>15,</FONT></A> <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark30"><FONT color=#000080>18]</FONT></A> that are mostly based on hash keys.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>On the other hand,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>accessibility<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>is<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>second<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>challenging<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>issue,<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>which<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>is<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>almost<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>achieved<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>by<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>replication.</P>
<P class=western style="LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in; TEXT-INDENT: 0.23in">The simplest solution for replication is a master-slave relationship in pairs of nodes. As<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>a matter of fact, many database systems implement the horizontal partitioning by master-<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>slave replication. But, this solution is accompanied with some limitations. For instance, if<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>one of the nodes fails to continue the execution, the other one can still do the tasks, but in<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>the case of existing, a sequence of failures this system will be in trouble. Another solution<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>is tripartite replication that is more reliable and facilitates the management of problematic<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>situations.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Also, it provides the offline update of replica, while two other ones are online <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark20"><FONT color=#000080>[8].</FONT></A><SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Managing the sequence of failures is more convoluted in this solution.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>So, many efforts<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>aimed<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>at<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>simplifying<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>solving<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>this<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>problem<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN><A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark37"><FONT color=#000080>[25].</FONT></A><SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>Experiments<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>disclosed<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>that<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>best<SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>way<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>for<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>managing<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>replicas<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>that<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>are<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>more<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>than<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>three<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>in<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>numbers<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>is<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>utilizing<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>consensus</P>
<P class=western style="MARGIN-TOP: 0.02in; PAGE-BREAK-BEFORE: always; LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in">algorithms<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN><A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark70"><FONT color=#000080>[58].</FONT></A><SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Peer-to-peer<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>(P2P)<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>database<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>systems<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>are<SPAN style="LETTER-SPACING: 2.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2.5pt"> </SPAN>most<SPAN style="LETTER-SPACING: 2.5pt"> </SPAN>prominent<SPAN style="LETTER-SPACING: 2.5pt"> </SPAN>example<SPAN style="LETTER-SPACING: 2.5pt"> </SPAN>of<SPAN style="LETTER-SPACING: -2.4pt"> </SPAN>this<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>type<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>systems.</P>
<P class=western style="LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in; TEXT-INDENT: 0.23in">A P2P database is based on a network of heterogeneous interconnected nodes for sharing<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>data via the files, in the role of both supplier and consumer. In this structure, the function<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>of all the nodes is the same, and all the nodes are autonomous. Theoretically, there is no<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>central coordinator in the system, but in practice, it is not materialized yet. In fact, peers<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>construct an overlapping network and form a topology for connections that is able to put<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>nodes<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>in<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>touch<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>after<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>joining<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>and<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>keep<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>links<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>for<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>rejoins<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN><A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark66"><FONT color=#000080>[54].</FONT></A></P>
<P class=western style="LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in; TEXT-INDENT: 0.23in">Cassandra is one of the outstanding products that is based on the hash table and has a<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>P2P structure <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark24"><FONT color=#000080>[12].</FONT></A><SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>It is an open source distributed database management system that is<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>developed based on Amazon Dynamo and Big table data model. Some of the key features<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>are<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>distribution,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>decentralization,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>scalability,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>high<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>accessibility,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>fault<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>tolerance,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>tunable<SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>stability and column-oriented model.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Cassandra is an appropriate tool for managing the<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>vast amount of data on the structure of an intricate network. Some other features such as<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>compatible hash/fragmentation, a rumor-based algorithm for controlling the membership,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>replication,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>anarchy<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>algorithm,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>failure<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>detection<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>made<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Cassandra<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>be<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>a<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>distributed<SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>storing<SPAN style="LETTER-SPACING: 1pt"> </SPAN>system,<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>which<SPAN style="LETTER-SPACING: 1pt"> </SPAN>is<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>fault<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>tolerant<SPAN style="LETTER-SPACING: 1pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>symmetric<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>total<SPAN style="LETTER-SPACING: 1pt"> </SPAN>compatibility.</P>
<P class=western style="LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in; TEXT-INDENT: 0.23in">Ultimate compatibility that is provided by Cassandra causes some unexpected prob-<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>lems. For example, when different data are written in Cassandra, multiple copies in differ-<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>ent timestamps are created. The major issue emerges when some of the nodes choose an<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>identical item from the queue for running. So, one of them takes the job and omits it from<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>the queue, while for the other nodes it might be thought that the job is still in the queue,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>and they try to run it. This situation is called workers collision <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark20"><FONT color=#000080>[8].</FONT></A> Consensus algorithms,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>such as Paxos <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark44"><FONT color=#000080>[32], </FONT></A>are proposed to solve this problem. They let the applicant nodes to be<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>noticed<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>about<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>preceding<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>candidates<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>that<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>have<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>priority<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>for<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>popping<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>jobs<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN><A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark20"><FONT color=#000080>[8].</FONT></A></P>
<P class=western style="LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in; TEXT-INDENT: 0.23in">Paxos<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>group<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>protocols<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>for<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>performing<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>consensus<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>network<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>unreliable<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>nodes.<SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>The main limitation<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>of Paxos is complexity in processing and difficulty in understanding<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>the details that entail inappropriate architecture of a system in practice.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Proposed so-<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>lutions were directed to emerge Raft algorithm <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark60"><FONT color=#000080>[48],</FONT></A> which was simpler than Paxos <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark27"><FONT color=#000080>[15].</FONT></A><SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Raft utilized concepts like leader election, log, and security to make the consensus more<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>comprehensible.<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>Raft<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>equivalent<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>Paxos<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>in<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>fault-tolerance<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>performance,<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>but<SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>it separates the consensus into relatively independent sub-problems, and clearly addresses<SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>all<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>essential<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>pieces<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>for<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>real-world<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>implementation<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>of<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>system.</P>
<P class=western style="LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in; TEXT-INDENT: 0.23in">Raft starts the consensus with selecting a leader and giving the authority of managing<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>the logs to it.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Raft provides the fault-tolerance when the leader takes the logs from the<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>servers and gives it to others to let them know about the secure time of receiving logs.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Previous<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>experiments<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>indicated<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>that<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>Paxos<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>has<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>more<SPAN style="LETTER-SPACING: 1pt"> </SPAN>latency<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>in<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>reading<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1pt"> </SPAN>writing.</P>
<P class=western style="LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in; TEXT-INDENT: 0.23in">In this paper, we will briefly show the similarities and differences between Paxos and<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Raft.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Firstly, we will describe what consensus algorithms problem is.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Secondly, we will<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>describe<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>other<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>Consensus<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>algorithms<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>and<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>protocols.<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>We<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>will<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>describe<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>how<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>leaders<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>are<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>elected<SPAN style="LETTER-SPACING: -2.4pt"> </SPAN>in Paxos and Raft algorithms Finally, the goal of our experiment is to find a solution for<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>collision problem in distributed queue for Cassandra database system; because it has a<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>positive correlation with the efficiency of high throughput capabilities and reducing the<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>redundancy<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>P2P<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>storage<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>system.<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>Due<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>it,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>some<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>well-known<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>consensus<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>algorithms<SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>are surveyed involving:<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Paxos, Viewstamped Replication (VR), Zab, Chandra-Toueg, and<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>Raft.</P>
<P class=western style="LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in; TEXT-INDENT: 0.23in">Studying these algorithms entails focusing on Paxos and proposing the usage of Raft<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>solution<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>in<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>Cassandra,<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>manage<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>replicas<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>in<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>a<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>more<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>optimized<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>manner<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>decrease</P>
<P class=western style="MARGIN-TOP: 0.02in; PAGE-BREAK-BEFORE: always; MARGIN-LEFT: 0.32in; TEXT-INDENT: -0.24in">the<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>read/write<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>request<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>latency<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>for<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>achieving<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>better<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>performance<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>and<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>fairer<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>load<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>balancing.</P>
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.27in; TEXT-INDENT: 0.23in">In<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>rest<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>this<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>paper,<SPAN style="LETTER-SPACING: 2.4pt"> </SPAN>we<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>first<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>define<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>consensus<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>problem,<SPAN style="LETTER-SPACING: 2.4pt"> </SPAN>then<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>in<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>Section<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN><A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark0"><FONT color=#000080>3</FONT></A><SPAN style="LETTER-SPACING: -2.5pt"> </SPAN>an inspection of previous work is presented.<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>This claim is underpinned in Section <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark3"><FONT color=#000080>4</FONT></A> by<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>providing the results of simulation and different assessments. Finally, in Section <A href="file:///C:/SuperMemo/systems/Incremental/temp/HTMLFile.htm#_bookmark12"><FONT color=#000080>5</FONT></A> we get<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>into<SPAN style="LETTER-SPACING: 1pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1pt"> </SPAN>conclusions.</P>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 0in" align=left><BR></P>
<OL start=2>
<LI>