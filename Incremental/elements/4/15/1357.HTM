<b> : </b>Nearest neighbour search</H3><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Nearest neighbour search" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=K-d_tree&amp;action=edit&amp;section=7"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></DIV><FIGURE style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BORDER-TOP-COLOR: ; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-COLLAPSE: collapse; MIN-WIDTH: 100px; BORDER-BOTTOM: 0px; TEXT-TRANSFORM: none; FLOAT: right; BORDER-LEFT-COLOR: ; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; TEXT-ALIGN: center; CLEAR: right; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1.3em 1.4em; DISPLAY: table; BORDER-RIGHT-COLOR: ; LETTER-SPACING: normal; LINE-HEIGHT: 0; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; border-image-source: ; border-image-slice: ; border-image-width: ; border-image-outset: ; border-image-repeat: " typeof="mw:File/Thumb"><SPAN><SPAN class="mw-tmh-player video" style="POSITION: relative; DISPLAY: inline-block; LINE-HEIGHT: 0"><VIDEO tabIndex=-1 disabled id=mwe_player_0_placeholder class=mw-file-element style="MAX-WIDTH: 100%; BORDER-TOP: 1px solid; HEIGHT: auto; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; MARGIN: 3px; aspect-ratio: 436 / 245" playsinline="" resource="/wiki/File:Kdtreeogg.ogv" data-mwprovider="wikimediacommons" data-mwtitle="Kdtreeogg.ogv" data-durationhint="134" height="245" width="436" data-mw-tmh="" preload="none" poster="https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Kdtreeogg.ogv/436px--Kdtreeogg.ogv.jpg"></VIDEO><A role=button title="Play video" class=mw-tmh-play style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; POSITION: absolute; COLOR: ; DISPLAY: block; border-radius: 2px; overflow-wrap: break-word; inset: 0px" href="https://en.wikipedia.org/wiki/File:Kdtreeogg.ogv"><SPAN class="mw-tmh-play-icon notheme" style="WIDTH: auto; BACKGROUND: url(data:image/svg+xml,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2220%22 height=%2220%22 viewBox=%220 0 20 20%22%3E %3Ctitle%3Eplay%3C/title%3E %3Cpath fill=%22%23fff%22 d=%22M4.55 19A1 1 0 0 1 3 18.13V1.87A1 1 0 0 1 4.55 1l12.2 8.13a1 1 0 0 1 0 1.7z%22/%3E %3C/svg%3E) no-repeat center center; POSITION: absolute; LEFT: 221px; MARGIN: auto; DISPLAY: block; TOP: 126px; border-radius: 50%; --color-base: #202122; --color-base--hover: #404244; --color-emphasized: #000; --color-subtle: #54595d; --color-placeholder: #72777d; --color-disabled: #72777d; --color-inverted: #fff; --color-inverted-fixed: #fff; --color-progressive: #36c; --color-progressive--hover: #447ff5; --color-progressive--active: #2a4b8d; --color-progressive--focus: #36c; --color-destructive: #d73333; --color-destructive--hover: #ff4242; --color-destructive--active: #b32424; --color-destructive--focus: #36c; --color-visited: #6b4ba1; --color-destructive--visited: #a55858; --color-error: #d73333; --color-warning: #edab00; --color-success: #14866d; --color-notice: #202122; --color-content-added: #006400; --color-content-removed: #8b0000; --filter-invert-icon: 0; --filter-invert-primary-button-icon: 1; --box-shadow-color-base: #000; --box-shadow-color-progressive--active: #2a4b8d; --box-shadow-color-progressive--focus: #36c; --box-shadow-color-progressive-selected: #36c; --box-shadow-color-progressive-selected--hover: #447ff5; --box-shadow-color-progressive-selected--active: #2a4b8d; --box-shadow-color-destructive--focus: #36c; --box-shadow-color-inverted: #fff; --box-shadow-color-transparent: transparent; --background-color-interactive: #eaecf0; --background-color-interactive-subtle: #f8f9fa; --background-color-disabled: #c8ccd1; --background-color-disabled-subtle: #eaecf0; --background-color-progressive: #36c; --background-color-progressive--hover: #447ff5; --background-color-progressive--active: #2a4b8d; --background-color-progressive--focus: #36c; --background-color-progressive-subtle: #eaf3ff; --background-color-destructive: #d73333; --background-color-destructive--hover: #ff4242; --background-color-destructive--active: #b32424; --background-color-destructive--focus: #36c; --background-color-destructive-subtle: #fee7e6; --background-color-error: #d73333; --background-color-error--hover: #ff4242; --background-color-error--active: #b32424; --background-color-error-subtle: #fee7e6; --background-color-warning-subtle: #fef6e7; --background-color-success-subtle: #d5fdf4; --background-color-notice-subtle: #eaecf0; --background-color-content-added: #a3d3ff; --background-color-content-removed: #ffe49c; --background-color-backdrop-light: rgba(255,255,255,0.65); --background-color-backdrop-dark: rgba(0,0,0,0.65); --background-color-base: #fff; --background-color-base-fixed: #fff; --background-color-neutral: #eaecf0; --background-color-neutral-subtle: #f8f9fa; --background-color-transparent: transparent; --background-color-inverted: #101418; --background-color-button-quiet--hover: rgba(0,24,73,0.027); --background-color-button-quiet--active: rgba(0,24,73,0.082); --background-color-input-binary--checked: #36c; --background-color-tab-list-item-framed--hover: rgba(255,255,255,0.3); --background-color-tab-list-item-framed--active: rgba(255,255,255,0.65); --opacity-icon-base: 0.87; --opacity-icon-base--hover: 0.74; --opacity-icon-base--selected: 1; --opacity-icon-base--disabled: 0.51; --opacity-icon-placeholder: 0.51; --opacity-icon-subtle: 0.67; --border-color-base: #a2a9b1; --border-color-interactive: #72777d; --border-color-disabled: #c8ccd1; --border-color-subtle: #c8ccd1; --border-color-muted: #eaecf0; --border-color-inverted: #fff; --border-color-progressive: #36c; --border-color-progressive--hover: #447ff5; --border-color-progressive--active: #2a4b8d; --border-color-progressive--focus: #36c; --border-color-destructive: #d73333; --border-color-destructive--hover: #ff4242; --border-color-destructive--active: #b32424; --border-color-destructive--focus: #36c; --border-color-error: #b32424; --border-color-error--hover: #ff4242; --border-color-warning: #a66200; --border-color-success: #096450; --border-color-notice: #54595d; --border-color-content-added: #a3d3ff; --border-color-content-removed: #ffe49c; --border-color-transparent: transparent; --border-color-divider: #a2a9b1; --outline-color-progressive--focus: #36c; --color-link-red: var(--color-destructive); --color-link-red--hover: var(--color-destructive--hover); --color-link-red--active: var(--color-destructive--active); --color-link-red--focus: var(--color-destructive--focus); --color-link-red--visited: var(--color-destructive--visited); --border-color-input--hover: var(--border-color-interactive); --border-color-input-binary: var(--border-color-interactive); --border-color-input-binary--hover: var(--border-color-progressive--hover); --border-color-input-binary--active: var(--border-color-progressive--active); --border-color-input-binary--focus: var(--border-color-progressive--focus); --border-color-input-binary--checked: var(--border-color-progressive); --color-base--subtle: #72777d; aspect-ratio: 1 / 1; transform: translate(-50%, -50%); transition: transform 120ms ease-out, background-color 120ms ease-out"></SPAN></A><SPAN class="mw-tmh-duration mw-tmh-label" style="CURSOR: pointer; RIGHT: 1em; POSITION: absolute; FONT-WEIGHT: bold; COLOR: rgb(255,255,255); PADDING-BOTTOM: 0.5em; PADDING-TOP: 0.5em; PADDING-LEFT: 0.5em; DISPLAY: inline-block; LINE-HEIGHT: 1; PADDING-RIGHT: 0.5em; BOTTOM: 1em; border-radius: 0.3em"><SPAN class=sr-only style="OVERFLOW: hidden; CLIP: rect(0px 0px 0px 0px); HEIGHT: 1px; WIDTH: 1px; WHITE-SPACE: nowrap; POSITION: absolute; clip-path: inset(50%)">Duration: 2 minutes and 14 seconds.</SPAN><SPAN aria-hidden=true>2:14</SPAN></SPAN></SPAN></SPAN><A class=mw-file-magnify style="TEXT-DECORATION: none; BORDER-TOP: 0px; BORDER-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; POSITION: relative; COLOR: ; BORDER-LEFT: 0px; DISPLAY: block; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/File:Kdtreeogg.ogv"></A><FIGCAPTION style="FONT-SIZE: 14px; BORDER-TOP: 0px; BORDER-LEFT-COLOR: ; PADDING-BOTTOM: 6px; BORDER-BOTTOM-COLOR: ; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 6px; DISPLAY: table-caption; BORDER-RIGHT-COLOR: ; LINE-HEIGHT: 1.4em; PADDING-RIGHT: 6px; CAPTION-SIDE: bottom; border-image-source: ; border-image-slice: ; border-image-width: ; border-image-outset: ; border-image-repeat: ">Example of a nearest neighbor search in a 2-d tree. Here, the tree is already built, each node corresponds to a rectangle, each rectangle is split in two equal subrectangles, and leaves correspond to rectangles containing a single point</FIGCAPTION></FIGURE>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">The<SPAN>&nbsp;</SPAN><A title="Nearest neighbour search" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Nearest_neighbour_search">nearest neighbour search</A><SPAN>&nbsp;</SPAN>(NN) algorithm aims to find the point in the tree that is nearest to a given input point. This search can be done efficiently by using the tree properties to quickly eliminate large portions of the search space.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Searching for a nearest neighbour in a<SPAN>&nbsp;</SPAN><I>k</I>-d tree proceeds as follows:</P>
<OL style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: none; ORPHANS: 2; WIDOWS: 2; MARGIN: -0.5em 0px 0px 3.2em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; margin-inline: 3.2em 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Starting with the root node, the algorithm moves down the tree recursively, in the same way that it would if the search point were being inserted (i.e. it goes left or right depending on whether the point is lesser than or greater than the current node in the split dimension).</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Once the algorithm reaches a leaf node, it checks the node point and if the distance is better than the "current best", that node point is saved as the "current best".</LI>
<LI style="MARGIN-BOTTOM: 0.1em">The algorithm unwinds the recursion of the tree, performing the following steps at each node:
<OL style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: none; MARGIN: 0.3em 0px 0px 3.2em; PADDING-RIGHT: 0px; margin-inline: 3.2em 0px">
<LI style="MARGIN-BOTTOM: 0.1em">If the current node is closer than the current best, then it becomes the current best.</LI>
<LI style="MARGIN-BOTTOM: 0.1em">The algorithm checks whether there could be any points on the other side of the splitting plane that are closer to the search point than the current best. In concept, this is done by intersecting the splitting<SPAN>&nbsp;</SPAN><A title=Hyperplane style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Hyperplane">hyperplane</A><SPAN>&nbsp;</SPAN>with a<SPAN>&nbsp;</SPAN><A title=Hypersphere class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Hypersphere">hypersphere</A><SPAN>&nbsp;</SPAN>around the search point that has a radius equal to the current nearest distance. Since the hyperplanes are all axis-aligned this is implemented as a simple comparison to see whether the distance between the splitting coordinate of the search point and current node is less than the distance (overall coordinates) from the search point to the current best.
<OL style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; LIST-STYLE-IMAGE: none; MARGIN: 0.3em 0px 0px 3.2em; PADDING-RIGHT: 0px; margin-inline: 3.2em 0px">
<LI style="MARGIN-BOTTOM: 0.1em">If the hypersphere crosses the plane, there could be nearer points on the other side of the plane, so the algorithm must move down the other branch of the tree from the current node looking for closer points, following the same recursive process as the entire search.</LI>
<LI style="MARGIN-BOTTOM: 0.1em">If the hypersphere doesn't intersect the splitting plane, then the algorithm continues walking up the tree, and the entire branch on the other side of that node is eliminated.</LI></OL></LI></OL></LI>
<LI style="MARGIN-BOTTOM: 0.1em">When the algorithm finishes this process for the root node, then the search is complete.</LI></OL>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Generally the algorithm uses squared distances for comparison to avoid computing square roots. Additionally, it can save computation by holding the squared current best distance in a variable for comparison.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">The algorithm can be extended in several ways by simple modifications. It can provide the<SPAN>&nbsp;</SPAN><I>k</I><SPAN>&nbsp;</SPAN>nearest neighbours to a point by maintaining<SPAN>&nbsp;</SPAN><I>k</I><SPAN>&nbsp;</SPAN>current bests instead of just one. A branch is only eliminated when<SPAN>&nbsp;</SPAN><I>k</I><SPAN>&nbsp;</SPAN>points have been found and the branch cannot have points closer than any of the<SPAN>&nbsp;</SPAN><I>k</I><SPAN>&nbsp;</SPAN>current bests.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">It can also be converted to an approximation algorithm to run faster. For example, approximate nearest neighbour searching can be achieved by simply setting an upper bound on the number of points to examine in the tree or by interrupting the search process based upon a real time clock (which may be more appropriate in hardware implementations). The nearest neighbour for points that are already in the tree can be achieved by not updating the refinement for nodes that give zero distance. As a result, this has the downside of discarding points that are not unique but are co-located with the original search point.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Approximate nearest neighbour is useful in real-time applications such as robotics due to the significant speed increase gained by not searching for the best point exhaustively. One of its implementations is<SPAN>&nbsp;</SPAN><A title="Best-bin-first search" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Best-bin-first_search">best-bin-first search</A>.