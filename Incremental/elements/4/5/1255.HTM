<DIV class=mYVXT style="BOX-SIZING: border-box; WIDTH: 1271px; VERTICAL-ALIGN: middle; DISPLAY: table-cell">
<DIV tabIndex=-1 class="LS81yb VICjCf j5pSsc db35Fc" style="BOX-SIZING: border-box; MAX-WIDTH: 1280px; WIDTH: 1271px; OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 48px; MARGIN: 0px auto; OUTLINE-COLOR: invert; PADDING-RIGHT: 48px">
<DIV class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd purZT-AhqUyc-II5mzb ZcASvf-AhqUyc-II5mzb pSzOP-AhqUyc-qWD73c Ktthjf-AhqUyc-qWD73c JNdkSc SQVYQc" style="BOX-SIZING: border-box; WIDTH: 1175px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d">
<DIV class="oKdM2c ZZyype Kzv0Me" style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; MAX-WIDTH: 1280px; WIDTH: 1145px; MARGIN-TOP: 0px">
<DIV id=h.3a1d27e4f28c40eb_1064 class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd jXK9ad D2fZ2 zu5uec OjCsFc dmUFtb wHaque g5GTcb JYTMs" style="BOX-SIZING: border-box; WIDTH: 1145px; VERTICAL-ALIGN: top; WHITE-SPACE: pre-wrap; POSITION: relative; PADDING-TOP: 1px; PADDING-LEFT: 1px; DISPLAY: inline-block; PADDING-RIGHT: 1px">
<DIV class=jXK9ad-SmKAyb style="BOX-SIZING: border-box; WIDTH: 1145px">
<DIV class="tyJCtd mGzaTb Depvyb baZpAe lkHyyc" style="BOX-SIZING: border-box; WIDTH: 1145px; POSITION: relative; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; overflow-wrap: break-word">
<H1 id=h.p_ID_13 class="CDt4Ke zfr3Q duRjpb" style='BOX-SIZING: border-box; FONT-SIZE: 40pt; TEXT-DECORATION: ; BORDER-TOP: rgb(240,240,240) 5px; FONT-FAMILY: "Playfair Display"; BORDER-BOTTOM: rgb(240,240,240) 5px; POSITION: relative; FONT-WEIGHT: 700; COLOR: rgb(15,15,15); OUTLINE-WIDTH: medium; PADDING-BOTTOM: 13px; TEXT-ALIGN: center; PADDING-TOP: 13px; OUTLINE-STYLE: none; MARGIN: 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.06; font-variant-ligatures: none' dir=ltr>Producer-Consumer Queues</H1></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION><SECTION id=h.3a1d27e4f28c40eb_1065 class=yaqOZd style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WIDTH: 1271px; WHITE-SPACE: normal; WORD-SPACING: 0px; TABLE-LAYOUT: fixed; POSITION: relative; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; DISPLAY: table; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; background-size: cover; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<DIV class=IFuOkc style="BOX-SIZING: border-box; HEIGHT: 1608px; WIDTH: 1271px; TABLE-LAYOUT: fixed; POSITION: absolute; LEFT: 0px; DISPLAY: table-cell; TOP: 0px; background-size: cover; pointer-events: none"></DIV>
<DIV class=mYVXT style="BOX-SIZING: border-box; WIDTH: 1271px; VERTICAL-ALIGN: middle; DISPLAY: table-cell">
<DIV tabIndex=-1 class="LS81yb VICjCf j5pSsc db35Fc" style="BOX-SIZING: border-box; MAX-WIDTH: 1280px; WIDTH: 1271px; OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 48px; MARGIN: 0px auto; OUTLINE-COLOR: invert; PADDING-RIGHT: 48px">
<DIV class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd purZT-AhqUyc-II5mzb ZcASvf-AhqUyc-II5mzb pSzOP-AhqUyc-qWD73c Ktthjf-AhqUyc-qWD73c JNdkSc SQVYQc" style="BOX-SIZING: border-box; WIDTH: 1175px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d">
<DIV class="oKdM2c ZZyype Kzv0Me" style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; MAX-WIDTH: 1280px; WIDTH: 1145px; MARGIN-TOP: 0px">
<DIV id=h.3a1d27e4f28c40eb_1068 class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd jXK9ad D2fZ2 zu5uec OjCsFc dmUFtb wHaque g5GTcb JYTMs" style="BOX-SIZING: border-box; WIDTH: 1145px; VERTICAL-ALIGN: top; WHITE-SPACE: pre-wrap; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class=jXK9ad-SmKAyb style="BOX-SIZING: border-box; WIDTH: 1145px">
<DIV class="tyJCtd mGzaTb Depvyb baZpAe" style="BOX-SIZING: border-box; WIDTH: 1145px; POSITION: relative; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; overflow-wrap: break-word">
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; PADDING-TOP: 0px; OUTLINE-STYLE: none; MARGIN: 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Producer-consumer queues are one of the most fundamental components in concurrent systems, they represent means to transfer data/messages/tasks/transactions between threads/stages/agents. If you hope that there is a single magical "one-size-fits-all" concurrent queue (MS PPL and Intel TTB fallacy), sorry, there is no. So what flavours of queues are there?</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Depending on <SPAN style='BOX-SIZING: border-box; FONT-FAMILY: "Open Sans"'><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold; -webkit-font-smoothing: antialiased">allowed number of producer and consumer threads</STRONG></SPAN>:</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- Multi-producer/multi-consumer queues (MPMC)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- Single-producer/multi-consumer queues (SPMC)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- Multi-producer/single-consumer queues (MPSC)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- Single-producer/single-consumer queues (SPSC)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>I hope this aspect is clear - for example, if you have only 1 producer and 1 consumer thread, you can use SPSC queue instead of more general MPMC queue, and as you may guess it will be significantly faster.</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>Depending on <SPAN style='BOX-SIZING: border-box; FONT-FAMILY: "Open Sans"'><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold; -webkit-font-smoothing: antialiased">underlying data structure of a lock-free or wait-free quee</STRONG></SPAN>:</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>- Array-based</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>- Linked-list-based</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>- Hybrid</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>Array-based queues are generally faster, however they are usually not strictly <SPAN class=" aw5Odc" style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: "><A class=XqQF9c style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; pointer-events: all" href="https://www.1024cores.net/home/lock-free-algorithms/introduction">lockfree</A></SPAN>. The drawback is that they need to preallocate memory for the worst case. Linked-list queues grow dynamically, thus no need to preallocate any memory up-front. And hybrid queues (linked-list of small fixed-size arrays) try to combine advantages of both.</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>For linked-list based queues depending on <SPAN style='BOX-SIZING: border-box; FONT-FAMILY: "Open Sans"'><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold; -webkit-font-smoothing: antialiased">intrusiveness</STRONG></SPAN>:</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>- Intrusive</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>- Non-intrusive</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>Intrusive queues are generally better performance-wise if you need to transfer already dynamically allocated data, because there is not need for additional node memory management. However they are inapplicable if your data is not dynamically allocated and/or you need to put the same message to unknown number of queues simultaneously.</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>For linked-list based queues depending on <SPAN style='BOX-SIZING: border-box; FONT-FAMILY: "Open Sans"'><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold; -webkit-font-smoothing: antialiased">maximum size</STRONG></SPAN>:</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>- Bounded</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>- Unbounded</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr><FONT class=extract>An unbounded queue can hold infinite number of messages, while bounded - up to some predefined limit. If the limit is reached further enqueue operations fail. Note that array-based queue are always bounded. On first sight unbounded queues are more attractive (because they allow you to not care). But they are not. They are dangerous. What will happen if your queue will grow up to 10^6 messages? 10^7? 10^8? 10^9? What? It should not happen? So why you put an unbounded queue in the first place? In 95% of cases you need a bounded queue, because it will enforce what you think should happen, and will save you from bad things.</FONT></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>For bounded queues depending on <SPAN style='BOX-SIZING: border-box; FONT-FAMILY: "Open Sans"'><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold; -webkit-font-smoothing: antialiased">overflow behavior</STRONG></SPAN>:</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- Fails on overflow</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- Overwrites the oldest item on overflow</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Most queues fall into the former category, and the latter is quite specific. Consider that a producer submits some real-time data, and if a consumer can't catch up it's better to lose the oldest data rather than the newest.</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Depending on<SPAN style='BOX-SIZING: border-box; FONT-FAMILY: "Open Sans"'><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold; -webkit-font-smoothing: antialiased"> requirements for Garbage Collection</STRONG></SPAN> (object life-time management):</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- Requires GC</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- Does not requires GC </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>There are a lot of lockfree algorithms (not only queues) that require GC - they don't know when it's safe to free memory. For garbage collected environments like Java/.NET it's not a problem. However for non-garbage collected environments like C/C++ it may be a serious problem (if you don't have an object life-time management scheme yet, of course).</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Depending on <SPAN style='BOX-SIZING: border-box; FONT-FAMILY: "Open Sans"'><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold; -webkit-font-smoothing: antialiased">support for priorities</STRONG></SPAN>:</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- <SPAN class=" aw5Odc" style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: "><A class=XqQF9c style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; pointer-events: all" href="https://www.1024cores.net/home/lock-free-algorithms/queues/priority-queues">with support for message priorities</A></SPAN></P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>- without support for message priorities</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; PADDING-BOTTOM: 0px; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Priority queues reorder messages, so that consumers always dequeue an element with the maximum priority. Priority queues are generally significantly slower and scale worse.</P></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION>