<SECTION id=h.3a1d27e4f28c40eb_1085 class=yaqOZd style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WIDTH: 1271px; WHITE-SPACE: normal; WORD-SPACING: 0px; TABLE-LAYOUT: fixed; POSITION: relative; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; DISPLAY: table; LETTER-SPACING: normal; TEXT-INDENT: 0px; background-size: cover; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<DIV class=mYVXT style="BOX-SIZING: border-box; WIDTH: 1271px; VERTICAL-ALIGN: middle; DISPLAY: table-cell">
<DIV tabIndex=-1 class="LS81yb VICjCf j5pSsc db35Fc" style="BOX-SIZING: border-box; MAX-WIDTH: 1280px; WIDTH: 1271px; OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 48px; MARGIN: 0px auto; OUTLINE-COLOR: invert; PADDING-RIGHT: 48px">
<DIV class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd purZT-AhqUyc-II5mzb ZcASvf-AhqUyc-II5mzb pSzOP-AhqUyc-qWD73c Ktthjf-AhqUyc-qWD73c JNdkSc SQVYQc" style="BOX-SIZING: border-box; WIDTH: 1175px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d">
<DIV class="oKdM2c ZZyype Kzv0Me" style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; MAX-WIDTH: 1280px; WIDTH: 1145px; MARGIN-TOP: 0px">
<DIV id=h.3a1d27e4f28c40eb_1088 class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd jXK9ad D2fZ2 zu5uec OjCsFc dmUFtb wHaque g5GTcb JYTMs" style="BOX-SIZING: border-box; WIDTH: 1145px; VERTICAL-ALIGN: top; WHITE-SPACE: pre-wrap; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class=jXK9ad-SmKAyb style="BOX-SIZING: border-box; WIDTH: 1145px">
<DIV class="tyJCtd mGzaTb Depvyb baZpAe" style="BOX-SIZING: border-box; WIDTH: 1145px; POSITION: relative; PADDING-BOTTOM: 8px; PADDING-TOP: 8px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; overflow-wrap: break-word">
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; PADDING-TOP: 0px; OUTLINE-STYLE: none; MARGIN: 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>According to <SPAN class=" aw5Odc" style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: "><A class=XqQF9c style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; pointer-events: all" href="https://www.1024cores.net/home/lock-free-algorithms/queues">the classification</A></SPAN> it's MPMC, array-based, fails on overflow, does not require GC, w/o priorities, causal FIFO, blocking producers and consumers queue. The algorithm is pretty simple and fast. It's <SPAN class=" aw5Odc" style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: "><A class=XqQF9c style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; pointer-events: all" href="https://www.1024cores.net/home/lock-free-algorithms/introduction">not lockfree in the official meaning</A></SPAN>, just implemented by means of <SPAN class=" aw5Odc" style="BOX-SIZING: border-box; TEXT-DECORATION: underline; COLOR: "><A class=XqQF9c style="BOX-SIZING: border-box; TEXT-DECORATION: none; COLOR: ; pointer-events: all" href="https://www.1024cores.net/home/lock-free-algorithms/so-what-is-a-memory-model-and-how-to-cook-it">atomic RMW operations</A></SPAN> w/o mutexes. </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>The cost of enqueue/dequeue is 1 CAS per operation. No amortization, just 1 CAS. No dynamic memory allocation/management during operation. Producers and consumers are separated from each other (as in the two-lock queue), i.e. do not touch the same data while queue is not empty.</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>On my dual-core laptop enqueue/dequeue takes 75 cycles on average in a synthetic multi-threaded benchmark.</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>Source code test suite are attached below (the file contains limited implementation of std::atomic, ready to run on Windows, MSVC, x86-32) .</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>template&lt;typename T&gt;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>class mpmc_bounded_queue</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>public:</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>mpmc_bounded_queue(size_t buffer_size)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>: buffer_(new cell_t [buffer_size])</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>, buffer_mask_(buffer_size - 1)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>assert((buffer_size &gt;= 2) &amp;&amp;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>((buffer_size &amp; (buffer_size - 1)) == 0));</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>for (size_t i = 0; i != buffer_size; i += 1)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>buffer_[i].sequence_.store(i, std::memory_order_relaxed);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>enqueue_pos_.store(0, std::memory_order_relaxed);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>dequeue_pos_.store(0, std::memory_order_relaxed);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>~mpmc_bounded_queue()</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>delete [] buffer_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>bool enqueue(T const&amp; data)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell_t* cell;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>size_t pos = enqueue_pos_.load(std::memory_order_relaxed);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>for (;;)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell = &amp;buffer_[pos &amp; buffer_mask_];</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>size_t seq = </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell-&gt;sequence_.load(std::memory_order_acquire);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>intptr_t dif = (intptr_t)seq - (intptr_t)pos;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>if (dif == 0)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>if (enqueue_pos_.compare_exchange_weak</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>(pos, pos + 1, std::memory_order_relaxed))</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>break;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>else if (dif &lt; 0)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>return false;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>else</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>pos = enqueue_pos_.load(std::memory_order_relaxed);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell-&gt;data_ = data;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell-&gt;sequence_.store(pos + 1, std::memory_order_release);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>return true;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>bool dequeue(T&amp; data)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell_t* cell;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>size_t pos = dequeue_pos_.load(std::memory_order_relaxed);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>for (;;)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell = &amp;buffer_[pos &amp; buffer_mask_];</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>size_t seq = </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell-&gt;sequence_.load(std::memory_order_acquire);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>intptr_t dif = (intptr_t)seq - (intptr_t)(pos + 1);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>if (dif == 0)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>if (dequeue_pos_.compare_exchange_weak</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>(pos, pos + 1, std::memory_order_relaxed))</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>break;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>else if (dif &lt; 0)</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>return false;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>else</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>pos = dequeue_pos_.load(std::memory_order_relaxed);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>data = cell-&gt;data_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell-&gt;sequence_.store</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>(pos + buffer_mask_ + 1, std::memory_order_release);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>return true;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>private:</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>struct cell_t</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>{</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::atomic&lt;size_t&gt; sequence_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>T data_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>};</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>static size_t const cacheline_size = 64;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>typedef char cacheline_pad_t [cacheline_size];</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cacheline_pad_t pad0_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cell_t* const buffer_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>size_t const buffer_mask_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cacheline_pad_t pad1_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::atomic&lt;size_t&gt; enqueue_pos_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cacheline_pad_t pad2_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>std::atomic&lt;size_t&gt; dequeue_pos_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>cacheline_pad_t pad3_;</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>mpmc_bounded_queue(mpmc_bounded_queue const&amp;);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>void operator = (mpmc_bounded_queue const&amp;);</P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr>}; </P>
<P class="CDt4Ke zfr3Q" style='BOX-SIZING: border-box; FONT-SIZE: 11pt; TEXT-DECORATION: ; FONT-FAMILY: "Open Sans"; POSITION: relative; COLOR: rgb(33,33,33); OUTLINE-WIDTH: medium; PADDING-BOTTOM: 0px; OUTLINE-STYLE: none; MARGIN: 15px 0px 0px; OUTLINE-COLOR: invert; LINE-HEIGHT: 1.6; font-variant-ligatures: none' dir=ltr></P></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION><SECTION id=h.3a1d27e4f28c40eb_1089 class=yaqOZd style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WIDTH: 1271px; WHITE-SPACE: normal; WORD-SPACING: 0px; TABLE-LAYOUT: fixed; POSITION: relative; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; DISPLAY: table; LETTER-SPACING: normal; TEXT-INDENT: 0px; background-size: cover; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<DIV class=IFuOkc style="BOX-SIZING: border-box; HEIGHT: 439px; WIDTH: 1271px; TABLE-LAYOUT: fixed; POSITION: absolute; LEFT: 0px; DISPLAY: table-cell; TOP: 0px; background-size: cover; pointer-events: none"></DIV>
<DIV class=mYVXT style="BOX-SIZING: border-box; WIDTH: 1271px; VERTICAL-ALIGN: middle; DISPLAY: table-cell">
<DIV tabIndex=-1 class="LS81yb VICjCf j5pSsc db35Fc" style="BOX-SIZING: border-box; MAX-WIDTH: 1280px; WIDTH: 1271px; OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 48px; MARGIN: 0px auto; OUTLINE-COLOR: invert; PADDING-RIGHT: 48px">
<DIV class="hJDwNd-AhqUyc-c5RTEf Ft7HRd-AhqUyc-c5RTEf JNdkSc SQVYQc L6cTce-purZT L6cTce-pSzOP" style="BOX-SIZING: border-box; WIDTH: 293px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d"></DIV></DIV></DIV>
<DIV class="hJDwNd-AhqUyc-wNfPc Ft7HRd-AhqUyc-wNfPc purZT-AhqUyc-II5mzb ZcASvf-AhqUyc-II5mzb pSzOP-AhqUyc-wNfPc Ktthjf-AhqUyc-wNfPc JNdkSc SQVYQc" style="BOX-SIZING: border-box; WIDTH: 489px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d">
<DIV class="oKdM2c ZZyype Kzv0Me" style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; MAX-WIDTH: 1280px; WIDTH: 460px; MARGIN-TOP: 0px">
<DIV id=h.3a1d27e4f28c40eb_1092 class="hJDwNd-AhqUyc-wNfPc Ft7HRd-AhqUyc-wNfPc pSzOP-AhqUyc-wNfPc Ktthjf-AhqUyc-wNfPc jXK9ad D2fZ2 zu5uec OjCsFc dmUFtb wHaque g5GTcb" style="BOX-SIZING: border-box; WIDTH: 460px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class=jXK9ad-SmKAyb style="BOX-SIZING: border-box; WIDTH: 460px">
<DIV class="tyJCtd OWlOyc baZpAe" style="BOX-SIZING: border-box; WIDTH: 460px; POSITION: relative">
<DIV style="BOX-SIZING: border-box" jsaction="rcuQ6b:rcuQ6b;" jscontroller="VYKRW">
<DIV class="WIdY2d M1aSXe" style="BOX-SIZING: border-box; OVERFLOW: hidden; HEIGHT: 391px; WIDTH: 460px; POSITION: relative; LINE-HEIGHT: 0">
<DIV style="BOX-SIZING: border-box; PADDING-TOP: 391px" jsname="WXxXjd"></DIV>
<DIV class=YMEQtf style="BOX-SIZING: border-box; OVERFLOW: hidden; BORDER-TOP: medium none; HEIGHT: 391px; BORDER-RIGHT: medium none; WIDTH: 460px; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; MARGIN: 0px; PADDING-RIGHT: 0px; inset: 0px"></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV>
<DIV class="hJDwNd-AhqUyc-II5mzb Ft7HRd-AhqUyc-II5mzb JNdkSc SQVYQc L6cTce-purZT L6cTce-pSzOP" style="BOX-SIZING: border-box; WIDTH: 391px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d"></DIV></DIV></DIV></DIV></DIV></SECTION><SECTION id=h.3a1d27e4f28c40eb_1093 class=yaqOZd style="BOX-SIZING: border-box; FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WIDTH: 1271px; WHITE-SPACE: normal; WORD-SPACING: 0px; TABLE-LAYOUT: fixed; POSITION: relative; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; DISPLAY: table; LETTER-SPACING: normal; TEXT-INDENT: 0px; background-size: cover; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<DIV class=IFuOkc style="BOX-SIZING: border-box; HEIGHT: 390px; WIDTH: 1271px; TABLE-LAYOUT: fixed; POSITION: absolute; LEFT: 0px; DISPLAY: table-cell; TOP: 0px; background-size: cover; pointer-events: none"></DIV>
<DIV class=mYVXT style="BOX-SIZING: border-box; WIDTH: 1271px; VERTICAL-ALIGN: middle; DISPLAY: table-cell">
<DIV tabIndex=-1 class="LS81yb VICjCf j5pSsc db35Fc" style="BOX-SIZING: border-box; MAX-WIDTH: 1280px; WIDTH: 1271px; OUTLINE-WIDTH: 0px; OUTLINE-STYLE: none; PADDING-LEFT: 48px; MARGIN: 0px auto; OUTLINE-COLOR: invert; PADDING-RIGHT: 48px">
<DIV class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd purZT-AhqUyc-II5mzb ZcASvf-AhqUyc-II5mzb pSzOP-AhqUyc-qWD73c Ktthjf-AhqUyc-qWD73c JNdkSc SQVYQc" style="BOX-SIZING: border-box; WIDTH: 1175px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class="JNdkSc-SmKAyb LkDMRd" style="BOX-SIZING: border-box; PADDING-LEFT: 14px; PADDING-RIGHT: 14px">
<DIV style="BOX-SIZING: border-box" jsname="F57UId" jsaction="zXBUYb:zTPCnb;zQF9Uc:Qxe3nd;" jscontroller="sGwD4d">
<DIV class="oKdM2c ZZyype Kzv0Me" style="BOX-SIZING: border-box; MARGIN-BOTTOM: 0px; MAX-WIDTH: 1280px; WIDTH: 1145px; MARGIN-TOP: 0px">
<DIV id=h.3a1d27e4f28c40eb_1096 class="hJDwNd-AhqUyc-uQSCkd Ft7HRd-AhqUyc-uQSCkd jXK9ad D2fZ2 zu5uec OjCsFc dmUFtb wHaque g5GTcb" style="BOX-SIZING: border-box; WIDTH: 1145px; VERTICAL-ALIGN: top; POSITION: relative; PADDING-LEFT: 0px; DISPLAY: inline-block; PADDING-RIGHT: 0px">
<DIV class=jXK9ad-SmKAyb style="BOX-SIZING: border-box; WIDTH: 1145px">
<DIV class="tyJCtd OWlOyc baZpAe" style="BOX-SIZING: border-box; WIDTH: 1145px; POSITION: relative">
<DIV style="BOX-SIZING: border-box" jsaction="rcuQ6b:rcuQ6b;" jscontroller="VYKRW">
<DIV class="WIdY2d M1aSXe" style="BOX-SIZING: border-box; OVERFLOW: hidden; HEIGHT: 342px; WIDTH: 1145px; POSITION: relative; LINE-HEIGHT: 0">
<DIV style="BOX-SIZING: border-box; PADDING-TOP: 342px" jsname="WXxXjd"></DIV><A aria-label="Open Drive Folder in new window" title="Open Drive Folder in new window" class=oWHwWc style="BOX-SIZING: border-box; HEIGHT: 52px; WIDTH: 52px; RIGHT: 12px; POSITION: absolute; Z-INDEX: 15; TOP: 0px; opacity: 0; transition: opacity 0.25s linear 0.25s" href="https://drive.google.com/folderview?id=1l-YxjW8xxY6r5Pyp3Af5TTaT5Ap0SuV-" target=_blank><SVG class=hmuWb focusable="false" viewBox="0 0 24 24"><PATH fill="none" d="M0 0h24v24H0z"></PATH><PATH d="M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"></PATH></SVG></A></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION><BR class=Apple-interchange-newline>