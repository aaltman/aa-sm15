<b> : </b>R-tree idea</H2><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: R-tree idea" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=R-tree&amp;action=edit&amp;section=1"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">The key idea of the data structure is to group nearby objects and represent them with their<SPAN>&nbsp;</SPAN><A title="Minimum bounding rectangle" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Minimum_bounding_rectangle">minimum bounding rectangle</A><SPAN>&nbsp;</SPAN>in the next higher level of the tree; the "R" in R-tree is for rectangle. Since all objects lie within this bounding rectangle, a query that does not intersect the bounding rectangle also cannot intersect any of the contained objects. At the leaf level, each rectangle describes a single object; at higher levels the aggregation includes an increasing number of objects. This can also be seen as an increasingly coarse approximation of the data set.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Similar to the<SPAN>&nbsp;</SPAN><A title=B-tree style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/B-tree">B-tree</A>, the R-tree is also a balanced search tree (so all leaf nodes are at the same depth), organizes the data in pages, and is designed for storage on disk (as used in<SPAN>&nbsp;</SPAN><A title=Database style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Database">databases</A>). Each page can contain a maximum number of entries, often denoted as<SPAN>&nbsp;</SPAN><SPAN class=mwe-math-element><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="FONT-SIZE: 18px; OVERFLOW: hidden; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math alttext="{\displaystyle M}" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow class=MJX-TeXAtom-ORD><mstyle scriptlevel="0" displaystyle="true"><mi>M</mi></mstyle></mrow></semantics></math></SPAN><IMG aria-hidden=true class="mwe-math-fallback-image-inline mw-invert skin-invert" style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 2.44ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN: 0px; DISPLAY: inline-block; --color-base: #202122; --color-base--hover: #404244; --color-emphasized: #000; --color-subtle: #54595d; --color-placeholder: #72777d; --color-disabled: #72777d; --color-inverted: #fff; --color-inverted-fixed: #fff; --color-progressive: #36c; --color-progressive--hover: #447ff5; --color-progressive--active: #2a4b8d; --color-progressive--focus: #36c; --color-destructive: #d73333; --color-destructive--hover: #ff4242; --color-destructive--active: #b32424; --color-destructive--focus: #36c; --color-visited: #6b4ba1; --color-destructive--visited: #a55858; --color-error: #d73333; --color-warning: #edab00; --color-success: #14866d; --color-notice: #202122; --color-content-added: #006400; --color-content-removed: #8b0000; --filter-invert-icon: 0; --filter-invert-primary-button-icon: 1; --box-shadow-color-base: #000; --box-shadow-color-progressive--active: #2a4b8d; --box-shadow-color-progressive--focus: #36c; --box-shadow-color-progressive-selected: #36c; --box-shadow-color-progressive-selected--hover: #447ff5; --box-shadow-color-progressive-selected--active: #2a4b8d; --box-shadow-color-destructive--focus: #36c; --box-shadow-color-inverted: #fff; --box-shadow-color-transparent: transparent; --background-color-interactive: #eaecf0; --background-color-interactive-subtle: #f8f9fa; --background-color-disabled: #c8ccd1; --background-color-disabled-subtle: #eaecf0; --background-color-progressive: #36c; --background-color-progressive--hover: #447ff5; --background-color-progressive--active: #2a4b8d; --background-color-progressive--focus: #36c; --background-color-progressive-subtle: #eaf3ff; --background-color-destructive: #d73333; --background-color-destructive--hover: #ff4242; --background-color-destructive--active: #b32424; --background-color-destructive--focus: #36c; --background-color-destructive-subtle: #fee7e6; --background-color-error: #d73333; --background-color-error--hover: #ff4242; --background-color-error--active: #b32424; --background-color-error-subtle: #fee7e6; --background-color-warning-subtle: #fef6e7; --background-color-success-subtle: #d5fdf4; --background-color-notice-subtle: #eaecf0; --background-color-content-added: #a3d3ff; --background-color-content-removed: #ffe49c; --background-color-backdrop-light: rgba(255,255,255,0.65); --background-color-backdrop-dark: rgba(0,0,0,0.65); --background-color-base: #fff; --background-color-base-fixed: #fff; --background-color-neutral: #eaecf0; --background-color-neutral-subtle: #f8f9fa; --background-color-transparent: transparent; --background-color-inverted: #101418; --background-color-button-quiet--hover: rgba(0,24,73,0.027); --background-color-button-quiet--active: rgba(0,24,73,0.082); --background-color-input-binary--checked: #36c; --background-color-tab-list-item-framed--hover: rgba(255,255,255,0.3); --background-color-tab-list-item-framed--active: rgba(255,255,255,0.65); --opacity-icon-base: 0.87; --opacity-icon-base--hover: 0.74; --opacity-icon-base--selected: 1; --opacity-icon-base--disabled: 0.51; --opacity-icon-placeholder: 0.51; --opacity-icon-subtle: 0.67; --border-color-base: #a2a9b1; --border-color-interactive: #72777d; --border-color-disabled: #c8ccd1; --border-color-subtle: #c8ccd1; --border-color-muted: #eaecf0; --border-color-inverted: #fff; --border-color-progressive: #36c; --border-color-progressive--hover: #447ff5; --border-color-progressive--active: #2a4b8d; --border-color-progressive--focus: #36c; --border-color-destructive: #d73333; --border-color-destructive--hover: #ff4242; --border-color-destructive--active: #b32424; --border-color-destructive--focus: #36c; --border-color-error: #b32424; --border-color-error--hover: #ff4242; --border-color-warning: #a66200; --border-color-success: #096450; --border-color-notice: #54595d; --border-color-content-added: #a3d3ff; --border-color-content-removed: #ffe49c; --border-color-transparent: transparent; --border-color-divider: #a2a9b1; --outline-color-progressive--focus: #36c; --color-link-red: var(--color-destructive); --color-link-red--hover: var(--color-destructive--hover); --color-link-red--active: var(--color-destructive--active); --color-link-red--focus: var(--color-destructive--focus); --color-link-red--visited: var(--color-destructive--visited); --border-color-input--hover: var(--border-color-interactive); --border-color-input-binary: var(--border-color-interactive); --border-color-input-binary--hover: var(--border-color-progressive--hover); --border-color-input-binary--active: var(--border-color-progressive--active); --border-color-input-binary--focus: var(--border-color-progressive--focus); --border-color-input-binary--checked: var(--border-color-progressive); --color-base--subtle: #72777d" alt="{\displaystyle M}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f82cade9898ced02fdd08712e5f0c0151758a0dd"></SPAN>. It also guarantees a minimum fill (except for the root node), however best performance has been experienced with a minimum fill of 30%&#8211;40% of the maximum number of entries (B-trees guarantee 50% page fill, and<SPAN>&nbsp;</SPAN><A title=B*-tree class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/B*-tree">B*-trees</A><SPAN>&nbsp;</SPAN>even 66%). The reason for this is the more complex balancing required for spatial data as opposed to linear data stored in B-trees.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">As with most trees, the searching algorithms (e.g.,<SPAN>&nbsp;</SPAN><A title="Intersection (set theory)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Intersection_(set_theory)">intersection</A>, containment,<SPAN>&nbsp;</SPAN><A title="Nearest neighbor search" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Nearest_neighbor_search">nearest neighbor search</A>) are rather simple. The key idea is to use the bounding boxes to decide whether or not to search inside a subtree. In this way, most of the nodes in the tree are never read during a search. Like B-trees, R-trees are suitable for large data sets and<SPAN>&nbsp;</SPAN><A title=Database style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Database">databases</A>, where nodes can be paged to memory when needed, and the whole tree cannot be kept in main memory. Even if data can be fit in memory (or cached), the R-trees in most practical applications will usually provide performance advantages over naive check of all objects when the number of objects is more than few hundred or so. However, for in-memory applications, there are similar alternatives that can provide slightly better performance or be simpler to implement in practice.<SPAN>&nbsp;</SPAN><SUP class="noprint Inline-Template Template-Fact" style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; LINE-HEIGHT: 1">[<I><A title="Wikipedia:Citation needed" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Wikipedia:Citation_needed"><SPAN title="Not only would it be nice to provide proof, but also, for readers interested in this area, it would be useful to see the more memory-suited methods (October 2023)">citation needed</SPAN></A></I>]</SUP><SPAN>&nbsp;</SPAN>To maintain in-memory computing for R-tree in a computer cluster where computing nodes are connected by a network, researchers have used RDMA (<A title="Remote direct memory access" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Remote_direct_memory_access">Remote Direct Memory Access</A>) to implement data-intensive applications under R-tree in a distributed environment.<SUP id=cite_ref-6 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/R-tree#cite_note-6"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[6]</FONT></A></SUP><SPAN>&nbsp;</SPAN>This approach is scalable for increasingly large applications and achieves high throughput and low latency performance for R-tree.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">The key difficulty of R-tree is to build an efficient tree that on one hand is balanced (so the leaf nodes are at the same height) on the other hand the rectangles do not cover too much empty space and do not overlap too much (so that during search, fewer subtrees need to be processed). For example, the original idea for inserting elements to obtain an efficient tree is to always insert into the subtree that requires least enlargement of its bounding box. Once that page is full, the data is split into two sets that should cover the minimal area each. Most of the research and improvements for R-trees aims at improving the way the tree is built and can be grouped into two objectives: building an efficient tree from scratch (known as bulk-loading) and performing changes on an existing tree (insertion and deletion).</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">R-trees do not guarantee good<SPAN>&nbsp;</SPAN><A title="Worst-case performance" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Worst-case_performance">worst-case performance</A>, but generally perform well with real-world data.<SUP id=cite_ref-7 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/R-tree#cite_note-7"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[7]</FONT></A></SUP><SPAN>&nbsp;</SPAN>While more of theoretical interest, the (bulk-loaded)<SPAN>&nbsp;</SPAN><A title="Priority R-tree" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Priority_R-tree">Priority R-tree</A><SPAN>&nbsp;</SPAN>variant of the R-tree is worst-case optimal,<SUP id=cite_ref-prtree_8-0 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/R-tree#cite_note-prtree-8"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[8]</FONT></A></SUP><SPAN>&nbsp;</SPAN>but due to the increased complexity, has not received much attention in practical applications so far.</P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">When data is organized in an R-tree, the neighbors within a given distance r and the<SPAN>&nbsp;</SPAN><A title="K nearest neighbors" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/K_nearest_neighbors">k nearest neighbors</A><SPAN>&nbsp;</SPAN>(for any<SPAN>&nbsp;</SPAN><A title="Lp space" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Lp_space">L<SUP style="FONT-SIZE: 12px; LINE-HEIGHT: 1">p</SUP>-Norm</A>) of all points can efficiently be computed using a spatial join.<SUP id=cite_ref-9 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/R-tree#cite_note-9"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[9]</FONT></A></SUP><SUP id=cite_ref-10 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/R-tree#cite_note-10"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[10]</FONT></A></SUP><SPAN>&nbsp;</SPAN>This is beneficial for many algorithms based on such queries, for example the<SPAN>&nbsp;</SPAN><A title="Local Outlier Factor" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Local_Outlier_Factor">Local Outlier Factor</A>. DeLi-Clu,<SUP id=cite_ref-11 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/R-tree#cite_note-11"><FONT style="BACKGROUND-COLOR: #ffffff" face=Arial>[11]</FONT></A></SUP><SPAN>&nbsp;</SPAN>Density-Link-Clustering is a<SPAN>&nbsp;</SPAN><A title="Cluster analysis" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Cluster_analysis">cluster analysis</A><SPAN>&nbsp;</SPAN>algorithm that uses the R-tree structure for a similar kind of spatial join to efficiently compute an<SPAN>&nbsp;</SPAN><A title="OPTICS algorithm" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/OPTICS_algorithm">OPTICS</A><SPAN>&nbsp;</SPAN>clustering.