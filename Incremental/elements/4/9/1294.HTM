<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract><B>Lamport's bakery algorithm</B><SPAN>&nbsp;</SPAN>is a computer<SPAN>&nbsp;</SPAN></FONT><A title=Algorithm style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Algorithm"><FONT class=extract>algorithm</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>devised by computer scientist<SPAN>&nbsp;</SPAN></FONT><A title="Leslie Lamport" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Leslie_Lamport"><FONT class=extract>Leslie Lamport</FONT></A><FONT class=extract>, as part of his long study of the<SPAN>&nbsp;</SPAN></FONT><A title="Correctness (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Correctness_(computer_science)"><FONT class=extract>formal correctness</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>of<SPAN>&nbsp;</SPAN></FONT><A title="Concurrent system" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Concurrent_system"><FONT class=extract>concurrent systems</FONT></A><FONT class=extract>, which is intended to improve the safety in the usage of shared resources among multiple<SPAN>&nbsp;</SPAN></FONT><A title="Thread (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Thread_(computer_science)"><FONT class=extract>threads</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>by means of<SPAN>&nbsp;</SPAN></FONT><A title="Mutual exclusion" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Mutual_exclusion"><FONT class=extract>mutual exclusion</FONT></A><FONT class=extract>.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>In<SPAN>&nbsp;</SPAN></FONT><A title="Computer science" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Computer_science"><FONT class=extract>computer science</FONT></A><FONT class=extract>, it is common for multiple threads to simultaneously access the same resources.<SPAN>&nbsp;</SPAN></FONT><A title="Data corruption" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Data_corruption"><FONT class=extract>Data corruption</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>can occur if two or more threads try to write into the same<SPAN>&nbsp;</SPAN></FONT><A title="Memory (computers)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Memory_(computers)"><FONT class=extract>memory</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>location, or if one thread reads a memory location before another has finished writing into it. Lamport's bakery algorithm is one of many<SPAN>&nbsp;</SPAN></FONT><A title="Mutual exclusion" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Mutual_exclusion"><FONT class=extract>mutual exclusion</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>algorithms designed to prevent concurrent threads entering<SPAN>&nbsp;</SPAN></FONT><A title="Critical sections" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Critical_sections"><FONT class=extract>critical sections</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>of code concurrently to eliminate the risk of data corruption.</FONT></P>
<DIV class="mw-heading mw-heading2" style='FONT-SIZE: 1.5em; OVERFLOW: hidden; FONT-FAMILY: "Linux Libertine", Georgia, Times, "Source Serif Pro", serif; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: ; PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.375; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><FONT class=extract>
<H2 id=Algorithm style='OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: "Linux Libertine", Georgia, Times, "Source Serif Pro", serif; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.375; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit'>Algorithm</H2><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Algorithm" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=1"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></FONT></DIV>
<DIV class="mw-heading mw-heading3" style="FONT-SIZE: 1.2em; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>
<H3 id=Analogy style="OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.6; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">Analogy</H3><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Analogy" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=2"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></FONT></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Lamport envisioned a bakery with a numbering machine at its entrance so each customer is given a unique number. Numbers increase by one as customers enter the store. A global counter displays the number of the customer that is currently being served. All other customers must wait in a queue until the baker finishes serving the current customer and the next number is displayed. When the customer is done shopping and has disposed of his or her number, the clerk increments the number, allowing the next customer to be served. That customer must draw another number from the numbering machine in order to shop again.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>According to the analogy, the "customers" are threads, identified by the letter<SPAN>&nbsp;</SPAN><I>i</I>, obtained from a global variable.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Due to the limitations of computer architecture, some parts of Lamport's<SPAN>&nbsp;</SPAN></FONT><A title=Analogy style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Analogy"><FONT class=extract>analogy</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>need slight modification. It is possible that more than one thread will get the same number<SPAN>&nbsp;</SPAN><I>n</I><SPAN>&nbsp;</SPAN>when they request it; this cannot be avoided (without first solving the mutual exclusion problem, which is the goal of the algorithm). Therefore, it is assumed that the thread identifier<SPAN>&nbsp;</SPAN><I>i</I><SPAN>&nbsp;</SPAN>is also a priority. A lower value of<SPAN>&nbsp;</SPAN><I>i</I><SPAN>&nbsp;</SPAN>means a higher priority and threads with higher priority will enter the<SPAN>&nbsp;</SPAN></FONT><A title="Critical section" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Critical_section"><FONT class=extract>critical section</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>first.</FONT></P>
<DIV class="mw-heading mw-heading3" style="FONT-SIZE: 1.2em; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>
<H3 id=Critical_section style="OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.6; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">Critical section</H3><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Critical section" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=3"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></FONT></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>The critical section is that part of code that requires exclusive access to resources and may only be executed by one thread at a time. In the bakery analogy, it is when the customer trades with the baker that others must wait.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>When a thread wants to enter the critical section, it has to check whether now is its turn to do so. It should check the number<SPAN>&nbsp;</SPAN><I>n</I><SPAN>&nbsp;</SPAN>of every other thread to make sure that it has the smallest one. In case another thread has the same number, the thread with the smallest<SPAN>&nbsp;</SPAN><I>i</I><SPAN>&nbsp;</SPAN>will enter the critical section first.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>In<SPAN>&nbsp;</SPAN></FONT><A title=Pseudocode style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Pseudocode"><FONT class=extract>pseudocode</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>this comparison between threads<SPAN>&nbsp;</SPAN><I>a</I><SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN><I>b</I><SPAN>&nbsp;</SPAN>can be written in the form:</FONT></P><PRE style="FONT-SIZE: 16px; BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: ; PADDING-BOTTOM: 1em; FONT-STYLE: normal; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word"><FONT class=extract>// Let n<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">a</SUB> - the customer number for thread <I>a</I>, and
// i<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">a</SUB> - the thread number for thread <I>a</I>, then

(n<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">a</SUB>, i<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">a</SUB>) &lt; (n<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">b</SUB>, i<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">b</SUB>) 
</FONT></PRE>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>which is equivalent to:</FONT></P><PRE style="FONT-SIZE: 16px; BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: ; PADDING-BOTTOM: 1em; FONT-STYLE: normal; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word"><FONT class=extract>(n<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">a</SUB> &lt; n<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">b</SUB>) or ((n<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">a</SUB> == n<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">b</SUB>) and (i<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">a</SUB> &lt; i<SUB style="FONT-SIZE: 12px; LINE-HEIGHT: 1">b</SUB>))
</FONT></PRE>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Once the thread ends its critical job, it gets rid of its number and enters the<SPAN>&nbsp;</SPAN><B>non-critical section</B>.</FONT></P>
<DIV class="mw-heading mw-heading3" style="FONT-SIZE: 1.2em; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>
<H3 id=Non-critical_section style="OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.6; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">Non-critical section</H3><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Non-critical section" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=4"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></FONT></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>The non-critical section is the part of code that doesn't need exclusive access. It represents some thread-specific computation that doesn't interfere with other threads' resources and execution.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>This part is analogous to actions that occur after shopping, such as putting change back into the wallet.</FONT></P>
<DIV class="mw-heading mw-heading2" style='FONT-SIZE: 1.5em; OVERFLOW: hidden; FONT-FAMILY: "Linux Libertine", Georgia, Times, "Source Serif Pro", serif; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: ; PADDING-BOTTOM: 0.17em; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.375; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial'><FONT class=extract>
<H2 id=Implementation_of_the_algorithm style='OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: "Linux Libertine", Georgia, Times, "Source Serif Pro", serif; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.375; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit'>Implementation of the algorithm</H2><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Implementation of the algorithm" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=5"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></FONT></DIV>
<DIV class="mw-heading mw-heading3" style="FONT-SIZE: 1.2em; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>
<H3 id=Definitions style="OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.6; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">Definitions</H3><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Definitions" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=6"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></FONT></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>In Lamport's original paper, the<SPAN>&nbsp;</SPAN><I>entering</I><SPAN>&nbsp;</SPAN>variable is known as<SPAN>&nbsp;</SPAN><I>choosing</I>, and the following conditions apply:</FONT></P>
<UL style="LIST-STYLE-TYPE: disc; FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; ORPHANS: 2; WIDOWS: 2; MARGIN: -0.5em 0px 0px 1.6em; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; margin-inline: 1.6em 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><FONT class=extract>Words choosing [i] and number [i] are in the memory of process i, and are initially zero. </FONT>
<LI style="MARGIN-BOTTOM: 0.1em"><FONT class=extract>The range of values of number [i] is unbounded. </FONT>
<LI style="MARGIN-BOTTOM: 0.1em"><FONT class=extract>A process may fail at any time. We assume that when it fails, it immediately goes to its noncritical section and halts. There may then be a period when reading from its memory gives arbitrary values. Eventually, any read from its memory must give a value of zero.</FONT></LI></UL>
<DIV class="mw-heading mw-heading3" style="FONT-SIZE: 1.2em; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>
<H3 id=Code_examples style="OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.6; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">Code examples</H3><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Code examples" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=7"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></FONT></DIV>
<DIV class="mw-heading mw-heading4" style="FONT-SIZE: 16px; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>
<H4 id=Pseudocode style="OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.6; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">Pseudocode</H4><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Pseudocode" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=8"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></FONT></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>In this example, all threads execute the same "main" function,<SPAN>&nbsp;</SPAN><I>Thread</I>. In real applications, different threads often have different "main" functions.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Note that as in the original paper, the thread checks itself before entering the critical section. Since the loop conditions will evaluate as<SPAN>&nbsp;</SPAN><I>false</I>, this does not cause much delay.</FONT></P>
<DIV class="mw-highlight mw-highlight-lang-c mw-content-ltr mw-highlight-lines" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 3.5em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4; box-shadow: rgb(240, 240, 240) 2.75em 0px 0px inset"><SPAN></SPAN><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="0"><FONT class=extract></FONT></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// declaration and initial values of global variables</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="1"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN><SPAN class=nl style="COLOR: rgb(118,118,0)">Entering</SPAN><SPAN class=p>:</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>array</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>[</SPAN><SPAN class=mf style="COLOR: rgb(102,102,102)">1.</SPAN><SPAN class=p>.</SPAN><SPAN class=n>NUM_THREADS</SPAN><SPAN class=p>]</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>of</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">bool</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN><SPAN class=nb style="COLOR: rgb(0,128,0)">false</SPAN><SPAN class=p>};</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="2"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN><SPAN class=nl style="COLOR: rgb(118,118,0)">Number</SPAN><SPAN class=p>:</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>array</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>[</SPAN><SPAN class=mf style="COLOR: rgb(102,102,102)">1.</SPAN><SPAN class=p>.</SPAN><SPAN class=n>NUM_THREADS</SPAN><SPAN class=p>]</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>of</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>integer</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>};</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="3"></SPAN>
<SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="4"><FONT class=extract></FONT></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN><SPAN class=n>lock</SPAN><SPAN class=p>(</SPAN><SPAN class=n>integer</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="5"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">      </SPAN><SPAN class=n>Entering</SPAN><SPAN class=p>[</SPAN><SPAN class=n>i</SPAN><SPAN class=p>]</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nb style="COLOR: rgb(0,128,0)">true</SPAN><SPAN class=p>;</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="6"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">      </SPAN><SPAN class=n>Number</SPAN><SPAN class=p>[</SPAN><SPAN class=n>i</SPAN><SPAN class=p>]</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>max</SPAN><SPAN class=p>(</SPAN><SPAN class=n>Number</SPAN><SPAN class=p>[</SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=p>],</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>...,</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>Number</SPAN><SPAN class=p>[</SPAN><SPAN class=n>NUM_THREADS</SPAN><SPAN class=p>]);</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="7"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">      </SPAN><SPAN class=n>Entering</SPAN><SPAN class=p>[</SPAN><SPAN class=n>i</SPAN><SPAN class=p>]</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nb style="COLOR: rgb(0,128,0)">false</SPAN><SPAN class=p>;</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="8"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">      </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">for</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=n>integer</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>j</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=p>;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>j</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&lt;=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>NUM_THREADS</SPAN><SPAN class=p>;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>j</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">++</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="9"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">          </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// Wait until thread j receives its number:</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="10"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">          </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">while</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=n>Entering</SPAN><SPAN class=p>[</SPAN><SPAN class=n>j</SPAN><SPAN class=p>])</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cm style="COLOR: rgb(61,123,123); FONT-STYLE: italic">/* nothing */</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="11"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">          </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// Wait until all threads with smaller numbers or with the same</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="12"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">          </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// number, but with higher priority, finish their work:</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="13"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">          </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">while</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>((</SPAN><SPAN class=n>Number</SPAN><SPAN class=p>[</SPAN><SPAN class=n>j</SPAN><SPAN class=p>]</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">!=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>((</SPAN><SPAN class=n>Number</SPAN><SPAN class=p>[</SPAN><SPAN class=n>j</SPAN><SPAN class=p>],</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>j</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=n>Number</SPAN><SPAN class=p>[</SPAN><SPAN class=n>i</SPAN><SPAN class=p>],</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=p>)))</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=cm style="COLOR: rgb(61,123,123); FONT-STYLE: italic">/* nothing */</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="14"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">      </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="15"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="16"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="17"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN><SPAN class=n>unlock</SPAN><SPAN class=p>(</SPAN><SPAN class=n>integer</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="18"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">      </SPAN><SPAN class=n>Number</SPAN><SPAN class=p>[</SPAN><SPAN class=n>i</SPAN><SPAN class=p>]</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>;</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="19"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="20"></SPAN>
<SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="21"><FONT class=extract></FONT></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN><SPAN class=n>Thread</SPAN><SPAN class=p>(</SPAN><SPAN class=n>integer</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="22"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">      </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">while</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=nb style="COLOR: rgb(0,128,0)">true</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="23"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">          </SPAN><SPAN class=n>lock</SPAN><SPAN class=p>(</SPAN><SPAN class=n>i</SPAN><SPAN class=p>);</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="24"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">          </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// The critical section goes here...</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="25"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">          </SPAN><SPAN class=n>unlock</SPAN><SPAN class=p>(</SPAN><SPAN class=n>i</SPAN><SPAN class=p>);</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="26"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">          </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// non-critical section...</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="27"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">      </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="28"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">  </SPAN><SPAN class=p>}</SPAN>
</FONT></PRE></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Each thread only writes its own storage, only reads are shared. It is remarkable that this algorithm is not built on top of some lower level "atomic" operation, e.g.<SPAN>&nbsp;</SPAN></FONT><A title=Compare-and-swap style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Compare-and-swap"><FONT class=extract>compare-and-swap</FONT></A><FONT class=extract>. The original proof shows that for overlapping reads and writes to the same storage cell only the write must be correct.<SUP class="noprint Inline-Template" style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; MARGIN-LEFT: 0.1em; LINE-HEIGHT: 1">[<I><A title="Wikipedia:Please clarify" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Wikipedia:Please_clarify"><SPAN title="This is hard to believe; throw us a bone, here. (August 2020)">clarification needed</SPAN></A></I>]</SUP><SPAN>&nbsp;</SPAN>The read operation can return an arbitrary number. Therefore, this algorithm can be used to implement mutual exclusion on memory that lacks synchronisation primitives, e.g., a simple SCSI disk shared between two computers.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>The necessity of the variable<SPAN>&nbsp;</SPAN><I>Entering</I><SPAN>&nbsp;</SPAN>might not be obvious as there is no 'lock' around lines 7 to 13. However, suppose the variable was removed and two processes computed the same<SPAN>&nbsp;</SPAN><CODE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 4px; border-radius: 2px">Number[i]</CODE>. If the higher-priority process was preempted before setting<SPAN>&nbsp;</SPAN><CODE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 4px; border-radius: 2px">Number[i]</CODE>, the low-priority process will see that the other process has a number of zero, and enters the critical section; later, the high-priority process will ignore equal<SPAN>&nbsp;</SPAN><CODE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 4px; border-radius: 2px">Number[i]</CODE><SPAN>&nbsp;</SPAN>for lower-priority processes, and also enters the critical section. As a result, two processes can enter the critical section at the same time. The bakery algorithm uses the<SPAN>&nbsp;</SPAN><I>Entering</I><SPAN>&nbsp;</SPAN>variable to make the assignment on line 6 look like it was atomic; process<SPAN>&nbsp;</SPAN><I>i</I><SPAN>&nbsp;</SPAN>will never see a number equal to zero for a process<SPAN>&nbsp;</SPAN><I>j</I><SPAN>&nbsp;</SPAN>that is going to pick the same number as<SPAN>&nbsp;</SPAN><I>i</I>.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>When implementing the pseudo code in a single process system or under<SPAN>&nbsp;</SPAN></FONT><A title="Cooperative multitasking" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Cooperative_multitasking"><FONT class=extract>cooperative multitasking</FONT></A><FONT class=extract>, it is better to replace the "do nothing" sections with code that notifies the operating system to immediately switch to the next thread. This primitive is often referred to as<SPAN>&nbsp;</SPAN><CODE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; BORDER-BOTTOM: 1px solid; COLOR: ; PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 4px; border-radius: 2px">yield</CODE>.</FONT></P>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>Lamport's bakery algorithm assumes a sequential consistency memory model. Few, if any, languages or multi-core processors implement such a memory model. Therefore, correct implementation of the algorithm typically requires inserting fences to inhibit reordering.<SUP id=cite_ref-1 class=reference style="FONT-SIZE: 12px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Lamport%27s_bakery_algorithm#cite_note-1"><FONT face=Arial>[1]</FONT></A></SUP></FONT></P>
<DIV class="mw-heading mw-heading4" style="FONT-SIZE: 16px; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">
<H4 id=PlusCal_code style="OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.6; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit"><A title=PlusCal style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/PlusCal"><FONT class=extract>PlusCal</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>code</FONT></H4><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em"><FONT class=extract>[</FONT></SPAN><A title="Edit section: PlusCal code" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=9"><SPAN><FONT class=extract>edit</FONT></SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em"><FONT class=extract>]</FONT></SPAN></SPAN></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>We declare N to be the number of processes, and we assume that N is a natural number.</FONT></P>
<DIV class="mw-highlight mw-highlight-lang-text mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><FONT class=extract>CONSTANT N
ASSUME N \in Nat
</FONT></PRE></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>We define P to be the set {1, 2, ... , N} of processes.</FONT></P>
<DIV class="mw-highlight mw-highlight-lang-text mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><FONT class=extract>P == 1..N
</FONT></PRE></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>The variables num and flag are declared as global.</FONT></P>
<DIV class="mw-highlight mw-highlight-lang-text mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><FONT class=extract>--algorithm AtomicBakery {
variable num = [i \in P |-&gt; 0], flag = [i \in P |-&gt; FALSE];
</FONT></PRE></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>The following defines<SPAN>&nbsp;</SPAN><CODE class="mw-highlight mw-highlight-lang-text mw-content-ltr" style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; BORDER-BOTTOM: 1px solid; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 4px; border-radius: 2px" dir=ltr>LL(j, i)</CODE><SPAN>&nbsp;</SPAN>to be true iff<SPAN>&nbsp;</SPAN><SPAN class=monospaced style="FONT-FAMILY: monospace, monospace">&lt;&lt;num[j], j&gt;&gt;</SPAN><SPAN>&nbsp;</SPAN>is less than or equal to<SPAN>&nbsp;</SPAN><SPAN class=monospaced style="FONT-FAMILY: monospace, monospace">&lt;&lt;num[i], i&gt;&gt;</SPAN><SPAN>&nbsp;</SPAN>in the usual<SPAN>&nbsp;</SPAN></FONT><A title="Lexicographical order" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Lexicographical_order"><FONT class=extract>lexicographical ordering</FONT></A><FONT class=extract>.</FONT></P>
<DIV class="mw-highlight mw-highlight-lang-text mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><FONT class=extract>define { LL(j, i) == \/ num[j] &lt; num[i]
                     \/ /\ num[i] = num[j]
                        /\ j =&lt; i
       }
</FONT></PRE></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>For each element in P there is a process with local variables unread, max and nxt. Steps between consecutive labels p1, ..., p7, cs are considered atomic. The statement with<SPAN>&nbsp;</SPAN><CODE class="mw-highlight mw-highlight-lang-tex mw-content-ltr" style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; BORDER-BOTTOM: 1px solid; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: 1px solid; PADDING-RIGHT: 4px; border-radius: 2px" dir=ltr>(x<SPAN>&nbsp;</SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">\in</SPAN><SPAN>&nbsp;</SPAN>S)<SPAN>&nbsp;</SPAN><SPAN class=nb style="COLOR: rgb(0,128,0)">{</SPAN><SPAN>&nbsp;</SPAN>body<SPAN>&nbsp;</SPAN><SPAN class=nb style="COLOR: rgb(0,128,0)">}</SPAN></CODE><SPAN>&nbsp;</SPAN>sets id to a nondeterministically chosen element of the set S and then executes body. A step containing the statement await expr can be executed only when the value of expr is<SPAN>&nbsp;</SPAN><SPAN class=monospaced style="FONT-FAMILY: monospace, monospace">TRUE</SPAN>.</FONT></P>
<DIV class="mw-highlight mw-highlight-lang-text mw-content-ltr" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4"><SPAN></SPAN><FONT class=extract>process (p \in P)
  variables unread \in SUBSET P, 
            max \in Nat, 
            nxt \in P;
{
p1: while (TRUE) {
      unread&nbsp;:= P \ {self}&nbsp;;
      max&nbsp;:= 0;
      flag[self]&nbsp;:= TRUE;
p2:   while (unread # {}) {
        with (i \in unread) { unread&nbsp;:= unread \ {i};
                              if (num[i] &gt; max) { max&nbsp;:= num[i]; }
         }
       };
p3:   num[self]&nbsp;:= max + 1;
p4:   flag[self]&nbsp;:= FALSE;
      unread&nbsp;:= P \ {self}&nbsp;;
p5:   while (unread # {}) {
        with (i \in unread) { nxt&nbsp;:= i&nbsp;; };
        await ~ flag[nxt];
p6:     await \/ num[nxt] = 0
              \/ LL(self, nxt)&nbsp;;
        unread&nbsp;:= unread \ {nxt};
        }&nbsp;;
cs:   skip&nbsp;;  \* the critical section;
p7:   num[self]&nbsp;:= 0;
 }}
}
</FONT></PRE></DIV>
<DIV class="mw-heading mw-heading4" style="FONT-SIZE: 16px; OVERFLOW: hidden; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0.5em; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.25em 0px; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>
<H4 id=Java_code style="OVERFLOW: hidden; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 0.25em; DISPLAY: inline; LINE-HEIGHT: 1.6; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">Java code</H4><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; LINE-HEIGHT: 0; MARGIN-RIGHT: 0px; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Java code" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/w/index.php?title=Lamport%27s_bakery_algorithm&amp;action=edit&amp;section=10"><SPAN>edit</SPAN></A><SPAN class=mw-editsection-bracket style="COLOR: ; MARGIN-LEFT: 0.25em">]</SPAN></SPAN></FONT></DIV>
<P style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(32,33,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; MARGIN: 0.5em 0px 1em; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial"><FONT class=extract>We use the AtomicIntegerArray class not for its built in atomic operations but because its get and set methods work like volatile reads and writes. Under the<SPAN>&nbsp;</SPAN></FONT><A title="Java Memory Model" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; border-radius: 2px; overflow-wrap: break-word" href="https://en.wikipedia.org/wiki/Java_Memory_Model"><FONT class=extract>Java Memory Model</FONT></A><FONT class=extract><SPAN>&nbsp;</SPAN>this ensures that writes are immediately visible to all threads.</FONT></P>
<DIV class="mw-highlight mw-highlight-lang-java mw-content-ltr mw-highlight-lines" style="FONT-SIZE: 16px; FONT-FAMILY: sans-serif; BACKGROUND: rgb(248,248,248); unicode-bidi: embed; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 400; COLOR: rgb(51,51,51); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial" dir=ltr><PRE style="BORDER-TOP: 1px solid; FONT-FAMILY: monospace, monospace; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; OVERFLOW-X: hidden; BORDER-BOTTOM: 1px solid; POSITION: relative; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 3.5em; BORDER-LEFT: 1px solid; LINE-HEIGHT: 1.3; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); overflow-wrap: break-word; tab-size: 4; box-shadow: rgb(240, 240, 240) 2.75em 0px 0px inset"><SPAN></SPAN><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="1"><FONT class=extract></FONT></SPAN><FONT class=extract><SPAN class=n>AtomicIntegerArray</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>ticket</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">new</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>AtomicIntegerArray</SPAN><SPAN class=p>(</SPAN><SPAN class=n>threads</SPAN><SPAN class=p>);</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// ticket for threads in line, n - number of threads</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="2"></SPAN><FONT class=extract><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// Java initializes each element of 'ticket' to 0</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="3"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="4"></SPAN><FONT class=extract><SPAN class=n>AtomicIntegerArray</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>entering</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">new</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>AtomicIntegerArray</SPAN><SPAN class=p>(</SPAN><SPAN class=n>threads</SPAN><SPAN class=p>);</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// 1 when thread entering in line</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="5"></SPAN><FONT class=extract><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// Java initializes each element of 'entering' to 0</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="6"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="7"></SPAN><FONT class=extract><SPAN class=kd style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">public</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">void</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nf style="COLOR: rgb(0,0,255)">lock</SPAN><SPAN class=p>(</SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>pid</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// thread ID</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="8"></SPAN><FONT class=extract><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="9"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n>entering</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">set</SPAN><SPAN class=p>(</SPAN><SPAN class=n>pid</SPAN><SPAN class=p>,</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=p>);</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="10"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>max</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>;</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="11"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">for</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>threads</SPAN><SPAN class=p>;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">++</SPAN><SPAN class=p>)</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="12"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="13"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">        </SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>current</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>ticket</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">get</SPAN><SPAN class=p>(</SPAN><SPAN class=n>i</SPAN><SPAN class=p>);</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="14"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">        </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">if</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=n>current</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&gt;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>max</SPAN><SPAN class=p>)</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="15"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">        </SPAN><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="16"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">            </SPAN><SPAN class=n>max</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>current</SPAN><SPAN class=p>;</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="17"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">        </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="18"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="19"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n>ticket</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">set</SPAN><SPAN class=p>(</SPAN><SPAN class=n>pid</SPAN><SPAN class=p>,</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">+</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>max</SPAN><SPAN class=p>);</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="20"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n>entering</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">set</SPAN><SPAN class=p>(</SPAN><SPAN class=n>pid</SPAN><SPAN class=p>,</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>);</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="21"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">for</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>ticket</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">length</SPAN><SPAN class=p>();</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">++</SPAN><SPAN class=n>i</SPAN><SPAN class=p>)</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="22"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="23"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">        </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">if</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=n>i</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">!=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>pid</SPAN><SPAN class=p>)</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="24"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">        </SPAN><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="25"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">            </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">while</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=n>entering</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">get</SPAN><SPAN class=p>(</SPAN><SPAN class=n>i</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">==</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>{</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>Thread</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">yield</SPAN><SPAN class=p>();</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>}</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// wait while other thread picks a ticket</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="26"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">            </SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">while</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=n>ticket</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">get</SPAN><SPAN class=p>(</SPAN><SPAN class=n>i</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">!=</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>(</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>ticket</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">get</SPAN><SPAN class=p>(</SPAN><SPAN class=n>i</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>ticket</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">get</SPAN><SPAN class=p>(</SPAN><SPAN class=n>pid</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">||</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="27"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">                    </SPAN><SPAN class=p>(</SPAN><SPAN class=n>ticket</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">get</SPAN><SPAN class=p>(</SPAN><SPAN class=n>i</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">==</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>ticket</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">get</SPAN><SPAN class=p>(</SPAN><SPAN class=n>pid</SPAN><SPAN class=p>)</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&amp;&amp;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>i</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>pid</SPAN><SPAN class=p>)))</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="28"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">            </SPAN><SPAN class=p>{</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>Thread</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">yield</SPAN><SPAN class=p>();</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="29"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">        </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="30"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="31"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=c1 style="COLOR: rgb(61,123,123); FONT-STYLE: italic">// The critical section goes here...</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="32"></SPAN><FONT class=extract><SPAN class=p>}</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="33"></SPAN>
<SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="34"><FONT class=extract></FONT></SPAN><FONT class=extract><SPAN class=kd style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">public</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">void</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=nf style="COLOR: rgb(0,0,255)">unlock</SPAN><SPAN class=p>(</SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">int</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=n>pid</SPAN><SPAN class=p>)</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="35"></SPAN><FONT class=extract><SPAN class=p>{</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="36"></SPAN><FONT class=extract><SPAN class=w style="COLOR: rgb(187,187,187)">    </SPAN><SPAN class=n>ticket</SPAN><SPAN class=p>.</SPAN><SPAN class=na style="COLOR: rgb(104,120,34)">set</SPAN><SPAN class=p>(</SPAN><SPAN class=n>pid</SPAN><SPAN class=p>,</SPAN><SPAN class=w style="COLOR: rgb(187,187,187)"> </SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>);</SPAN>
</FONT><SPAN class=linenos style="BOX-SIZING: border-box; WIDTH: 2.75em; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: pre; POSITION: absolute; COLOR: rgb(114,119,125); TEXT-ALIGN: right; PADDING-LEFT: 5px; LEFT: 0px; PADDING-RIGHT: 5px; MARGIN-RIGHT: 4px" data-line="37"></SPAN><SPAN class=p><FONT class=extract>}</FONT></SPAN></PRE></DIV>