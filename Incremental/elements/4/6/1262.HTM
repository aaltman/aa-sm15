<b> : </b>4. Lock-Free</H4>The Lock-Free property guarantees that at least some thread is doing progress on its work. In theory this means that a method may take an infinite amount of operations to complete, but in practice it takes a short amount, otherwise it won't be much useful.<BR><SPAN style='FONT-FAMILY: "Courier New", Courier, monospace'>Definition</SPAN>: A method is Lock-Free if it guarantees that infinitely often some thread calling this method finishes in a finite number of steps.<BR><SPAN style='FONT-FAMILY: "Courier New", Courier, monospace'>Example</SPAN>: Incrementing an atomic integer in a CAS loop:<BR><BR>
<DIV class=MsoNormal style="MARGIN-BOTTOM: 0in; LINE-HEIGHT: normal"><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black">AtomicInteger<SPAN>&nbsp;</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: rgb(0,0,192)">atomicVar</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;</SPAN>=<SPAN>&nbsp;</SPAN></SPAN><B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: rgb(127,0,85)">new</SPAN></B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;</SPAN>AtomicInteger(0);</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas"></SPAN></DIV>
<DIV class=MsoNormal style="MARGIN-BOTTOM: 0in; LINE-HEIGHT: normal"><B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: rgb(127,0,85)">public</SPAN></B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;</SPAN></SPAN><B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: rgb(127,0,85)">void</SPAN></B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;</SPAN>funcLockFree() {</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas"></SPAN></DIV>
<DIV class=MsoNormal style="MARGIN-BOTTOM: 0in; LINE-HEIGHT: normal"><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN>&nbsp;</SPAN></SPAN></SPAN><B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: rgb(127,0,85)">int</SPAN></B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;</SPAN>localVar =<SPAN>&nbsp;</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: rgb(0,0,192)">atomicVar</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black">.get();</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas"></SPAN></DIV>
<DIV class=MsoNormal style="MARGIN-BOTTOM: 0in; LINE-HEIGHT: normal"><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN>&nbsp;</SPAN></SPAN></SPAN><B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: rgb(127,0,85)">while</SPAN></B><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;</SPAN>(!</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: rgb(0,0,192)">atomicVar</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black">.compareAndSet(localVar, localVar+1)) {</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas"></SPAN></DIV>
<DIV class=MsoNormal style="MARGIN-BOTTOM: 0in; LINE-HEIGHT: normal"><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN>&nbsp;</SPAN></SPAN>localVar =<SPAN>&nbsp;</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: rgb(0,0,192)">atomicVar</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black">.get();</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas"></SPAN></DIV>
<DIV class=MsoNormal style="MARGIN-BOTTOM: 0in; LINE-HEIGHT: normal"><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN>&nbsp;</SPAN></SPAN>}</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas"></SPAN></DIV>
<DIV class=MsoNormal><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Consolas; COLOR: black; LINE-HEIGHT: 13px">}</SPAN></DIV>Another notable example of Lock-Free is the ConcurrentLinkedQueue in java.util.concurrent, whose add() and remove() operations are Lock-Free.