<b> : </b><P class=western style="MARGIN-TOP: 0in; MARGIN-RIGHT: 0.34in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Palatino Linotype, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Abstract</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0.55in; MARGIN-RIGHT: 0.89in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 9pt" size=2>Most modern in-memory database systems rely on multi-version concurrency control to support real-time data analysis without interfering with concurrent writes. However, this is not a good fit for heterogeneous workloads. We find that long version chains are the root cause of the throughput reduction. In this paper,</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>we</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>exploit</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>a</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>scalable</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>version-aware</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>data</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>partitioning</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>and</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>placement</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>approach for</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 1.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>heterogeneous</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 1.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>workloads</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 1.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>that</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 1.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>incorporates</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 1.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>a</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 1.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>suite</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 1.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>of</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 1.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>optimized</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 1.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>techniques to significantly reduce the overheads incurred both during the initial placement</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>and during version ingestion at runtime. The experiment results show that the proposed approach achieves 2x performance improvement compared with existing state-of-the-art approaches.</FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.14in; MARGIN-LEFT: 0.55in; LINE-HEIGHT: 96%; MARGIN-RIGHT: 0.7in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Georgia, serif"><FONT style="FONT-SIZE: 8pt" size=1>Keywords: </FONT></FONT><FONT style="FONT-SIZE: 8pt" size=1>In-memory databases, multi-versioning, heterogeneous workloads, data</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">placement</SPAN></FONT></FONT></P>
<P class=western><BR></P>
<P class=western><BR></P>
<P class=western style="MARGIN-TOP: 0.08in"><BR></P>
<OL>
<LI>