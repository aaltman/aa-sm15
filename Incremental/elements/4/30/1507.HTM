<b> : </b><P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 91%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><I>Abstract</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>&#8212;CockroachDB</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>is</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>an</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>open-source</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>database,</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>providing transactional</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>access</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>to</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>data</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>in</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>a</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>distributed</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>setting.</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>CockroachDB employs a multi-version timestamp ordering protocol to provide serializability. This provides a simple mechanism to enforce serializability, but the static timestamp allocation scheme can lead to a high number of aborts under contention. We aim to reduce the aborts for transactional workloads by integrating a dynamic timestamp ordering based concurrency control scheme in CockroachDB. Dynamic timestamp ordering scheme tries to reduce</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>the</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>number</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>of</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>aborts</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>by</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>allocating</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>timestamps</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">dynami-</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0.17in" align=right><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">1</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"><I>,</I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">500</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in; MARGIN-RIGHT: 0.17in" align=right><SPAN class=sd-abs-pos style="WIDTH: 24px; POSITION: absolute; LEFT: -0.09in; TOP: -0.28in"></SPAN><SPAN id=Frame8 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.17in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 4.66in; BORDER-LEFT: medium none; TOP: 2.88in; PADDING-RIGHT: 0in">
<P style="MARGIN-LEFT: 0.01in; LINE-HEIGHT: 0.15in" dir=ltr align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 9pt" size=2>Throughput</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">(Txns/sec)</SPAN></FONT></FONT></P></SPAN><FONT size=2><FONT face="Calibri, serif"><FONT size=1>1</FONT></FONT><FONT face="Calibri, serif"><FONT size=1><I>,</I></FONT></FONT><FONT face="Calibri, serif"><FONT size=1>000</FONT></FONT></FONT> 
<P></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.03in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in; MARGIN-RIGHT: 0.17in" align=right><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">500</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.26in; LINE-HEIGHT: 0.07in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">0</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0.23in; LINE-HEIGHT: 0.06in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">50:50</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in; LINE-HEIGHT: 100%"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.06in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">60:40</SPAN></FONT><FONT style="FONT-SIZE: 5pt" size=1> </FONT><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">70:30</SPAN></FONT><FONT style="FONT-SIZE: 5pt" size=1> </FONT><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">80:20</SPAN></FONT><FONT style="FONT-SIZE: 5pt" size=1> </FONT><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">90:10</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 7pt" size=1>Contention</FONT><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"> Ratio</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0.29in; LINE-HEIGHT: 0.06in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">300</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.29in" align=left><SPAN class=sd-abs-pos style="WIDTH: 278px; POSITION: absolute; LEFT: -1.67in; TOP: -0.34in"></SPAN><SPAN class=sd-abs-pos style="WIDTH: 24px; POSITION: absolute; LEFT: 0.48in; TOP: -0.35in"></SPAN><SPAN id=Frame9 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.17in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 7.24in; BORDER-LEFT: medium none; TOP: 2.76in; PADDING-RIGHT: 0in">
<P style="MARGIN-LEFT: 0.01in; LINE-HEIGHT: 0.15in" dir=ltr align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 9pt" size=2>Number</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>of</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.6pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2>Aborts/1000</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.6pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.2pt">txns</SPAN></FONT></FONT></P></SPAN><FONT size=2><FONT face="Calibri, serif"><FONT size=1>200</FONT></FONT></FONT> 
<P></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0.29in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">100</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.29in; LINE-HEIGHT: 0.07in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">0</SPAN></FONT></FONT></FONT></P>
<P class=western style="LINE-HEIGHT: 0.06in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 5pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">99:01</SPAN></FONT></FONT></P>
<DIV id=Section2 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 91%; MARGIN-RIGHT: 0.03in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>cally based on the conflicts of accessed data items. This gives a transaction</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>higher</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>chance</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>to</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>fit</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>on</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>a</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>logically</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>serializable</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>timeline, especially in workloads</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 9pt" size=2>with high contention.</FONT></FONT></FONT></P>
<OL type=I>
<LI>
<P style="MARGIN-TOP: 0.14in; LINE-HEIGHT: 100%" align=left><FONT style="FONT-SIZE: 11pt" size=2><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Introduction</SPAN></FONT></SPAN></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>CockroachDB [2] is an open-source distributed SQL database built on a transactional and strongly-consistent key- value store. The transactional guarantees are provided over data, which is synchronously replicated using a distributed consensus protocol, Raft [18].</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>CockroachDB provides two transaction isolation levels: SI (Snapshot Isolation) [9] and Serializable [10]. Snapshot Iso- lation can detect write-write conflicts among transactions and provides<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>efficient<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>performance,<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>but<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>does<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>not<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>guarantee<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>serializ- ability [15]. Applications needing stricter correctness guaran- tees than snapshot isolation can use the Serializable isolation level,<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>which<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>provided<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>using<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>Serializable<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>Snapshot<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>Isolation (SSI) [23] based technique. To implement SSI, CockroachDB employs<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>lock-free<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>multi-version<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>ordering<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>scheme. The timestamp ordering scheme in CockroachDB uses a fixed timestamp allocation scheme, and assigns timestamps at the start<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>each<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>transaction.<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>These<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>timestamps<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>are<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>used<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>as<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>commit timestamp for the transaction. This commit timestamp is used to<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>order<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>logical<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>order,<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>hence enforce<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>serializability.<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>SSI,<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>unlike<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>SI,<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>detects<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>handles<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>read- write conflicts but the restrictive fixed timestamp ordering leads to higher number of aborts under contention. Figure 1 illustrates that with increasing contention in the workload, the number of aborts increases, leading to a drop in throughput with timestamp ordering concurrency-control employed in <SPAN style="LETTER-SPACING: -0.1pt">CockroachDB.</SPAN></P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>To reduce the number of aborts at high contention, a possible strategy is to use dynamic timestamps for allocating the commit timestamp to a transaction. In this technique, the system tries to dynamically allocate a timestamp range to<SPAN style="LETTER-SPACING: 4pt"> </SPAN>each transaction, based on the conflicts of data items accessed by<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>transaction.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>At<SPAN style="LETTER-SPACING: 2pt"> </SPAN>commit,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>a<SPAN style="LETTER-SPACING: 2pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>allocated<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to the<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>from<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>that<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>range,<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>fit<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>that<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>on<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN><SPAN style="LETTER-SPACING: -0.5pt">a</SPAN></P>
<P class=western style="LINE-HEIGHT: 0.14in" align=justify>Fig.<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>1:<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>Performance<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>Fixed<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>Timestamp<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>Ordering<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">Scheme</SPAN></P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>under<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>Contention.<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>Contention<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>ratio<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>x:y<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>specifies<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>that<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>x<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>percent of the transactions access y percent of the items.</P>
<P class=western style="MARGIN-TOP: 0.05in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>logical serializable timeline. We integrate CockroachDB with the dynamic timestamp allocation technique we designed in our previous work MaaT (Multiaccess as a Transaction) [17]. MaaT changes the validation phase of the optimistic con- currency control mechanism to allocate a commit timestamp dynamically by keeping track of the items accessed and conflicting transactions accessing the items using read and write markers. By performing dynamic timestamp allocation during validation and commit, MaaT is able to reduce aborts under contention.</P>
<P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Adapting the dynamic timestamp allocation technique de- signed<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>MaaT<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>with<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>SSI<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>implementation<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>CockroachDB can eliminate unnecessary aborts. Our technique targets cases where transactions are aborted due to being non-serializable because of a fixed timestamp ordering, rather than being aborted because of actual conflicting order of access of items (in other words an ordering that would lead to cycle in a conflict graph). Some of these cases are serializable when timestamps are dynamically allocated to fit them on a logicial timeline, based on the order of access of data items.</P>
<P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>CockroachDB is modified to integrate the dynamic times- tamp ordering based concurrency-control mechanism. As the concurrency-control layer interacts with the lower layers of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the database for ensuring strong consistency of data, multiple components had to be modified to integrate the technique.</P>
<P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Past techniques proposed to reduce aborts in lock-free concurrency control techniques [26], [17], [25] have been implemented and evaluated in standalone prototypes. Imple- menting the dynamic timestamp ordering technique in a full- featured database system like CockroachDB gives an insight into<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>performance<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>characteristics<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>dynamic<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>timestamp ordering like optimizations, and how to integrate such opti- mizations in existing systems.</P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0.22in" align=justify>A<SPAN style="LETTER-SPACING: 2.8pt"> </SPAN>benchmark<SPAN style="LETTER-SPACING: 2.8pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2.8pt"> </SPAN>also<SPAN style="LETTER-SPACING: 2.8pt"> </SPAN>developed<SPAN style="LETTER-SPACING: 2.8pt"> </SPAN>to<SPAN style="LETTER-SPACING: 2.8pt"> </SPAN>extensively<SPAN style="LETTER-SPACING: 2.8pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">evalu-</SPAN></P></DIV>
<DIV id=Section3 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="MARGIN-TOP: 0.02in; PAGE-BREAK-BEFORE: always; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify>ate the performance of dynamic timestamp ordering based concurrency-control in CockroachDB. The benchmark eval- uates<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>performance<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>while<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>varying<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>contention,<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>degree of concurrent access and the ratio of read-only and read-<SPAN style="LETTER-SPACING: 4pt"> </SPAN>write transactions. The source-code changes as well as the benchmark are available on Github [4], [1].</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>The<SPAN style="LETTER-SPACING: 2pt"> </SPAN>rest<SPAN style="LETTER-SPACING: 2pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>paper<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>organized<SPAN style="LETTER-SPACING: 2pt"> </SPAN>as<SPAN style="LETTER-SPACING: 2pt"> </SPAN>follows.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>Related work is discussed in Section II. In Section III, we describe CockroachDB&#8217;s<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>architecture.<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>Section<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>IV<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>describes<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>dynamic timestamping technique employed by MaaT. An abstract overview of the integration of dynamic timestamp allocation<SPAN style="LETTER-SPACING: 2pt"> </SPAN>in CockroachDB is presented in Section V. The details of the integration<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>implementation<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>are<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>provided<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>Section<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>VI. Evaluation results are presented in Section VII. Section VIII concludes the paper.</P>
<OL type=I start=2>
<LI>
<P style="MARGIN-TOP: 0.09in; LINE-HEIGHT: 100%" align=left><FONT style="FONT-SIZE: 11pt" size=2><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Background</SPAN></FONT></SPAN></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.06in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>Snapshot Isolation (SI) has been implemented in major database<SPAN style="LETTER-SPACING: 2pt"> </SPAN>systems,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>like<SPAN style="LETTER-SPACING: 2pt"> </SPAN>Oracle<SPAN style="LETTER-SPACING: 2pt"> </SPAN>and<SPAN style="LETTER-SPACING: 2pt"> </SPAN>PostgreSQL.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>Fekete<SPAN style="LETTER-SPACING: 2pt"> </SPAN>et al. [15] illustrated that SI does not provide serializability and then subsequently Fekete et al. [14] studied the transaction patterns occurring in SI violations. Various techniques have been proposed to make Snapshot Isolation serializable. Some of the techniques [14], [16] perform static analysis of ap- plication code and detect SI violation patterns. The potential violations are translated into write-write conflicts, which are then<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>detected<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>by<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>snapshot<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>isolation.<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>However,<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>these<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>techniques are limited in scope and cannot be applied to systems dy- namically<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>generating<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>transactions.<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>Cahill<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>et<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>al.<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>[12]<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>develop a SSI (Serializable Snapshot Isolation) methodology to detect SI violations at run-time and implement the technique over existing snapshot isolation providing database, BerkleyDB. CockroachDB&#8217;s technique for providing serializable snapshot isolation<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>inspired<SPAN style="LETTER-SPACING: 2pt"> </SPAN>by<SPAN style="LETTER-SPACING: 2pt"> </SPAN>a<SPAN style="LETTER-SPACING: 2pt"> </SPAN>multi-version<SPAN style="LETTER-SPACING: 2pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 2pt"> </SPAN>order- ing [19] variant proposed by Yabandeh et al. [23].</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=right>Various<SPAN style="LETTER-SPACING: 1pt"> </SPAN>mechanisms<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>have<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>been<SPAN style="LETTER-SPACING: 1pt"> </SPAN>proposed<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1pt"> </SPAN>reduce<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>aborts in pessimistic as well as optimistic concurrency control (CC) algorithms.<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>For<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>locking<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>algorithms,<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>variants<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>2PL<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>such<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>as Order-shared<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>[6]<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>locking,<SPAN style="LETTER-SPACING: 1pt"> </SPAN>Altruistic<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>Locking<SPAN style="LETTER-SPACING: 1pt"> </SPAN>[20]<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1pt"> </SPAN>Trans- action<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>chopping<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>[21]<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>techniques<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>have<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>been<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>proposed<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>reduce aborts<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>achieve<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>higher<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>throughput.<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>Recent<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>works<SPAN style="LETTER-SPACING: 2pt"> </SPAN>[24]<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>have also explored performing static analysis of application code to order<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>locking<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>requests,<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>such<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>that<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>lock<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>contention<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>minimized. Among<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>lock-free<SPAN style="LETTER-SPACING: 2pt"> </SPAN>concurrency<SPAN style="LETTER-SPACING: 2pt"> </SPAN>control<SPAN style="LETTER-SPACING: 2pt"> </SPAN>schemes,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>many pessimistic,<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>as<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>well<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>as<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>optimistic<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>techniques<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>employ<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>times- tamps to enforce serializable order. The timestamp allocation may be done at the beginning or at the end of the transaction. If<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>a<SPAN style="LETTER-SPACING: 1pt"> </SPAN>transactional<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>operation<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>violates<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>order,<SPAN style="LETTER-SPACING: 1pt"> </SPAN>the transaction<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>aborted.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>Dynamic<SPAN style="LETTER-SPACING: 2pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 2pt"> </SPAN>allocation<SPAN style="LETTER-SPACING: 2pt"> </SPAN>[11] schemes have been developed to allocate transactions dynam- ically, rather than using a fixed timestamp allocation scheme. MaaT<SPAN style="LETTER-SPACING: 2pt"> </SPAN>[17]<SPAN style="LETTER-SPACING: 2pt"> </SPAN>employs<SPAN style="LETTER-SPACING: 2pt"> </SPAN>dynamic<SPAN style="LETTER-SPACING: 2pt"> </SPAN>timestamps<SPAN style="LETTER-SPACING: 2pt"> </SPAN>in<SPAN style="LETTER-SPACING: 2pt"> </SPAN>a<SPAN style="LETTER-SPACING: 2pt"> </SPAN>distributed setting.<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>MaaT<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>dynamically<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>allocates<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>logical<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>timestamps<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>during validation<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>phase<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>utilizes<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>soft<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>read<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>write<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>locks<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>avoid locking of items during two-phase commit (2PC) between the prepare<SPAN style="LETTER-SPACING: 2pt"> </SPAN>and<SPAN style="LETTER-SPACING: 2pt"> </SPAN>commit<SPAN style="LETTER-SPACING: 2pt"> </SPAN>phase.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>Our<SPAN style="LETTER-SPACING: 2pt"> </SPAN>proposed<SPAN style="LETTER-SPACING: 2pt"> </SPAN>technique<SPAN style="LETTER-SPACING: 2pt"> </SPAN>builds on<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>MaaT.<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>Tic-toc<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>[25]<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>uses<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>idea<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>dynamic<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>timestamp allocation<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>single-server<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>setting.<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>BCC<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>[26]<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>defines<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">essential</SPAN></P>
<P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>patterns which occur in<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>non-serializable patterns in<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>Optimistic concurrency control<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>(OCC)<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>algorithms.<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>Rather<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>than<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>aborting<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>a transaction on detecting an anti-dependency, as in OCC, BCC tracks dependencies to abort transactions only when these<SPAN style="LETTER-SPACING: 2pt"> </SPAN>non-serializable patterns are detected. Although a BCC like technique would reduce the number of aborts, it adds extra overhead to track dependencies.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Deterministic<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>scheduling<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>[22]<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>has<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>also<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>been<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>pro- posed<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>eliminate<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>aborts<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>improve<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>performance under<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>high<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>contention.<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>However,<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>such<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>techniques<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>need<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>priori knowledge of read-write sets and do not work in an ad-hoc transaction access setting, like in CockroachDB.</P>
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>CockroachDB&#8217;s [2] SSI technique employs timestamp allo- cation, is lock-free and can support distributed transactions. Hence, dynamic timestamping proposed in MaaT is a good fit for CockroachDB, since it is timestamp based and lock-free. The<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>SI<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>implementation<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>CockroachDB<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>also<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>provides<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>mech- anism to push commit timestamps for distributed transactions. However, this technique cannot be applied to SSI [3].</P>
<OL type=I start=3>
<LI>
<P style="MARGIN-TOP: 0.06in; LINE-HEIGHT: 100%" align=left><FONT style="FONT-SIZE: 11pt" size=2><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.1pt">CockroachDB</SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.5pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">overview</SPAN></FONT></SPAN></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=right>CockroachDB<SPAN style="LETTER-SPACING: 4pt"> </SPAN>[2]<SPAN style="LETTER-SPACING: 4pt"> </SPAN>is<SPAN style="LETTER-SPACING: 4pt"> </SPAN>an<SPAN style="LETTER-SPACING: 4pt"> </SPAN>open-source<SPAN style="LETTER-SPACING: 4pt"> </SPAN>distributed<SPAN style="LETTER-SPACING: 4pt"> </SPAN>cloud database<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>built<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>on<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>top<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>a<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>transactional<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>consistent<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>key- value store. Its primary design goals are scalability and strong consistency.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>CockroachDB<SPAN style="LETTER-SPACING: 2pt"> </SPAN>aims<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to<SPAN style="LETTER-SPACING: 2pt"> </SPAN>tolerate<SPAN style="LETTER-SPACING: 2pt"> </SPAN>disk,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>machine, rack, and datacenter<SPAN style="LETTER-SPACING: 1pt"> </SPAN>failures with minimal disruption and no manual intervention, thus being survivable (hence the name). CockroachDB achieves strong consistency by synchronous replication<SPAN style="LETTER-SPACING: 2pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>data.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>It<SPAN style="LETTER-SPACING: 2pt"> </SPAN>replicates<SPAN style="LETTER-SPACING: 2pt"> </SPAN>data<SPAN style="LETTER-SPACING: 2pt"> </SPAN>over<SPAN style="LETTER-SPACING: 2pt"> </SPAN>multiple<SPAN style="LETTER-SPACING: 2pt"> </SPAN>nodes and<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>guarantees<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>consistency<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>between<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>replicas<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>using<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>Raft<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>[18] consensus<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>protocol.<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>Cockroach<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>provides<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>transactional<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>access to<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>data.<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>It<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>supports<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>two<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>isolation<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>levels:<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>Snapshot<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>Isolation<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>(SI) and Serializable Snapshot Isolation (SSI). While both provide lock-free reads and writes, SI allows write-skew [9], and does not<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>guarantee<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>serializable<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>history.<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>SSI<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>eliminates<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>write-skew but<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>introduces<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>a<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>performance<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>hit<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>in<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>cases<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>of<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>high<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">contention.</SPAN></P>
<OL type=A>
<LI>
<P style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 100%" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Architecture</I></SPAN></FONT></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>CockroachDB implements a layered architecture as shown in Figure 2. The highest level of abstraction is the SQL Layer, which<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>acts<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>as<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>an<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>interface<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>application<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>clients.<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>Every<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>SQL statement received at this layer, is converted to an equivalent key-value operation.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>The Transaction Coordinator receives the key-value oper- ations from the SQL layer. It creates the context for the transaction if it is the first operation of the transaction or else forwards the request to the Distributed Sender in the context<SPAN style="LETTER-SPACING: 2pt"> </SPAN>of an existing transaction. The Transaction Coordinator also sends a begin transaction request to create transaction record<SPAN style="LETTER-SPACING: 2pt"> </SPAN>if the operation is the first write operation of the transaction, and also keeps track of the keys written by the transaction.</P>
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>The Distributed Sender communicates with any number of cockroach nodes. Each node contains one or more stores, one per physical storage device in that node. Each store contains potentially many ranges. Each range comprises a contiguous group of keys. A range is equivalent to a partition or a shard. Each range or shard can have multiple copies for providing fault tolerance. Ranges are defined by start and end keys.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>They<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>are<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>merged<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>split<SPAN style="LETTER-SPACING: 1pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>maintain<SPAN style="LETTER-SPACING: 1pt"> </SPAN>total<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>byte<SPAN style="LETTER-SPACING: 1pt"> </SPAN>size<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">within</SPAN></P></DIV>
<DIV id=Section4 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="PAGE-BREAK-BEFORE: always; MARGIN-LEFT: 0.24in"><IMG border=0 name="Image 14" src="file:///C:/Users/aaron/AppData/Local/Temp/lu30140a2d91x.tmp/lu30140a2d926_tmp_95008fe746c6f092.jpg" width=449 align=bottom height=254> </P>
<P class=western style="MARGIN-TOP: 0.03in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify>Fig. 2: Architecture of CockroachDB. Shows a cluster of 3 nodes (Node 1 to Node 3), and 3 ranges (Range A to Range<SPAN style="LETTER-SPACING: 4pt"> </SPAN>C) with full replication. Changes are replicated using Raft.</P>
<P class=western style="MARGIN-TOP: 0.05in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify>a<SPAN style="LETTER-SPACING: 2pt"> </SPAN>globally<SPAN style="LETTER-SPACING: 2pt"> </SPAN>configurable<SPAN style="LETTER-SPACING: 2pt"> </SPAN>min/max<SPAN style="LETTER-SPACING: 2pt"> </SPAN>size<SPAN style="LETTER-SPACING: 2pt"> </SPAN>interval.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>The<SPAN style="LETTER-SPACING: 2pt"> </SPAN>data<SPAN style="LETTER-SPACING: 2pt"> </SPAN>in the<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>multiple<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>copies<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>is<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>synchronized<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>using<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>Raft<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>[18],<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>[8],<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>at the granularity of the range. The Distributed Sender forwards the requests from the Transaction Coordinator to the lease holder of the range (Lease Holder is an entity within Raft, which holds a non-overlapping lease interval for a range) having the key on which request is operating upon. The lease holder<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>performs<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>read<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>writes<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>operations,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>while<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>ensuring that reads return the latest value, and writes are replicated to the majority of the servers, before successfully committing a <SPAN style="LETTER-SPACING: -0.1pt">transaction.</SPAN></P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>The<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>logical<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>entity<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>called<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>Replica<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>at<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>each<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>range&#8217;s<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>lease<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>holder is<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>responsible<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>for<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>creating<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>maintaining<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>records, updating the timestamp cache, performing read and write op- erations<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>by<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>calling<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>MVCC<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>(Multi<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>Version<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>Concurrency Control) Layer and also replicating the transaction record, write intents and resolving those intents using Raft.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>Data is stored in RocksDB [5]. RocksDB ensures efficient storage and access of data. Data stored in RocksDB includes the key-value data and all the versions associated to a key, as well as all the consensus state associated with Raft.</P>
<OL type=A start=2>
<LI>
<P style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 100%" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>Transaction</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>Processing</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>and</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>Concurrency</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Control</I></SPAN></FONT></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>CockroachDB uses a multi-version timestamp ordering protocol to guarantee that its transaction commit history is serializable. The default isolation level is called Serializable Snapshot Isolation(SSI). The SSI mechanism employed in CockroachDB is lock-free and ensures concurrent read-write transactions will never result in anomalies.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>Every<SPAN style="LETTER-SPACING: 2pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>assigned<SPAN style="LETTER-SPACING: 2pt"> </SPAN>a<SPAN style="LETTER-SPACING: 2pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 2pt"> </SPAN>(by<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>node on<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>which<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>it<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>starts)<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>when<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>it<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>begins.<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>This<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>is<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>used to resolve conflicts with respect to timestamp ordering. Each transaction has a transaction record, that stores the status of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the transaction. Every transaction starts with the initial status PENDING.<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>If<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>aborted<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>due<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>data<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>conflicts,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the status is changed to ABORTED, or else its status is changed<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to COMMITTED on commit.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>If<SPAN style="LETTER-SPACING: 2pt"> </SPAN>a<SPAN style="LETTER-SPACING: 2pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>distributed,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>i.e.,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>data<SPAN style="LETTER-SPACING: 2pt"> </SPAN>accessed<SPAN style="LETTER-SPACING: 2pt"> </SPAN>by the transaction is spread across multiple ranges, then the transaction record is maintained only at one of the servers having data accessed by the transaction. All the operations of the transaction update the same transaction record according<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to the status of the operation at the particular data server.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>CockroachDB keys store multiple timestamped versions of the<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>values.<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>Every<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>new<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>write<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>committed<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">creates</SPAN></P>
<P class=western style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>a<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>new<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>version<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>value<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>with<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>that<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>transaction. The write of an uncommitted transaction is added as an intent version with the timestamp of the transaction.</P>
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Read operations on a key return the most recent version with a smaller timestamp than the transaction. The timestamp of<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>performing<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>read<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>operation<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>is<SPAN style="LETTER-SPACING: 1.3pt"> </SPAN>recorded in a node-local timestamp cache. This cache returns the most recent timestamp of a transaction which read the key.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>All write operations consult the timestamp cache for the read timestamps of keys they are writing. If the returned timestamp<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>greater<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>than<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>transaction&#8217;s<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>timestamp,<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>then<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>this indicates a timestamp order violation. Hence, the transaction<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is aborted and restarted with a larger timestamp.</P>
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Operations in CockroachDB are only allowed to read or write committed values; operations are never allowed to op- erate on an uncommitted value. That is, if an uncommitted transaction wants to read or write a value of a key and if it<SPAN style="LETTER-SPACING: 2pt"> </SPAN>sees a write intent for that key, one of those transactions is aborted based on their priorities.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>SSI,<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>due<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>its<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>restrictive<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>policy<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>avoid<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>read-write<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>conflicts, ends up aborting or restarting many transactions. With fixed timestamp allocation for transactions, SSI trades performance for correctness under high contention. Our interest is in increasing performance by eliminating the unnecessary aborts realized by SSI by dynamically assigning timestamps to transactions based on the conflicts, such that they follow a serializable timestamp order.</P>
<OL type=I start=4>
<LI>
<P style="MARGIN-TOP: 0.06in; LINE-HEIGHT: 100%" align=left><FONT style="FONT-SIZE: 11pt" size=2><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2>MaaT</FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.7pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">overview</SPAN></FONT></SPAN></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=right>MaaT<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>(Multi-access<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>as<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>a<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>Transaction)<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>[17]<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>re-designs<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>the optimistic<SPAN style="LETTER-SPACING: 2pt"> </SPAN>concurrency<SPAN style="LETTER-SPACING: 2pt"> </SPAN>control<SPAN style="LETTER-SPACING: 2pt"> </SPAN>(OCC)<SPAN style="LETTER-SPACING: 2pt"> </SPAN>protocol<SPAN style="LETTER-SPACING: 2pt"> </SPAN>in<SPAN style="LETTER-SPACING: 2pt"> </SPAN>order<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to make<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>it<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>practical<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>for<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>distributed,<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>high-throughput<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>transactional processing<SPAN style="LETTER-SPACING: 1pt"> </SPAN>systems.<SPAN style="LETTER-SPACING: 1pt"> </SPAN>To<SPAN style="LETTER-SPACING: 1pt"> </SPAN>achieve<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>high-throughput<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>with<SPAN style="LETTER-SPACING: 1pt"> </SPAN>update intensive<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>workloads,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>MaaT<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>assigns<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>dynamic<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>timestamps<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the transaction,<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>instead<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>fixed<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>timestamps,<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>re-designs<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>the verification<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>phase<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>OCC<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>so<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>as<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>reduce<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>abort rate.<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>In<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>particular,<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>a<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>mere<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>conflict<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>between<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>two<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>transactions should<SPAN style="LETTER-SPACING: 2pt"> </SPAN>not<SPAN style="LETTER-SPACING: 2pt"> </SPAN>be<SPAN style="LETTER-SPACING: 2pt"> </SPAN>enough<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to<SPAN style="LETTER-SPACING: 2pt"> </SPAN>restart<SPAN style="LETTER-SPACING: 2pt"> </SPAN>them;<SPAN style="LETTER-SPACING: 2pt"> </SPAN>instead,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>system should<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>try<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>figure<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>out<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>whether<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>this<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>conflict<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>really<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>violates serializability,<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>should<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>tolerate<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>conflicts<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>whenever<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>possible. While<SPAN style="LETTER-SPACING: 2pt"> </SPAN>performing<SPAN style="LETTER-SPACING: 2pt"> </SPAN>read<SPAN style="LETTER-SPACING: 2pt"> </SPAN>and<SPAN style="LETTER-SPACING: 2pt"> </SPAN>write<SPAN style="LETTER-SPACING: 2pt"> </SPAN>operations,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>each<SPAN style="LETTER-SPACING: 2pt"> </SPAN>trans- action<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>maintains<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>updates<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>valid<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>ranges<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>it<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>can commit<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>in,<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>based<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>on<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>data<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>items<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>accessed<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.1pt"> </SPAN>conflicting operations<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>on<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>those<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>data<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>items.<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>At<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>commit<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>time,<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>if<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>there<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>is a<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>valid<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>range<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>for<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>commit,<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>then a<SPAN style="LETTER-SPACING: 2pt"> </SPAN>commit<SPAN style="LETTER-SPACING: 2pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 2pt"> </SPAN>will<SPAN style="LETTER-SPACING: 2pt"> </SPAN>be<SPAN style="LETTER-SPACING: 2pt"> </SPAN>chosen<SPAN style="LETTER-SPACING: 2pt"> </SPAN>from<SPAN style="LETTER-SPACING: 2pt"> </SPAN>that<SPAN style="LETTER-SPACING: 2pt"> </SPAN>valid<SPAN style="LETTER-SPACING: 2pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">range.</SPAN></P>
<P class=western style="LINE-HEIGHT: 103%">Employing timestamp ranges allows the flexibility to shift the commit timestamp to fit it in the logical serializable order.</P>
<P class=western style="MARGIN-TOP: 0.04in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Design</I></SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 95%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>MaaT assigns a timestamp range with a lower and upper bound for each transaction, instead of a fixed timestamp. Initially,<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>lower<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>bound<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>set<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>0<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>upper<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>bound<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>set to <FONT face="Lucida Sans Unicode, serif">&#8734;</FONT>. The lower and upper bounds are adjusted dynamically with<SPAN style="LETTER-SPACING: 2pt"> </SPAN>respect<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>data<SPAN style="LETTER-SPACING: 2pt"> </SPAN>conflicts<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>transaction.<SPAN style="LETTER-SPACING: 2.1pt"> </SPAN><SPAN style="LETTER-SPACING: -0.2pt">MaaT</SPAN></P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>employs<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>soft<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>locks,<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>which<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>do<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>not<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>block<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>transactions,<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>act as markers to inform transactions accessing a data item about other transactions that have read or written that data item but not committed yet.</P></DIV>
<DIV id=Section5 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="MARGIN-TOP: 0.02in; PAGE-BREAK-BEFORE: always; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>Each transaction can either be single-sited or distributed. For<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>distributed<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>transaction,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>one<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>servers<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>involved<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the transaction is declared the transaction coordinator. Timestamp range is maintained at each of the servers accessed by the transaction. Next, we describe how the timestamp range are dynamically adjusted, and used to allocate commit timestamp to<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>transactions.<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>This<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>one<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>core<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>components<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>MaaT, which leads to reduced aborts under contention.</P>
<P class=western style="LINE-HEIGHT: 78%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2>If </FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>and </FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.6pt"><I> </I></SPAN></FONT></FONT><SUP><FONT face="Lucida Sans Unicode, serif"><FONT style="FONT-SIZE: 10pt" size=2>&#8242;</FONT></FONT></SUP><FONT face="Lucida Sans Unicode, serif"><FONT style="FONT-SIZE: 10pt" size=2> </FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>are two transactions, with lower bounds, </FONT><FONT style="FONT-SIZE: 10pt" size=2><I>lowerbound(T) </I></FONT><FONT style="FONT-SIZE: 10pt" size=2>and </FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>lowerbound</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>(</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.6pt"><I> </I></SPAN></FONT></FONT><SUP><FONT face="Lucida Sans Unicode, serif"><FONT style="FONT-SIZE: 10pt" size=2>&#8242;</FONT></FONT></SUP><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>) </FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>and upper bounds, </FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>upperbound</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>(</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.6pt"><I> </I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>) </FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>and </FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>upperbound</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>(</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.6pt"><I> </I></SPAN></FONT></FONT><SUP><FONT face="Lucida Sans Unicode, serif"><FONT style="FONT-SIZE: 10pt" size=2>&#8242;</FONT></FONT></SUP><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>)</FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>. Whenever </FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>reads a data</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>item, which has a write soft lock by </FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.6pt"><I> </I></SPAN></FONT></FONT><SUP><FONT face="Lucida Sans Unicode, serif"><FONT style="FONT-SIZE: 10pt" size=2>&#8242;</FONT></FONT></SUP><FONT style="FONT-SIZE: 10pt" size=2>, MaaT adjusts the</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.6pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>upperbound</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>(</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -1pt"><I> </I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>)</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>to</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>be</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>less</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>than</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>lowerbound</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>(</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -1pt"><I> </I></SPAN></FONT></FONT><SUP><FONT face="Lucida Sans Unicode, serif"><FONT style="FONT-SIZE: 10pt" size=2>&#8242;</FONT></FONT></SUP><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>)</FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>,</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.8pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>so</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.2pt">that</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0.42in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>currently being written by the transaction. If this is the case, the transaction is aborted.</P>
<P class=western style="MARGIN-LEFT: 0.42in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: -0.2in" align=justify>2)<SPAN style="LETTER-SPACING: 2pt"> </SPAN>When reading an item, if there is a write intent created with a lower timestamp, then the SSI approach in CockroachDB will abort one of the transactions. The transaction<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>abort<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>will<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>be<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>decided<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>based<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>on<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>priority of the transactions involved.</P>
<P class=western style="MARGIN-TOP: 0.03in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Dynamic timestamp allocation can help reduce some of the aborts<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>above<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>cases.<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>It<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>allows<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>more<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>concurrent<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>operations to commit by dynamically trying to commit the transaction on a logical timeline based on order of access of items. Consider the following example.</P>
<P class=western style="MARGIN-LEFT: 0.22in; LINE-HEIGHT: 0.12in" align=justify><I>Example</I><SPAN style="LETTER-SPACING: 0.6pt"><I> </I></SPAN><I>1:</I><SPAN style="LETTER-SPACING: 1.9pt"><I> </I></SPAN>Lets<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>consider<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>following<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>two<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">transactions.</SPAN></P></DIV>
<DIV id=Section6 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="LINE-HEIGHT: 0.17in" align=justify><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2.4pt"><I> </I></SPAN></FONT>executes<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>as<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>if<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>did<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>not<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>see<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>updates<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>made<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>by<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: -0.9pt"><I> </I></SPAN></FONT><SUP><FONT face="Lucida Sans Unicode, serif"><SPAN style="LETTER-SPACING: -0.3pt">&#8242;</SPAN></FONT></SUP><SPAN style="LETTER-SPACING: -0.3pt">.</SPAN></P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 83%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>Whenever <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT>writes a data item, which has a read soft lock by <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: -0.6pt"><I> </I></SPAN></FONT><SUP><FONT face="Lucida Sans Unicode, serif">&#8242;</FONT></SUP>, MaaT adjusts the <FONT face="Calibri, serif"><I>lowerbound</I></FONT><FONT face="Calibri, serif">(</FONT><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: -0.6pt"><I> </I></SPAN></FONT><FONT face="Calibri, serif">) </FONT>to be greater than <I>upperbound(T&#8217;)</I>, so that <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: -0.6pt"><I> </I></SPAN></FONT><SUP><FONT face="Lucida Sans Unicode, serif">&#8242;</FONT></SUP><FONT face="Lucida Sans Unicode, serif"> </FONT>executes as if it did not see the updates that will be made by <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: -0.5pt"><I> </I></SPAN></FONT>.</P>
<P class=western style="MARGIN-LEFT: 0.22in; LINE-HEIGHT: 0.16in" align=justify>Whenever<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 1.8pt"><I> </I></SPAN></FONT>writes<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>a<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>data<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>item,<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>which<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>has<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>a<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>write<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>soft<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN><SPAN style="LETTER-SPACING: -0.2pt">lock</SPAN></P>
<P class=western style="LINE-HEIGHT: 0.1in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2>by</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.8pt"><I> </I></SPAN></FONT></FONT><SUP><FONT face="Lucida Sans Unicode, serif"><FONT style="FONT-SIZE: 10pt" size=2>&#8242;</FONT></FONT></SUP><FONT style="FONT-SIZE: 10pt" size=2>,</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>MaaT</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>adjusts</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>the</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.1pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>lowerbound</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>(</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.8pt"><I> </I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>)</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.3pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>to</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>be</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>greater</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.2pt">than</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 1.38in; LINE-HEIGHT: 0.17in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>T</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.2pt"><I> </I></SPAN></FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>:</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.5pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>r</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.6pt"><I> </I></SPAN></FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>(y)</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.5pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>r</I></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.6pt"><I> </I></SPAN></FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt">(x)</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 1.36in; LINE-HEIGHT: 0.17in"><SPAN class=sd-abs-pos style="WIDTH: 8px; POSITION: absolute; LEFT: 1.46in; TOP: -0.11in"></SPAN><SPAN id=Frame17 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.06in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 5.71in; BORDER-LEFT: medium none; TOP: 3in; PADDING-RIGHT: 0in" dir=ltr>
<P style="MARGIN-TOP: 0in; MARGIN-LEFT: 0in; LINE-HEIGHT: 0.09in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">1</SPAN></FONT></FONT></FONT></P></SPAN><SPAN class=sd-abs-pos style="WIDTH: 8px; POSITION: absolute; LEFT: 1.72in; TOP: -0.11in"></SPAN><SPAN id=Frame18 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.06in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 5.97in; BORDER-LEFT: medium none; TOP: 3in; PADDING-RIGHT: 0in" dir=ltr>
<P style="MARGIN-TOP: 0in; MARGIN-LEFT: 0in; LINE-HEIGHT: 0.09in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">1</SPAN></FONT></FONT></FONT></P></SPAN><SPAN class=sd-abs-pos style="WIDTH: 8px; POSITION: absolute; LEFT: 2.05in; TOP: -0.11in"></SPAN><SPAN id=Frame19 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.06in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 6.3in; BORDER-LEFT: medium none; TOP: 3in; PADDING-RIGHT: 0in" dir=ltr>
<P style="MARGIN-TOP: 0in; MARGIN-LEFT: 0in; LINE-HEIGHT: 0.09in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">1</SPAN></FONT></FONT></FONT></P></SPAN><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB><FONT face="Roboto, serif"> </FONT>: <FONT face="Calibri, serif"><I>r</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB>(x) <FONT face="Calibri, serif"><I>w</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB>(x) 
<P></P>
<P class=western style="LINE-HEIGHT: 103%; TEXT-INDENT: 0.14in">Suppose the execution history comprising the two transac- tions is as follows.</P>
<P class=western style="MARGIN-LEFT: 0.22in; LINE-HEIGHT: 0.17in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>H</I></FONT></FONT><SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2>1</FONT></FONT></SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.5pt"> </SPAN></FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>:</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>b</I></FONT></FONT><SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2>2</FONT></FONT></SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>r</I></FONT></FONT><SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2>2</FONT></FONT></SUB><FONT style="FONT-SIZE: 10pt" size=2>(x)</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>b</I></FONT></FONT><SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2>1</FONT></FONT></SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>r</I></FONT></FONT><SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2>1</FONT></FONT></SUB><FONT style="FONT-SIZE: 10pt" size=2>(y)</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>r</I></FONT></FONT><SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2>1</FONT></FONT></SUB><FONT style="FONT-SIZE: 10pt" size=2>(x)</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>c</I></FONT></FONT><SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2>1</FONT></FONT></SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.5pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><I>w</I></FONT></FONT><SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2>2</FONT></FONT></SUB><FONT style="FONT-SIZE: 10pt" size=2>(x)</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"><I>c</I></SPAN></FONT></FONT><SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt">2</SPAN></FONT></FONT></SUB></FONT></P>
<P class=western style="MARGIN-LEFT: 0.22in; LINE-HEIGHT: 0.17in">Transaction<SPAN style="LETTER-SPACING: 1pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB><FONT face="Roboto, serif"><SPAN style="LETTER-SPACING: 1.5pt"> </SPAN></FONT>begins<SPAN style="LETTER-SPACING: 1pt"> </SPAN>before<SPAN style="LETTER-SPACING: 1pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">1</FONT></SUB>,<SPAN style="LETTER-SPACING: 1pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1pt"> </SPAN>hence<SPAN style="LETTER-SPACING: 1pt"> </SPAN>is<SPAN style="LETTER-SPACING: 1pt"> </SPAN>assigned<SPAN style="LETTER-SPACING: 1pt"> </SPAN><SPAN style="LETTER-SPACING: -0.3pt">an</SPAN></P>
<P class=western style="LINE-HEIGHT: 0.05in">earlier<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>than<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 1.5pt"><I> </I></SPAN></FONT>.<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>At<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN><FONT face="Calibri, serif"><I>w</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 1.5pt"><I> </I></SPAN></FONT><FONT face="Calibri, serif">(</FONT><FONT face="Calibri, serif"><I>x</I></FONT><FONT face="Calibri, serif">)</FONT>,<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>SSI<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>approach<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN><SPAN style="LETTER-SPACING: -0.3pt">in</SPAN></P></DIV>
<DIV id=Section7 dir=ltr>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0.03in; LINE-HEIGHT: 3%" align=center><SUB><SPAN style="LETTER-SPACING: -0.5pt">&#8242;</SPAN></SUB><FONT style="FONT-SIZE: 11pt" size=2><SUB><FONT face="Lucida Sans Unicode, serif"><FONT style="FONT-SIZE: 7pt" size=1> </FONT></FONT></SUB><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">1</SPAN></FONT></FONT><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 7pt" size=1> </FONT></FONT><FONT face="Roboto, serif"><FONT style="FONT-SIZE: 7pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">2</SPAN></FONT></FONT></FONT></P></DIV>
<DIV id=Section8 style="column-count: 3" dir=ltr gutter="8">
<P class=western style="LINE-HEIGHT: 0.15in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>upperbound(T&#8217;)</I></FONT><FONT style="FONT-SIZE: 10pt" size=2>,</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>so</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>that</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.3pt"> </SPAN></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.5pt"><I>T</I></SPAN></FONT></FONT></FONT></P>
<P class=western style="LINE-HEIGHT: 0.14in">executes<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>as<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>if<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>it<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>did<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>not<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>see<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN><SPAN style="LETTER-SPACING: -0.3pt">the</SPAN></P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 0.16in">Cockroach<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>DB<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>sees<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>that<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>x<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>is<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>read<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>by<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">1</FONT></SUB>,<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>which<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN>is a<SPAN style="LETTER-SPACING: 0.1pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">transaction</SPAN></P></DIV>
<DIV id=Section9 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="LINE-HEIGHT: 0.14in" align=justify>updates<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>that<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>will<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>be<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>made<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>by<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: -0.9pt"><I> </I></SPAN></FONT><SPAN style="LETTER-SPACING: -0.5pt">.</SPAN></P>
<P class=western style="MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=right>In<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>validation<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>phase,<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>range<SPAN style="LETTER-SPACING: 1.7pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT>and/or the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 2pt"> </SPAN>ranges<SPAN style="LETTER-SPACING: 2pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>other<SPAN style="LETTER-SPACING: 2pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: 2pt"> </SPAN>are<SPAN style="LETTER-SPACING: 2pt"> </SPAN>adjusted<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to ensure<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>that<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>ranges<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>conflicting<SPAN style="LETTER-SPACING: 1.6pt"> </SPAN>transactions do not overlap. The outcome of these validation operations is to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>determine<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>whether<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>constraints<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>on<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>commit<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>timestamp of <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT>can be satisfied or not; that is, whether <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT>can commit or not, by finding a timestamp to fit <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 1.7pt"><I> </I></SPAN></FONT>in the logical serialization order.<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>Transaction<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT>is<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>aborted<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>if<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>there<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>is<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>an<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>overlap<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>the timestamp<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>range<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>with<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>other<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>concurrent<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>or<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>if<SPAN style="LETTER-SPACING: 1.2pt"> </SPAN>the lower<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>bound<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>of<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT>is<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>greater<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>than<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>its<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>upper<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>bound;<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>otherwise, <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT>is<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>committed,<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>and<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>client<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>picks<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>an<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>arbitrary<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>timestamp from the intersection range to be the commit timestamp of <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: -0.9pt"><I> </I></SPAN></FONT>. If <FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2pt"><I> </I></SPAN></FONT>is a distributed transaction, each data server accessed by</P>
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify><FONT face="Calibri, serif"><I>T</I></FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 1.4pt"><I> </I></SPAN></FONT>adjusts<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>range<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>on<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>server<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>based<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>on<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>items accessed there. All these ranges are sent to the coordinator of the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>distributed<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>transaction.<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>If<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>there<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>valid<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>intersecting<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>range in the timestamp ranges sent by all the servers, the transaction is committed. Otherwise, the transaction aborts.</P>
<OL type=I start=5>
<LI>
<P style="MARGIN-TOP: 0.05in; LINE-HEIGHT: 100%" align=left><FONT style="FONT-SIZE: 11pt" size=2><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2>Abstract</FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.6pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2>Overview</FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.6pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2>of</FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.7pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2>Dynamic</FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2.6pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Timestamp</SPAN></FONT></SPAN></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 0.6in"><SPAN style="FONT-VARIANT: small-caps">Ordering</SPAN><SPAN style="FONT-VARIANT: small-caps"><SPAN style="LETTER-SPACING: 2.8pt"> </SPAN></SPAN><SPAN style="FONT-VARIANT: small-caps">Adaptation</SPAN><SPAN style="FONT-VARIANT: small-caps"><SPAN style="LETTER-SPACING: 2.8pt"> </SPAN></SPAN><SPAN style="FONT-VARIANT: small-caps">in</SPAN><SPAN style="FONT-VARIANT: small-caps"><SPAN style="LETTER-SPACING: 3pt"> </SPAN></SPAN><SPAN style="FONT-VARIANT: small-caps">Cockroach</SPAN><SPAN style="FONT-VARIANT: small-caps"><SPAN style="LETTER-SPACING: 2.8pt"> </SPAN></SPAN><SPAN style="FONT-VARIANT: small-caps"><SPAN style="LETTER-SPACING: -0.3pt">DB</SPAN></SPAN></P>
<P class=western style="MARGIN-TOP: 0.03in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>Employing SSI in CockroachDB ensures correctness, but it decreases the performance at high contention. Adapting SSI approach in CockroachDB to work with dynamic timestamps will avoid aborting transactions that can be serialized by changing their timestamps with regards to their data conflicts. Next,<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>an<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>example is<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>analyzed to<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>illustrate<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>how dynamic times- tamping can lead to reduced aborts as compared to the current concurrency<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>control<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>technique<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>employed<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>CockorachDB.<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>We then describe the data structures introduced in CockroachDB to enable dynamic timestamping mechanism.</P>
<OL type=A>
<LI>
<P style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 100%" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>Reducing</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.5pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>aborts</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.5pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>with</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.5pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>dynamic</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.6pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>timestamping</I></SPAN></FONT></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.03in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>When the isolation level in CockroachDB is set to SSI, transactions are aborted in following cases:</P>
<P class=western style="MARGIN-TOP: 0.03in; MARGIN-LEFT: 0.42in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: -0.2in" align=justify>1)<SPAN style="LETTER-SPACING: 2pt"> </SPAN>Conflicts are analyzed at every write, to check whether any<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>later<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>have<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>read<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>or<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>written<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>data<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN><SPAN style="LETTER-SPACING: -0.2pt">item</SPAN></P>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-RIGHT: 0.08in" align=justify>with a later timestamp. To ensure timestamp ordering given<SPAN style="LETTER-SPACING: 2pt"> </SPAN>by the fixed timestamp allocation, transaction <FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB><FONT face="Roboto, serif"> </FONT>is aborted since it causes RW conflict with <FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">1</FONT></SUB>, and violates the logical timestamp order according to the allocated timestamps.</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 95%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>In case of using the dynamic timestamping technique, suppose <FONT face="Calibri, serif"><I>lowerbound</I></FONT><FONT face="Calibri, serif">(</FONT><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">1</FONT></SUB><FONT face="Calibri, serif">) </FONT>and <FONT face="Calibri, serif"><I>lowerbound</I></FONT><FONT face="Calibri, serif">(</FONT><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB><FONT face="Calibri, serif">) </FONT>are the lower bounds and <FONT face="Calibri, serif"><I>upperbound</I></FONT><FONT face="Calibri, serif">(</FONT><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">1</FONT></SUB><FONT face="Calibri, serif">) </FONT>and <FONT face="Calibri, serif"><I>upperbound</I></FONT><FONT face="Calibri, serif">(</FONT><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB><FONT face="Calibri, serif">) </FONT>are the<SPAN style="LETTER-SPACING: 4pt"> </SPAN>upper<SPAN style="LETTER-SPACING: 2pt"> </SPAN>bounds<SPAN style="LETTER-SPACING: 2pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: 2pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">1</FONT></SUB><FONT face="Roboto, serif"><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT>and<SPAN style="LETTER-SPACING: 2pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB><FONT face="Roboto, serif"><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT>respectively.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>On<SPAN style="LETTER-SPACING: 2pt"> </SPAN>detecting<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>RW<SPAN style="LETTER-SPACING: 2pt"> </SPAN>conflict<SPAN style="LETTER-SPACING: 2pt"> </SPAN>at<SPAN style="LETTER-SPACING: 2pt"> </SPAN><FONT face="Calibri, serif"><I>w</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB>,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN><FONT face="Calibri, serif"><I>lowerbound</I></FONT><FONT face="Calibri, serif">(</FONT><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB><FONT face="Calibri, serif">)</FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 4pt"> </SPAN></FONT>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>made<SPAN style="LETTER-SPACING: 2pt"> </SPAN>greater<SPAN style="LETTER-SPACING: 2pt"> </SPAN>than<SPAN style="LETTER-SPACING: 2pt"> </SPAN><FONT face="Calibri, serif"><I>upperbound</I></FONT><FONT face="Calibri, serif">(</FONT><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">1</FONT></SUB><FONT face="Calibri, serif">)</FONT><FONT face="Calibri, serif"><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT>so<SPAN style="LETTER-SPACING: 2pt"> </SPAN>that<SPAN style="LETTER-SPACING: 2pt"> </SPAN>history<SPAN style="LETTER-SPACING: 2pt"> </SPAN>will<SPAN style="LETTER-SPACING: 2pt"> </SPAN>be<SPAN style="LETTER-SPACING: 2pt"> </SPAN>equivalent<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>serialization<SPAN style="LETTER-SPACING: 2pt"> </SPAN>order<SPAN style="LETTER-SPACING: 2pt"> </SPAN><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">1</FONT></SUB><FONT face="Roboto, serif"><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT face="Lucida Sans Unicode, serif">&#8722;&#8594; </FONT><FONT face="Calibri, serif"><I>T</I></FONT><SUB><FONT face="Roboto, serif">2</FONT></SUB>.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>Rather than<SPAN style="LETTER-SPACING: 2.9pt"> </SPAN>aborting<SPAN style="LETTER-SPACING: 3pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2.9pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 3pt"> </SPAN>due<SPAN style="LETTER-SPACING: 3pt"> </SPAN>to<SPAN style="LETTER-SPACING: 2.9pt"> </SPAN>an<SPAN style="LETTER-SPACING: 3pt"> </SPAN>initially<SPAN style="LETTER-SPACING: 3pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">allocated</SPAN></P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>timestamp order, the dynamic timestamp allocation can re- order the logical transaction order, and lead to commitment of both the transactions in this case.</P>
<OL type=A start=2>
<LI>
<P style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 121%; MARGIN-RIGHT: 1.06in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>Data Structure changes in CockroachDB Transaction Record</I></FONT></FONT></P></LI></OL>
<P class=western style="MARGIN-LEFT: 0.22in; LINE-HEIGHT: 0.13in" align=justify>CockroachDB<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>maintains<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>record<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>for<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>each<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">trans-</SPAN></P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>action, which maintains the transaction ID and transaction state.<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>We<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>add<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>two<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>fields<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>hold<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>lower<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>upper<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>bounds<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>of the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>transaction.<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN><I>CommitBeforeQueue</I><SPAN style="LETTER-SPACING: -0.1pt"><I> </I></SPAN>field<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>added<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>hold<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the list of transactions before which the current transaction has to commit. <I>CommitAfterQueue </I>holds the list of transactions after which the current transaction can commit.</P>
<P class=western style="MARGIN-TOP: 0.03in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Timestamp</I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.6pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>cache</I></SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>For each data item CockroachDB maintains the timestamp of last read and last written transaction in its <I>timestamp</I><SPAN style="LETTER-SPACING: 4pt"><I> </I></SPAN><I>cache</I>. In the SSI approach, this can be updated even by uncommitted<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>transactions.<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>We<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>modify<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>mechanism<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>updating the timestamp cache in CockroachDB to ensure timestamps in the read cache are updated only by committed transactions.</P>
<P class=western style="MARGIN-TOP: 0.03in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>Soft</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.6pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>Locks</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.6pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>and</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.6pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>Soft</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.6pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>Lock</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.6pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.2pt"><I>Cache</I></SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Soft Locks are non blocking markers to inform other transactions about ongoing transactions. Soft Locks comprise transaction-metadata, which is used to locate the transaction record<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>of<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>that<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>placed<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>soft<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>lock.<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>A<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>read<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN><SPAN style="LETTER-SPACING: -0.2pt">soft</SPAN></P></DIV>
<DIV id=Section10 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="MARGIN-TOP: 0.02in; PAGE-BREAK-BEFORE: always; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify>lock is placed while reading and a write soft lock is placed while writing the data items. The Soft Lock Cache holds the read soft locks and write soft locks per key.</P>
<OL type=I start=6>
<LI>
<P style="MARGIN-TOP: 0.06in; LINE-HEIGHT: 100%" align=left><FONT style="FONT-SIZE: 11pt" size=2><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2>Integrating</FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 3.7pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2>dynamic</FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 3.7pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2>timestamp</FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 3.7pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2>ordering</FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 3.7pt"> </SPAN></FONT></SPAN><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt">in</SPAN></FONT></SPAN></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 1.48in"><SPAN style="FONT-VARIANT: small-caps"><SPAN style="LETTER-SPACING: -0.1pt">CockroachDB</SPAN></SPAN></P>
<P class=western style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>We now describe the integration of dynamic timestamping mechanism in CockroachDB. First, the handling of different operations of the transaction is described. Then, we describe the<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>changes<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>implemented<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>at<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>different<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>layers<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN>in<SPAN style="LETTER-SPACING: 0.3pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">CockroachDB.</SPAN></P>
<OL type=A>
<LI>
<P style="MARGIN-TOP: 0.05in; LINE-HEIGHT: 100%" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Transaction</I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.6pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Lifecyle</I></SPAN></FONT></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>As described earlier, a transaction comprises of begin, read, write and commit operations. On every read operation, a soft read lock is placed on the key being read and soft write locks that are already placed on the key are collected. The soft write locks are then placed in the corresponding transaction record. The <I>CommitBeforeQueue </I>is populated with the transactions which correspond to the soft write locks on the data item, indicating that the transaction reading the item should commit before all the transactions, which have a soft write lock on the item.<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>As<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>read<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>of<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>item<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>does<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>not<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>reflect<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>update<SPAN style="LETTER-SPACING: 1.4pt"> </SPAN>of the transactions intending to write the item, its logical commit order<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>should<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>be<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>before<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>such<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>transactions.<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN><I>CommitBeforeQueue </I>is used during transaction validation to enforce the transaction ordering implied by the queue.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>On<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>every<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>write,<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>instead<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>aborting<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>on<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>detecting a<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>conflict<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>based<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>on<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>fixed<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>timestamps,<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>soft<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>write<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>lock<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>placed on the key being written and, read and write soft locks that<SPAN style="LETTER-SPACING: 4pt"> </SPAN>are already placed on the key are collected and placed in the transaction record. The <I>CommitAfterQueue </I>is populated with the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>which<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>correspond<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>soft<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>read<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>locks<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>on<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the data item, indicating that the current transaction intending to write<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>data<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>item,<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>should<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>commit<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>after<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>which have a soft read lock on the item (implying the intention to read the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>data item).<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>As the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>read performed by<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the transactions, which have the soft read lock, does not reflect the write operation of the current transaction, the current transaction&#8217;s logical commit order should be after the transactions with the soft read lock. <I>CommitAfterQueue </I>is also populated with the transactions which correspond to the soft write locks on the data item, indicating that the current transaction intending to write<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>data<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>item,<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>should<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>commit<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>after<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>which have a soft write lock on the item.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>Along<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>with<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>above<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>described<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>processing,<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>on<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>every<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>read<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>or write operation, the lower bound of the transaction is adjusted to be equal to the last committed write timestamp (or read timestamp), which is retrieved from the timestamp cache.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>When a commit request for the transaction is sent, a valida- tion phase is executed. During the validation phase, the lower and upper bounds of the transaction are adjusted such that the transaction commits before all the entries in <I>CommitBefore- Queue</I><SPAN style="LETTER-SPACING: -0.2pt"><I> </I></SPAN>and<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>commits<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>after<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>all<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>entries<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN><I>CommitAfterQueue</I>. The <I>CommitBeforeQueue </I>and <I>CommitAfterQueue </I>have been populated with all the transactions, which have conflicting operations with the given transactions. Hence, respecting the commitment order enforced by the queues, guarantees that<SPAN style="LETTER-SPACING: 4pt"> </SPAN>the transaction orders all conflicting operations and preserves serializability.<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>The<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>upper<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>bound<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>of<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>is<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">updated</SPAN></P>
<P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>to<SPAN style="LETTER-SPACING: 2pt"> </SPAN>be<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>minimum<SPAN style="LETTER-SPACING: 2pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>its<SPAN style="LETTER-SPACING: 2pt"> </SPAN>current<SPAN style="LETTER-SPACING: 2pt"> </SPAN>upper<SPAN style="LETTER-SPACING: 2pt"> </SPAN>bound<SPAN style="LETTER-SPACING: 2pt"> </SPAN>and<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the lower bound of each transaction in the <I>CommitBeforeQueue</I>. Similarly, the lower bound of the transaction is updated to be the maximum of current lower bound and the upper bound of each transaction in the <I>CommitAfterQueue</I>.</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>The timestamp range of the transaction is then checked to see if the lower bound of the transaction is less than its upper bound.<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>If<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>so,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>committed<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>by<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>picking<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>lower bound,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>as<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>commit<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>timestamp;<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>otherwise<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.9pt"> </SPAN>transaction is aborted. The transaction status in the transaction record is updated accordingly as COMMITTED or ABORTED.</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>On<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>both<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>commit<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>abort<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>transaction,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>soft<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>read<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>locks and soft write locks held by that transaction are released. On commit, the write soft locks will be resolved to actual write operations in the DB. The read and write timestamps of the items accessed by the committed transaction will be updated<SPAN style="LETTER-SPACING: 2pt"> </SPAN>in the timestamp cache.</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>If<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: 2pt"> </SPAN>spans<SPAN style="LETTER-SPACING: 2pt"> </SPAN>across<SPAN style="LETTER-SPACING: 2pt"> </SPAN>multiple<SPAN style="LETTER-SPACING: 2pt"> </SPAN>ranges,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>RPCs<SPAN style="LETTER-SPACING: 4pt"> </SPAN>are used to update the transaction record during read and<SPAN style="LETTER-SPACING: 4pt"> </SPAN>write operation and to validate the transaction at the remote range (employing the validation strategy to update transaction bounds described above) during validation phase. The soft locks in the remote ranges are resolved asynchronously using RPCs, while the soft locks local to the range are resolved synchronously during the end transaction request.</P>
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>The dynamic timestamp allocation based proposed design makes use of the soft locks to detect the conflicting transac- tions.<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>It<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>then<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>tries<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>reorder<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>by<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>analyzing<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>these conflicts<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>and<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>allocating<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>dynamic<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>timestamps<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>transactions to fit them in a logical serializable timestamp order.</P>
<OL type=A start=2>
<LI>
<P style="MARGIN-TOP: 0.07in; LINE-HEIGHT: 100%" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>Implementation</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Details</I></SPAN></FONT></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.05in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Multiple components have been modified in CockroachDB to integrate the dynamic timestamp ordering approach.</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>The Transaction Coordinator is modified to send the begin transaction request to create transaction record on the first operation of the transaction rather than on first write of the transaction. Transaction coordinator now additionally tracks the keys read by the transaction along with the keys written<SPAN style="LETTER-SPACING: 4pt"> </SPAN>by the transaction.</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Transaction record is modified to hold the lower bound and the upper bound of the transaction, with zero and infinity<SPAN style="LETTER-SPACING: 2pt"> </SPAN>being the initial values respectively. Two new queues, namely <I>CommitBeforeQueue </I>and <I>CommitAfterQueue</I>, are introduced in the transaction record. These queues are used at validation to adjust the lower and upper bounds of the transaction based on conflicts of the transaction.</P>
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>At each replica, the timestamp cache is modified to hold only the timestamps of the committed transactions. A replica<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is also responsible for maintaining the soft lock cache for all the keys in that replica.</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>APIs for performing writes at the MVCC layer (such as MVCCPut, MVCCInitPut etc.) are modified to not place the intent, and instead place soft write locks against the key intended to write. Read operation APIs in MVCC (such as MVCCGet, MVCCScan etc.) are modified to place soft read lock<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>on<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>key<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>being<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>read<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>along<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>with<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>reading<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>value<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>for<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the key.<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>New<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>MVCC<SPAN style="LETTER-SPACING: 0.9pt"> </SPAN>APIs<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>are<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>created<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>to<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>resolve<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>write<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN>soft<SPAN style="LETTER-SPACING: 0.8pt"> </SPAN><SPAN style="LETTER-SPACING: -0.2pt">lock</SPAN></P></DIV>
<DIV id=Section11 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="MARGIN-TOP: 0.02in; PAGE-BREAK-BEFORE: always; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify>on commit, and write the committed values to the key-value store and to garbage collect soft locks on abort.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>New<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>RPCs<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>are<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>created<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>update<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>record<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>at<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>the remote range for distributed transactions. Additionally, these RPCs are also used to perform validation on the transaction record in the remote range. Additional RPCs are created to execute commit or abort processing after the validation phase and to resolve remote soft locks asynchronously on commit. Another<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>RPC<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>introduced<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>garbage<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>collect<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>remote<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>soft<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>locks asynchronously on aborting a transaction.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>The Store layer is modified to handle the asynchronous resolving and garbage collecting of remote soft locks, like the asynchronous resolving of write intents that was done before, for the pessimistic timestamp allocation mechanism.</P>
<P class=western style="MARGIN-LEFT: 0.22in; LINE-HEIGHT: 0.16in" align=justify>The<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>source-code<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>changes<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>are<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>available<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>on<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>Github<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN><SPAN style="LETTER-SPACING: -0.2pt">[4].</SPAN></P>
<OL type=I start=7>
<LI>
<P style="MARGIN-TOP: 0.06in; LINE-HEIGHT: 100%" align=left><FONT style="FONT-SIZE: 11pt" size=2><SPAN style="FONT-VARIANT: small-caps"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Evaluation</SPAN></FONT></SPAN></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.03in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>CockroachDB is extensively evaluated to compare the per- formance of the fixed timestamp allocation scheme, with the dynamic timestamp ordering scheme, under varying levels of concurrent access, contention and read-write ratios.</P>
<OL type=A>
<LI>
<P style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 100%" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>Experimental</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.1pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.2pt"><I>Setup</I></SPAN></FONT></FONT></P>
<OL>
<LI>
<P style="MARGIN-TOP: 0.03in; LINE-HEIGHT: 100%" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>Benchmark </I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Description</I></SPAN></FONT></FONT></P></LI></OL></LI></OL>
<P class=western style="MARGIN-TOP: 0in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>Yahoo Cloud Serving Benchmark (YCSB) [13] is a bench- mark<SPAN style="LETTER-SPACING: 2pt"> </SPAN>for<SPAN style="LETTER-SPACING: 2pt"> </SPAN>evaluating<SPAN style="LETTER-SPACING: 2pt"> </SPAN>different<SPAN style="LETTER-SPACING: 2pt"> </SPAN>cloud<SPAN style="LETTER-SPACING: 2pt"> </SPAN>datastores.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>A<SPAN style="LETTER-SPACING: 2pt"> </SPAN>YCSB- like benchmark is designed for performing the evaluation.<SPAN style="LETTER-SPACING: 4pt"> </SPAN>The benchmark provides support for transactions, rather than only key-value operations, like in YCSB. Every transaction generated<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>by<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>benchmark<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>can<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>be<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>read-only<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>or<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>a<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>read-write transaction. Every transaction consists of 5 operations. The benchmark has 3 configurable parameters that can be altered<SPAN style="LETTER-SPACING: 2pt"> </SPAN>to test different scenarios. They are described below.</P>
<OL type=A>
<OL>
<UL>
<LI>
<P style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>Concurrent</FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>transactions. </FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>This parameter is used to</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>define</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>the</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>number</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>of</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>transactions</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>that</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>occur</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>concurrently, with a default value of 50. If the </FONT><FONT style="FONT-SIZE: 10pt" size=2><I>concurrent transactions </I></FONT><FONT style="FONT-SIZE: 10pt" size=2>is set to 50, the benchmark creates 50 threads and each thread runs a transaction sequentially i.e., if a transaction is</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>performing</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>3</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>reads</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>and</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>2</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>writes,</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>each</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>of</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>the</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>operations is blocking and the thread executes these operations one after the other.</FONT></FONT></P>
<LI>
<P style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>Contention ratio. </FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>In most real world applications, the entire dataset is not uniformly accessed. There can be some subset of data with a highly-skewed access pattern. To mimic similar behavior in our experiments, we define the</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>contention</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>ratio,</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>which</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>indicates</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>skew</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>on</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>a</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>subset of data. The contention ratio 70:30 indicates 70% of the data items will be accessed by 30% of the transactions, while the remaining 30% of the data items will be accessed by remaining 70% of the transactions. The default</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>contention</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>ratio</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>is</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>a</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>uniform</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>distribution</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>of</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>50:50, which corresponds to the lowest contention of 50%.</FONT></FONT></P>
<LI>
<P style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 10pt" size=2>Read-only ratio. </FONT></FONT><FONT style="FONT-SIZE: 10pt" size=2>In order to see how the dynamic times- tamp ordering works for various scenarios such as write intensive transactions or read-dominant transactions, we introduced the</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>read-only ratio</FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2>parameter. Read-only ratio defines the ratio or the percent of transactions that per- form only read operations. For the default value 50:50, 50% of the transactions have only read operations (5 per</FONT></FONT></P></LI></UL></OL></OL>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0.36in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>transaction) and rest of the transactions will be read-<SPAN style="LETTER-SPACING: 2pt"> </SPAN>write transactions with 3 read operations and 2 write operations. Before beginning a new transaction, we toss<SPAN style="LETTER-SPACING: 4pt"> </SPAN>a coin with the defined bias based on the read-only ratio parameter value and decide whether the transaction is going to be read-only or read-write.</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify><FONT face="Calibri, serif"><I>Experimental Configuration</I></FONT>: Every experiment was per- formed on a cluster with 3 servers. Each machine in the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>cluster<SPAN style="LETTER-SPACING: 2pt"> </SPAN>runs<SPAN style="LETTER-SPACING: 2pt"> </SPAN>a<SPAN style="LETTER-SPACING: 2pt"> </SPAN>8-core<SPAN style="LETTER-SPACING: 2pt"> </SPAN>Intel<SPAN style="LETTER-SPACING: 2pt"> </SPAN>Xeon<SPAN style="LETTER-SPACING: 2pt"> </SPAN>E5620<SPAN style="LETTER-SPACING: 2pt"> </SPAN>processor<SPAN style="LETTER-SPACING: 2pt"> </SPAN>clocked at 3.8 GHz and has 16 GB of RAM. Each server had one instance<SPAN style="LETTER-SPACING: 2pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>CockroachDB<SPAN style="LETTER-SPACING: 2pt"> </SPAN>node<SPAN style="LETTER-SPACING: 2pt"> </SPAN>running<SPAN style="LETTER-SPACING: 2pt"> </SPAN>on<SPAN style="LETTER-SPACING: 2pt"> </SPAN>it<SPAN style="LETTER-SPACING: 2pt"> </SPAN>and<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>data was replicated three ways. The experiments were run with 100,000 key-value data items without data partition, hence<SPAN style="LETTER-SPACING: 4pt"> </SPAN>the experiments did not have distributed transactions. Each data point in the benchmarking process corresponds to an experiment performed with 100,000 transactions accessing 100,000 data items. 10000 warm-up reads are performed before<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>starting<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>each<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>experimental<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>run,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>so<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>as<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>have<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>system in a steady state. Each data point reported in the results is an average<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>3<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>repetitions<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>such<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>an<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>experiment.<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>The<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>benchmark is available on Github [1].</P>
<OL type=A>
<OL start=2>
<LI>
<P style="LINE-HEIGHT: 0.15in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>Experimental</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.1pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Methodology</I></SPAN></FONT></FONT></P></LI></OL></OL>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>As<SPAN style="LETTER-SPACING: 2pt"> </SPAN>mentioned<SPAN style="LETTER-SPACING: 2pt"> </SPAN>in<SPAN style="LETTER-SPACING: 2pt"> </SPAN>V-B,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>for<SPAN style="LETTER-SPACING: 2pt"> </SPAN>dynamic<SPAN style="LETTER-SPACING: 2pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 2pt"> </SPAN>ordering, the creation of a transaction record happens on the first operation, be it a read or a write, rather than on the first write operation,<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>as<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>case<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>with<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>fixed<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>ordering.<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>In<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>fixed timestamp ordering, if the transaction consisted of all read- only<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>operations,<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>no<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>record<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>created.<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>Furthermore, the creation of the transaction record also encompasses the replication<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>transaction<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>record<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>(to<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>replicas<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>holding<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>the range associated to the first key accessed by the transaction) using Raft, both at the begin and when the commit decision is made. Hence using this approach in a read-dominant system, adds significant delays compared to the original implementa- tion of CockroachDB. There are many approaches to avoid<SPAN style="LETTER-SPACING: 4pt"> </SPAN>the bookkeeping done by MaaT for read-only transactions. One such solution was proposed by Agrawal et al. [7], which can be implemented in CockroachDB along with MaaT. A read-frontier based on this approach proposed by Agrawal et al. [7] can be continuously maintained, which provides access to the latest commit timestamp below which no transaction<SPAN style="LETTER-SPACING: 2pt"> </SPAN>can commit. The timestamp corresponding to the read frontier can<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>be<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>used<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>as<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>read<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>items<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>accessed<SPAN style="LETTER-SPACING: 1.5pt"> </SPAN>in the read-only transactions.</P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>In order to apply optimized solutions for read-only trans- actions, we first need to identify if the transaction will be<SPAN style="LETTER-SPACING: 2pt"> </SPAN>read-only. After a discussion with CockroachDB developers, we<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>learnt<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>that<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>there<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>no<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>provision<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>as<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>now<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>in<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>database<SPAN style="LETTER-SPACING: -0.3pt"> </SPAN>to specify a transaction as read-only. Implementing this change will require modification in multiple layers of the database<SPAN style="LETTER-SPACING: 2pt"> </SPAN>and<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>a<SPAN style="LETTER-SPACING: 2pt"> </SPAN>complex<SPAN style="LETTER-SPACING: 2pt"> </SPAN>task,<SPAN style="LETTER-SPACING: 2pt"> </SPAN>and<SPAN style="LETTER-SPACING: 2pt"> </SPAN>it<SPAN style="LETTER-SPACING: 2pt"> </SPAN>is<SPAN style="LETTER-SPACING: 2pt"> </SPAN>not<SPAN style="LETTER-SPACING: 2pt"> </SPAN>in<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>scope<SPAN style="LETTER-SPACING: 2pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>this paper.<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>In<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>order<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>to<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>overcome<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>this<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>issue,<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>in<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>our<SPAN style="LETTER-SPACING: 1.8pt"> </SPAN>experiments, we assume that every read-only transaction is successful and will not have the overhead of creating and maintaining a transaction record. If the optimization was to be implemented, read-only<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>would<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>hit<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>only<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>one<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>server,<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>which<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>would respond to the client without creating and replicating transac- tion<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>record<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>among<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>replicas<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>of<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>queried<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>data.<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>So<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN>we<SPAN style="LETTER-SPACING: 0.7pt"> </SPAN><SPAN style="LETTER-SPACING: -0.3pt">do</SPAN></P></DIV>
<DIV id=Section12 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="MARGIN-TOP: 0.02in; PAGE-BREAK-BEFORE: always; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in" align=justify>not account for the time taken to process and perform read- only<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>transactions.<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>Because<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>above<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>mentioned<SPAN style="LETTER-SPACING: -0.7pt"> </SPAN>assumption, the throughput displayed in the following sections will be an upper bound of the actual throughput for dynamic timestamp ordering. But the number of aborts or retries is accurate because if the read-only optimization is implemented, it does not cause any read-only transaction to fail; all the aborts will be due to read-write transactions which is captured in our <SPAN style="LETTER-SPACING: -0.1pt">experiments.</SPAN></P>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1in" align=left><SPAN class=sd-abs-pos style="WIDTH: 226px; POSITION: absolute; LEFT: 1.14in; TOP: 0.03in"></SPAN><SPAN class=sd-abs-pos style="WIDTH: 20px; POSITION: absolute; LEFT: 0.8in; TOP: 0.02in"></SPAN><SPAN id=Frame13 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.14in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 1.4in; BORDER-LEFT: medium none; TOP: 2.45in; PADDING-RIGHT: 0in">
<P style="MARGIN-LEFT: 0.01in; LINE-HEIGHT: 0.12in" dir=ltr align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 8pt" size=1>Number of Aborts/1000 </FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">txns</SPAN></FONT></FONT></P></SPAN><FONT size=2><FONT face="Calibri, serif"><FONT size=1>200</FONT></FONT></FONT> 
<P></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 1in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">150</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">100</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1.04in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">50</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1.08in; LINE-HEIGHT: 0.06in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">0</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 1.05in; LINE-HEIGHT: 0.05in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 4pt" size=1>50:50</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>60:40</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>70:30</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>80:20</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>90:10</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">99:01</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0.27in; MARGIN-RIGHT: 0.01in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 6pt" size=1>Contention</FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">Ratio</SPAN></FONT></FONT></P>
<OL type=a>
<LI>
<P style="MARGIN-TOP: 0.07in; LINE-HEIGHT: 100%" align=left><SPAN class=sd-abs-pos style="WIDTH: 225px; POSITION: absolute; LEFT: 1.15in; TOP: 0.22in"></SPAN><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Aborts</SPAN></FONT></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0.03in; MARGIN-LEFT: 0.94in" align=left><SPAN class=sd-abs-pos style="WIDTH: 20px; POSITION: absolute; LEFT: 0.8in; TOP: 0.1in"></SPAN><SPAN id=Frame12 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.14in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 1.4in; BORDER-LEFT: medium none; TOP: 3.94in; PADDING-RIGHT: 0in">
<P style="MARGIN-LEFT: 0.01in; LINE-HEIGHT: 0.12in" dir=ltr align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 8pt" size=1>Throughput</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">(Txns/sec)</SPAN></FONT></FONT></P></SPAN><FONT size=2><FONT face="Calibri, serif"><FONT size=1>3</FONT></FONT><FONT face="Calibri, serif"><FONT size=1><I>,</I></FONT></FONT><FONT face="Calibri, serif"><FONT size=1>000</FONT></FONT></FONT> 
<P></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.94in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">2</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"><I>,</I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">000</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0.94in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">1</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"><I>,</I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">000</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1.09in; LINE-HEIGHT: 0.06in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">0</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0.27in; LINE-HEIGHT: 0.06in; MARGIN-RIGHT: 0.03in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 4pt" size=1>50:50</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>60:40</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>70:30</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>80:20</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>90:10</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 2.2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">99:01</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0.27in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 6pt" size=1>Contention</FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">Ratio</SPAN></FONT></FONT></P>
<OL type=a start=2>
<LI>
<P style="MARGIN-TOP: 0.07in; LINE-HEIGHT: 100%" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Throughput</SPAN></FONT></FONT></P></LI></OL>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0.14in" align=justify><SPAN class=sd-abs-pos style="WIDTH: 226px; POSITION: absolute; LEFT: 4.8in; TOP: 0.32in"></SPAN><SPAN class=sd-abs-pos style="WIDTH: 20px; POSITION: absolute; LEFT: 4.45in; TOP: 0.3in"></SPAN><SPAN id=Frame15 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.14in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 5.05in; BORDER-LEFT: medium none; TOP: 5.56in; PADDING-RIGHT: 0in">
<P style="MARGIN-LEFT: 0.01in; LINE-HEIGHT: 0.12in" dir=ltr align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 8pt" size=1>Number</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>of</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>Aborts/1000</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">txns</SPAN></FONT></FONT></P></SPAN>Fig. 3: Varying contention with 80% read-only transactions 
<P></P>
<P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>for every 1000 transactions with increasing contention for<SPAN style="LETTER-SPACING: 2pt"> </SPAN>both dynamic and static timestamp ordering. Even for 20% write transactions, when the contention is at its highest, the fixed timestamp ordering scheme has roughly 3 times more aborts<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>for<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>every<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>1000<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>transactions<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>than<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>dynamic<SPAN style="LETTER-SPACING: -0.5pt"> </SPAN>timestamping. Figure<SPAN style="LETTER-SPACING: 2pt"> </SPAN>3b<SPAN style="LETTER-SPACING: 2pt"> </SPAN>compares<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>throughput<SPAN style="LETTER-SPACING: 2pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2pt"> </SPAN>both<SPAN style="LETTER-SPACING: 2pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2pt"> </SPAN>techniques and we observe that dynamic timestamp ordering has sig- nificantly higher throughput. In the second experiment with varied contention, the read-only ratio was lowered to 50:50, while keeping the concurrency level to 50. Figures 4a and 4b illustrate the results. As mentioned in the methodology, the throughput<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>for<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>dynamic<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>ordering<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>an<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>upper<SPAN style="LETTER-SPACING: -0.4pt"> </SPAN>bound, especially for higher read-only ratios.</P>
<P class=western style="MARGIN-TOP: 0.01in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>In both Figures 3a and 4a, although both the techniques started with small abort numbers on low contention, dynamic timestamp ordering results in significantly lower number of aborts<SPAN style="LETTER-SPACING: 3.7pt"> </SPAN>with<SPAN style="LETTER-SPACING: 3.7pt"> </SPAN>the<SPAN style="LETTER-SPACING: 3.7pt"> </SPAN>increase<SPAN style="LETTER-SPACING: 3.7pt"> </SPAN>in<SPAN style="LETTER-SPACING: 3.7pt"> </SPAN>contention.<SPAN style="LETTER-SPACING: 3.7pt"> </SPAN>When<SPAN style="LETTER-SPACING: 3.7pt"> </SPAN>contention is high, say 99:01, 99% of the transactions are trying to<SPAN style="LETTER-SPACING: 4pt"> </SPAN>access 1% of data. Dynamic timestamp ordering ends up accomodating more transactions for commitment due to its flexibility in shifting the lowerbound and upperbound of commit<SPAN style="LETTER-SPACING: 2pt"> </SPAN>timestamps<SPAN style="LETTER-SPACING: 2pt"> </SPAN>for<SPAN style="LETTER-SPACING: 2pt"> </SPAN>all<SPAN style="LETTER-SPACING: 2pt"> </SPAN>contending<SPAN style="LETTER-SPACING: 2pt"> </SPAN>transactions.<SPAN style="LETTER-SPACING: 2pt"> </SPAN>In<SPAN style="LETTER-SPACING: 2pt"> </SPAN>case of statically assigned timestamps, conflicts arise since large number of transactions are competing to access same set of data simultaneously and the timestamps are fixed, leading to higher aborts.</P>
<P class=western style="MARGIN-TOP: 0.07in" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>2)</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.4pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>Varying</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.2pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Concurrency</I></SPAN></FONT></FONT></P></DIV>
<DIV id=Section13 dir=ltr>
<P class=western style="MARGIN-TOP: 0.11in; MARGIN-LEFT: 0in"><BR></P></DIV>
<DIV id=Section14 style="column-count: 2" dir=ltr gutter="361">
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in; MARGIN-RIGHT: 0.03in" align=right><SPAN class=sd-abs-pos style="WIDTH: 226px; POSITION: absolute; LEFT: 1.14in; TOP: 0.03in"></SPAN><SPAN class=sd-abs-pos style="WIDTH: 20px; POSITION: absolute; LEFT: 0.8in; TOP: 0.02in"></SPAN><SPAN id=Frame10 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.14in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 1.4in; BORDER-LEFT: medium none; TOP: 5.81in; PADDING-RIGHT: 0in">
<P style="MARGIN-LEFT: 0.01in; LINE-HEIGHT: 0.12in" dir=ltr align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 8pt" size=1>Number of Aborts/1000 </FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">txns</SPAN></FONT></FONT></P></SPAN><FONT size=2><FONT face="Calibri, serif"><FONT size=1>300</FONT></FONT></FONT> 
<P></P>
<P class=western style="MARGIN-TOP: 0.06in; MARGIN-LEFT: 1in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">150</SPAN></FONT></FONT></FONT></P></DIV>
<DIV id=Section15 dir=ltr>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 2.11in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">100</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 1in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">200</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 2.15in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">50</SPAN></FONT></FONT></FONT></P></DIV>
<DIV id=Section16 style="column-count: 2" dir=ltr gutter="135">
<P class=western style="MARGIN-TOP: 0.03in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0.68in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">100</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1.08in; LINE-HEIGHT: 0.06in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">0</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 1.05in; LINE-HEIGHT: 0.05in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 4pt" size=1>50:50</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>60:40</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>70:30</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>80:20</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>90:10</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">99:01</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 1.54in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 6pt" size=1>Contention</FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">Ratio</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in; LINE-HEIGHT: 100%"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1in; LINE-HEIGHT: 0.05in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">0</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 1.04in; LINE-HEIGHT: 0.05in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">0</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.4pt">20</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">40</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">60</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">80</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">100</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 1.31in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 6pt" size=1>Concurrent</FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">transactions</SPAN></FONT></FONT></P>
<OL type=a>
<LI>
<P style="MARGIN-TOP: 0.07in; LINE-HEIGHT: 100%" align=left><SPAN class=sd-abs-pos style="WIDTH: 225px; POSITION: absolute; LEFT: 1.07in; TOP: 0.27in"></SPAN><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Aborts</SPAN></FONT></FONT></P></LI></OL></DIV>
<DIV id=Section17 style="column-count: 2" dir=ltr gutter="132">
<OL type=a>
<OL type=a>
<LI>
<P style="MARGIN-TOP: 0.07in; LINE-HEIGHT: 100%; MARGIN-RIGHT: 0.03in" align=right><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Aborts</SPAN></FONT></FONT></P></LI></OL></OL>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0.96in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">3</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"><I>,</I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">000</SPAN></FONT></FONT></FONT></P></DIV>
<DIV id=Section18 style="column-count: 2" dir=ltr gutter="360">
<P class=western style="MARGIN-TOP: 0.06in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0.03in" align=right><SPAN class=sd-abs-pos style="WIDTH: 225px; POSITION: absolute; LEFT: 1.15in; TOP: -0.12in"></SPAN><SPAN class=sd-abs-pos style="WIDTH: 20px; POSITION: absolute; LEFT: 0.8in; TOP: -0.03in"></SPAN><SPAN id=Frame11 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.14in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 1.4in; BORDER-LEFT: medium none; TOP: 7.31in; PADDING-RIGHT: 0in">
<P style="MARGIN-LEFT: 0.01in; LINE-HEIGHT: 0.12in" dir=ltr align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 8pt" size=1>Throughput</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">(Txns/sec)</SPAN></FONT></FONT></P></SPAN><FONT size=2><FONT face="Calibri, serif"><FONT size=1>1</FONT></FONT><FONT face="Calibri, serif"><FONT size=1><I>,</I></FONT></FONT><FONT face="Calibri, serif"><FONT size=1>500</FONT></FONT></FONT> 
<P></P>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0in; LINE-HEIGHT: 100%"><BR></P>
<P class=western style="MARGIN-LEFT: 0.94in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">2</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"><I>,</I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">000</SPAN></FONT></FONT></FONT></P></DIV>
<DIV id=Section19 dir=ltr>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 0in"><BR></P></DIV>
<DIV id=Section20 style="column-count: 2" dir=ltr gutter="360">
<P class=western style="MARGIN-TOP: 0.06in; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0.03in" align=right><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">1</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"><I>,</I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">000</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.01in; MARGIN-LEFT: 0in; LINE-HEIGHT: 100%"><BR></P>
<P class=western style="MARGIN-LEFT: 0.94in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">1</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"><I>,</I></SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">000</SPAN></FONT></FONT></FONT></P></DIV>
<DIV id=Section21 dir=ltr>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0in"><BR></P></DIV>
<DIV id=Section22 style="column-count: 2" dir=ltr gutter="8">
<P class=western style="MARGIN-TOP: 0.06in; MARGIN-LEFT: 1.01in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">500</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1.09in; LINE-HEIGHT: 0.06in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">0</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 1.06in; LINE-HEIGHT: 0.06in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 4pt" size=1>50:50</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>60:40</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>70:30</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>80:20</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 3.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1>90:10</FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: 2.2pt"> </SPAN></FONT><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">99:01</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 0.27in" align=center><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 6pt" size=1>Contention</FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">Ratio</SPAN></FONT></FONT></P>
<OL type=a>
<OL type=a start=2>
<LI>
<P style="MARGIN-TOP: 0.07in; LINE-HEIGHT: 100%" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Throughput</SPAN></FONT></FONT></P></LI></OL></OL>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0.14in">Fig.<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>4:<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>Varying<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>contention<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>with<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>50%<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>read-only<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">transactions</SPAN></P>
<P class=western style="MARGIN-TOP: 0.09in; MARGIN-LEFT: 0in"><BR></P>
<OL type=A start=2>
<LI>
<P style="MARGIN-TOP: 0in; LINE-HEIGHT: 100%" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>Evaluation</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.2pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Results</I></SPAN></FONT></FONT></P>
<OL>
<LI>
<P style="MARGIN-TOP: 0.04in; LINE-HEIGHT: 100%" align=justify><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Varying</I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I> </I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.1pt"><I>Contention</I></SPAN></FONT></FONT></P></LI></OL></LI></OL>
<P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.03in; TEXT-INDENT: 0.14in" align=justify>First, we analyze the performance of the concurrency- control schemes under varying levels of contention on the<SPAN style="LETTER-SPACING: 4pt"> </SPAN>data items. We performed two experiments with varying contention from 50% to 99%. In one, we set the read-only<SPAN style="LETTER-SPACING: 2pt"> </SPAN>ratio and concurrency level with the default values of 80:20 and<SPAN style="LETTER-SPACING: 2.3pt"> </SPAN>50<SPAN style="LETTER-SPACING: 2.3pt"> </SPAN>respectively.<SPAN style="LETTER-SPACING: 2.3pt"> </SPAN>Figure<SPAN style="LETTER-SPACING: 2.3pt"> </SPAN>3a<SPAN style="LETTER-SPACING: 2.3pt"> </SPAN>plots<SPAN style="LETTER-SPACING: 2.3pt"> </SPAN>the<SPAN style="LETTER-SPACING: 2.3pt"> </SPAN>number<SPAN style="LETTER-SPACING: 2.3pt"> </SPAN>of<SPAN style="LETTER-SPACING: 2.3pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">aborts</SPAN></P>
<P class=western style="MARGIN-TOP: 0.06in; MARGIN-LEFT: 0in; LINE-HEIGHT: 100%"><BR></P>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 1.09in; LINE-HEIGHT: 0.05in" align=left><SPAN class=sd-abs-pos style="WIDTH: 20px; POSITION: absolute; LEFT: 0.8in; TOP: -0.85in"></SPAN><SPAN id=Frame14 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.14in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 5.05in; BORDER-LEFT: medium none; TOP: 7.27in; PADDING-RIGHT: 0in">
<P style="MARGIN-LEFT: 0.01in; LINE-HEIGHT: 0.12in" dir=ltr align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 8pt" size=1>Throughput</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.1pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">(Txns/sec)</SPAN></FONT></FONT></P></SPAN><FONT size=2><FONT face="Calibri, serif"><FONT size=1>0</FONT></FONT></FONT> 
<P></P>
<P class=western style="MARGIN-LEFT: 1.13in; LINE-HEIGHT: 0.05in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.5pt">0</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.4pt">20</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">40</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">60</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">80</SPAN></FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1> </FONT></FONT><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">100</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; MARGIN-LEFT: 1.4in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 6pt" size=1>Concurrent</FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.3pt"> </SPAN></FONT><FONT style="FONT-SIZE: 6pt" size=1><SPAN style="LETTER-SPACING: -0.1pt">transactions</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.07in; MARGIN-LEFT: 1.44in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 9pt" size=2>(b)</FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: 0.7pt"> </SPAN></FONT><FONT style="FONT-SIZE: 9pt" size=2><SPAN style="LETTER-SPACING: -0.1pt">Throughput</SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0in; MARGIN-LEFT: 0.42in">Fig.<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>5:<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>Varying<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>concurrency<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>with<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN>99%<SPAN style="LETTER-SPACING: 0.4pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">contention</SPAN></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>Next, the performance of the concurrency control protocols is analyzed under varying concurrent number of transactions. The experiment is performed with the high contention ratio of 99:01 and 80% read-only transactions. Figure 5 illustrates the results.<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>When<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>workload<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>is<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>highly<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>concurrent<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>(90<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>concurrent threads), fixed timestamp ordering has more than 2x aborts compared<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>to<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>number<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>encountered<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>with<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>dynamic<SPAN style="LETTER-SPACING: -0.2pt"> </SPAN>timestamp ordering. This difference is seen because when many transac- tions<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>are<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>concurrently<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>accessing<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>small<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>set<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>data,<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>the<SPAN style="LETTER-SPACING: -0.1pt"> </SPAN>dynamic timetamping<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>technique<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>adjusts<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>the<SPAN style="LETTER-SPACING: 0.6pt"> </SPAN>commit<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN>timestamp<SPAN style="LETTER-SPACING: 0.5pt"> </SPAN><SPAN style="LETTER-SPACING: -0.1pt">bounds</SPAN></P></DIV>
<P class=western style="MARGIN-TOP: 0.02in; PAGE-BREAK-BEFORE: always; LINE-HEIGHT: 103%">of<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>concurrent<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>transactions,<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>allowing<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>many<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>of<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>those<SPAN style="LETTER-SPACING: -0.6pt"> </SPAN>transactions to commit which would have failed otherwise.</P>
<P class=western style="MARGIN-TOP: 0.04in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 10pt" size=2><I>3)</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 1.4pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>Varying</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.3pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><I>Read-only</I></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: 0.3pt"><I> </I></SPAN></FONT><FONT style="FONT-SIZE: 10pt" size=2><SPAN style="LETTER-SPACING: -0.2pt"><I>ratio</I></SPAN></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.04in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1.03in" align=left><SPAN class=sd-abs-pos style="WIDTH: 225px; POSITION: absolute; LEFT: 1.14in; TOP: 0.03in"></SPAN><SPAN class=sd-abs-pos style="WIDTH: 20px; POSITION: absolute; LEFT: 0.8in; TOP: 0.02in"></SPAN><SPAN id=Frame16 style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 0.14in; BACKGROUND: #ffffff; BORDER-BOTTOM: medium none; POSITION: absolute; PADDING-BOTTOM: 0in; PADDING-TOP: 0in; PADDING-LEFT: 0in; LEFT: 1.4in; BORDER-LEFT: medium none; TOP: 1.52in; PADDING-RIGHT: 0in">
<P style="MARGIN-LEFT: 0.01in; LINE-HEIGHT: 0.12in" dir=ltr align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT style="FONT-SIZE: 8pt" size=1>Number</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>of</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.4pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1>Aborts/1000</FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: 0.5pt"> </SPAN></FONT><FONT style="FONT-SIZE: 8pt" size=1><SPAN style="LETTER-SPACING: -0.2pt">txns</SPAN></FONT></FONT></P></SPAN><FONT size=2><FONT face="Calibri, serif"><FONT size=1>30</FONT></FONT></FONT> 
<P></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1.03in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">20</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-TOP: 0.05in; MARGIN-LEFT: 0in"><BR></P>
<P class=western style="MARGIN-LEFT: 1.03in; LINE-HEIGHT: 0.07in" align=left><FONT style="FONT-SIZE: 11pt" size=2><FONT face="Calibri, serif"><FONT style="FONT-SIZE: 4pt" size=1><SPAN style="LETTER-SPACING: -0.3pt">10</SPAN></FONT></FONT></FONT></P>
<P class=western style="MARGIN-TOP: 0.02in; LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in" align=justify>mechanisms of reducing the overhead of dynamic timestamp- <SPAN style="LETTER-SPACING: -0.2pt">ing.</SPAN></P>
<P class=western style="LINE-HEIGHT: 103%; MARGIN-RIGHT: 0.08in; TEXT-INDENT: 0.14in" align=justify>To the best of our knowledge, this is the first evaluation of dynamic timestamp allocation technique in a commercial and production cloud database such as CockroachDB.