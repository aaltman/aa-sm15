<b> : </b>A Quick Recap of Acquire and Release Semantics</H2>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 1.5em; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">This example will begin by passing a small amount of data between threads using<SPAN>&nbsp;</SPAN><A style="FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(33,175,211); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; transition: color 0.3s" href="http://preshing.com/20120913/acquire-and-release-semantics">acquire and release semantics</A>. Later, we&#8217;ll modify it to use consume semantics instead.</P>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 1.5em; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">First, let&#8217;s declare two shared variables.<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Guard</CODE><SPAN>&nbsp;</SPAN>is a C++11 atomic integer, while<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Payload</CODE><SPAN>&nbsp;</SPAN>is just a plain<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">int</CODE>. Both variables are initially zero.</P>
<DIV style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">
<DIV class=CodeRay style='FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Monaco, "Courier New", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 14px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(239,239,239); font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit'>
<DIV class=code style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; WIDTH: 889px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit"><PRE style="FONT-SIZE: 13px; OVERFLOW: auto; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(41,47,49); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: 0px; LINE-HEIGHT: 1.38em; PADDING-RIGHT: 1em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">atomic&lt;<SPAN class=predefined-type style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,119,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">int</SPAN>&gt; Guard(<SPAN class=integer style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(0,153,153); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">0</SPAN>);
<SPAN class=predefined-type style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,119,68); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">int</SPAN> Payload = <SPAN class=integer style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(0,153,153); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">0</SPAN>;
</PRE></DIV></DIV></DIV>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 1.5em; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">The main thread sits in a loop, repeatedly attempting the following sequence of reads. Basically, the purpose of<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Guard</CODE><SPAN>&nbsp;</SPAN>is to protect access to<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Payload</CODE><SPAN>&nbsp;</SPAN>using acquire semantics. The main thread won&#8217;t attempt to read from<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Payload</CODE><SPAN>&nbsp;</SPAN>until<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Guard</CODE><SPAN>&nbsp;</SPAN>is non-zero.</P>
<DIV style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">
<DIV class=CodeRay style='FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Monaco, "Courier New", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 14px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(239,239,239); font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit'>
<DIV class=code style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; WIDTH: 889px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit"><PRE style="FONT-SIZE: 13px; OVERFLOW: auto; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(41,47,49); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: 0px; LINE-HEIGHT: 1.38em; PADDING-RIGHT: 1em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">g = Guard.load(<SPAN class=highlight style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(255,255,112); BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 1.8em; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit"><FONT color=#292f31 face="Courier New">memory_order_acquire</FONT></SPAN>);
<SPAN class=keyword style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">if</SPAN> (g != <SPAN class=integer style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(0,153,153); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">0</SPAN>)
    p = Payload;
</PRE></DIV></DIV></DIV>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 1.5em; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">At some point, an asynchronous task (running in another thread) comes along, assigns 42 to<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Payload</CODE>, then sets<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Guard</CODE><SPAN>&nbsp;</SPAN>to 1 with release semantics.</P>
<DIV style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">
<DIV class=CodeRay style='FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: Monaco, "Courier New", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 14px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(239,239,239); font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit'>
<DIV class=code style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; WIDTH: 889px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit"><PRE style="FONT-SIZE: 13px; OVERFLOW: auto; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(41,47,49); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: 0px; LINE-HEIGHT: 1.38em; PADDING-RIGHT: 1em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Payload = <SPAN class=integer style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(0,153,153); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">42</SPAN>;
Guard.store(<SPAN class=integer style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(0,153,153); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">1</SPAN>, <SPAN class=highlight style="FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(255,255,112); BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 1.8em; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit"><FONT color=#292f31 face="Courier New">memory_order_release</FONT></SPAN>);
</PRE></DIV></DIV></DIV>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 1.5em; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">Readers should be familiar with this pattern by now; we&#8217;ve seen it several times before on this blog. Once the asynchronous task writes to<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Guard</CODE>, and the main thread reads it, it means that the write-release<SPAN>&nbsp;</SPAN><A style="FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(33,175,211); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; transition: color 0.3s" href="http://preshing.com/20130823/the-synchronizes-with-relation"><EM style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; FONT-STYLE: italic; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">synchronized-with</EM></A><SPAN>&nbsp;</SPAN>the read-acquire. In that case, we are guaranteed that<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">p</CODE><SPAN>&nbsp;</SPAN>will equal 42, no matter what platform we run this example on.</P>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 1.5em; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit"><IMG class=center style="FONT-SIZE: 16px; MAX-WIDTH: 100%; BORDER-TOP: 0px; HEIGHT: auto; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px auto 1.5em; DISPLAY: block; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit" src="https://preshing.com/images/synchronizes-with-guard.png"></P>
<P style="FONT-SIZE: 16px; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px 0px 1.5em; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit">Here, we&#8217;ve used acquire and release semantics to pass a simple<SPAN>&nbsp;</SPAN><A style="FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(33,175,211); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; transition: color 0.3s" href="http://preshing.com/20130618/atomic-vs-non-atomic-operations">non-atomic</A><SPAN>&nbsp;</SPAN>integer<SPAN>&nbsp;</SPAN><CODE style="FONT-SIZE: 0.9em; BORDER-TOP: rgb(238,238,238) 1px solid; FONT-FAMILY: cascadia_code, monospace; BORDER-RIGHT: rgb(238,238,238) 1px solid; VERTICAL-ALIGN: baseline; BACKGROUND: rgb(246,246,246); BORDER-BOTTOM: rgb(238,238,238) 1px solid; COLOR: rgb(70,70,70); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0.3em; BORDER-LEFT: rgb(238,238,238) 1px solid; MARGIN: -1px 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5em; PADDING-RIGHT: 0.3em; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; border-radius: 0.4em">Payload</CODE><SPAN>&nbsp;</SPAN>between threads, but the pattern works equally well with larger payloads, as demonstrated in<SPAN>&nbsp;</SPAN><A style="FONT-SIZE: 16px; TEXT-DECORATION: none; BORDER-TOP: 0px; FONT-FAMILY: inherit; BORDER-RIGHT: 0px; VERTICAL-ALIGN: baseline; BORDER-BOTTOM: 0px; COLOR: rgb(33,175,211); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; font-stretch: inherit; font-optical-sizing: inherit; font-size-adjust: inherit; font-kerning: inherit; font-feature-settings: inherit; font-variation-settings: inherit; transition: color 0.3s" href="http://preshing.com/20130823/the-synchronizes-with-relation">previous posts</A>.